bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  month);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
2	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
3	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
4	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	189	None	replace
5	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	189	None	replace
6	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	189	None	replace
7	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  year);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	189	None	replace
8	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	212	None	replace
9	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	212	None	replace
10	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	212	None	replace
11	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	212	None	replace
12	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  iMax);  [CE]  cannot  find  symbol  yearToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	212	None	replace
13	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  iMax);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	212	None	replace
14	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	212	None	replace
15	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	212	None	replace
16	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisHeap);  [CE]  cannot  find  symbol  yearToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	143	None	replace
17	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisHeap);  [CE]  cannot  find  symbol  mois  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  mois	143	None	replace
18	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeap,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeap,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeap,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	143	None	replace
19	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	193	None	replace
20	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeap);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  months	193	None	replace
21	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
22	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	193	None	replace
23	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	193	None	replace
24	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  year	193	None	replace
25	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  months	193	None	replace
26	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	210	1	replace
27	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [FE]  ExceptionInInitializerError  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	210	1	replace
28	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	210	None	replace
29	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [timeout]  [CE]  illegal  start  of  expression  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [timeout]  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [timeout]	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
30	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	210	8	replace
31	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	210	8	replace
32	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  MIN,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	210	None	replace
33	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	210	None	replace
34	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	256	None	replace
35	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	256	None	replace
36	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	256	None	replace
37	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	256	None	replace
38	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	256	None	replace
39	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	256	None	replace
40	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocalMillis);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocalMillis);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	256	None	replace
41	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,<null>)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  null);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,<null>)	256	None	replace
42	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocale);  [CE]  cannot  find  symbol  thisLocale  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocale);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLocale);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocale	256	None	replace
43	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	80	None	replace
44	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  2);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	80	None	replace
45	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  3);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  3);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	80	None	replace
46	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  *  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  *  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  *  1);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	80	None	replace
47	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	211	None	replace
48	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	211	None	replace
49	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iHeapMonth);  [CE]  cannot  find  symbol  months  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  months	211	None	replace
50	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisYear);  [CE]  cannot  find  symbol  mois  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  mois	27	None	replace
51	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	96	None	replace
52	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	96	None	replace
53	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	96	None	replace
54	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	96	None	replace
55	[BUG]  [BUGGY]  char  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  char  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	char  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	96	None	replace
56	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[timeout]	96	None	replace
57	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	308	None	replace
58	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	308	None	replace
59	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	308	None	replace
60	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  month);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	308	None	replace
61	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  months);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	308	None	replace
62	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	208	None	replace
63	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	208	None	replace
64	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	208	None	replace
65	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	208	None	replace
66	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	208	None	replace
67	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocalMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocalMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	208	None	replace
68	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	208	None	replace
69	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  datePart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  datePart);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  datePart	208	None	replace
70	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocale);  [CE]  cannot  find  symbol  thisLocale  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocale);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisLocale);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocale	208	None	replace
71	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
72	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMillisOfDay(instant,  month);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMillisOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMillisOfDay(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	36	None	replace
73	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	86	None	replace
74	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	86	None	replace
75	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	86	None	replace
76	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	86	None	replace
77	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	86	None	replace
78	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	86	None	replace
79	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	86	None	replace
80	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	86	None	replace
81	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
82	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
83	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
84	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
85	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  -  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
86	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
87	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
88	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
89	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	76	None	replace
90	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  minuendMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	76	None	replace
91	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	76	None	replace
92	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	76	None	replace
93	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	76	None	replace
94	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)/  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)/  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)/  1;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	184	None	replace
95	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  2;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  2;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	184	None	replace
96	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month),  iMax  -  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month),  iMax  -  1;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	184	None	replace
97	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  3;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  3;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	184	None	replace
98	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1  +  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1  +  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1  +  1;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	184	None	replace
99	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month),  iLeapMonth  -  1;  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month),  iLeapMonth  -  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month),  iLeapMonth  -  1;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	184	None	replace
100	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year  +  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	71	None	replace
101	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  month);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	71	None	replace
102	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year  -  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	71	None	replace
103	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	290	None	replace
104	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	290	None	replace
105	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  year  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	290	None	replace
106	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	290	None	replace
107	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMillis);  [CE]  cannot  find  symbol  thisHeapMillis  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMillis);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMillis	290	None	replace
108	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	290	None	replace
109	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  mois,  thisHeapMonth);  [CE]  cannot  find  symbol  mois  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  mois,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  mois,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  mois	290	None	replace
110	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeight);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	292	None	replace
111	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	292	None	replace
112	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisJear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisJear	292	None	replace
113	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	29	None	replace
114	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeart);  [CE]  cannot  find  symbol  thisHeart  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeart);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeart	29	None	replace
115	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	237	None	replace
116	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	237	None	replace
117	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	237	None	replace
118	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	237	None	replace
119	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	237	None	replace
120	[BUG]  [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	237	None	replace
121	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
122	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
123	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
124	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  max);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  max);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  max);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
125	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
126	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  1);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
127	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendInstant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendInstant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendInstant,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
128	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  +  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear  +  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	9	None	replace
129	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1),  thisYear);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1),  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1),  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  ';'  expected	9	None	replace
130	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  2);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	9	None	replace
131	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  *  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  *  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	9	None	replace
132	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [timeout]  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[timeout]	9	None	replace
133	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [timeout]  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[timeout]	9	None	replace
134	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  year  +  1);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	136	None	replace
135	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  year  -  1);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	136	None	replace
136	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  months);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	136	None	replace
137	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  day);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	136	None	replace
138	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    2);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	56	1	replace
139	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);  [FE]  ExceptionInInitializerError  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    2);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	56	1	replace
140	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  2);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    2);    [timeout]    	non-compiled	[timeout]	56	None	replace
141	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  2);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    2);    [timeout]    	non-compiled	[timeout]	56	None	replace
142	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    2);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	56	8	replace
143	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    2);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	56	8	replace
144	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfYear(instant,    thisYear,    month);    	compilable	  [FE]  ExceptionInInitializerError  	174	1	replace
145	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [FE]  ExceptionInInitializerError  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfYear(instant,    thisYear,    month);    	compilable	  [FE]  ExceptionInInitializerError  	174	1	replace
146	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
147	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	172	None	replace
148	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	172	None	replace
149	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	172	None	replace
150	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	20	None	replace
151	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	20	None	replace
152	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay,  thisYear);  [CE]  cannot  find  symbol  thisDay  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	20	None	replace
153	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	20	None	replace
154	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	20	None	replace
155	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	20	None	replace
156	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	20	None	replace
157	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
158	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
159	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant);  [CE]  no  suitable  method  found  for  dayOfMonth(long)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long)	224	None	replace
160	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth();  [CE]  incompatible  types  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth();  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.dayOfMonth();	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  incompatible  types	224	None	replace
161	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	224	None	replace
162	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeek);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	144	None	replace
163	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear);  [CE]  cannot  find  symbol  thisyear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisyear	144	None	replace
164	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);  [CE]  cannot  find  symbol  thisHour  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHour	144	None	replace
165	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHap);  [CE]  cannot  find  symbol  thisHap  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHap);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHap	144	None	replace
166	[BUG]  [BUGGY]  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDOm    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	297	None	replace
167	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	156	None	replace
168	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	156	None	replace
169	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	156	None	replace
170	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	156	None	replace
171	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  ')'  expected	218	None	replace
172	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  [CE]  '.class'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  '.class'  expected	218	None	replace
173	[BUG]  [BUGGY]  if(thisYear  ==  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  ==  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  ==  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  ')'  expected	218	None	replace
174	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  '.class'  expected	218	None	replace
175	[BUG]  [BUGGY]  if(thisYear  ==  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  [CE]  '.class'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  ==  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  ==  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  '.class'  expected	218	None	replace
176	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  incomparable  types:  int  and  <null>	218	None	replace
177	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
178	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
179	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
180	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
181	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
182	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
183	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
184	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
185	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
186	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	108	None	replace
187	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
188	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	108	None	replace
189	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	108	None	replace
190	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	108	None	replace
191	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	108	None	replace
192	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
193	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
194	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendInstant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendInstant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendInstant,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
195	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  max);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  max);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  max);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
196	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  0,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  0,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  0,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
197	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  0,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  0,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  0,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
198	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
199	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
200	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  instant);  [CE]  no  suitable  method  found  for  getDayOfMonth(int,long)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  instant);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(int,long)	145	None	replace
201	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  year);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	145	None	replace
202	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	140	None	replace
203	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	140	None	replace
204	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	140	None	replace
205	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  month);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	140	None	replace
206	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisyear);  [CE]  cannot  find  symbol  thisyear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisyear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisyear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisyear	142	None	replace
207	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisWeek);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisWeek);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	142	None	replace
208	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHour);  [CE]  cannot  find  symbol  thisHour  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHour);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHour	142	None	replace
209	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisXear);  [CE]  cannot  find  symbol  thisXear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisXear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisXear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisXear	142	None	replace
210	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHear);  [CE]  cannot  find  symbol  thisHear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHear	142	None	replace
211	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	312	None	replace
212	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	312	None	replace
213	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  timePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  timePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  timePart);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	312	None	replace
214	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  possible  loss  of  precision  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	char  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    instant);    	non-compiled	[CE]  possible  loss  of  precision	223	None	replace
215	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	223	None	replace
216	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	223	None	replace
217	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    instant);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)	223	None	replace
218	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
219	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month  +  1);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
220	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iHeapMonth);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	255	None	replace
221	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iLeapMonth);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
222	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month)-  1;	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
223	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  iMax);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
224	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month)+  1;	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
225	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	129	None	replace
226	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	129	None	replace
227	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	129	None	replace
228	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  >=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  >=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  >=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	129	None	replace
229	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [CE]  '.class'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	129	None	replace
230	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	77	None	replace
231	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	77	None	replace
232	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth,  iMin);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	77	None	replace
233	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	77	None	replace
234	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	77	None	replace
235	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year,  month);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	130	None	replace
236	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	130	None	replace
237	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year  +  1);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	130	None	replace
238	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	100	None	replace
239	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	100	None	replace
240	[BUG]  [BUGGY]  long  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisDom  =  iChronology.getDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayofMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	177	None	replace
241	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month).intValue;  [CE]  int  cannot  be  dereferenced  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month).intValue;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month).intValue;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month).intValue;    	non-compiled	[CE]  int  cannot  be  dereferenced	260	None	replace
242	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month).intValue;  [CE]  cannot  find  symbol  [FE]            ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month).intValue;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month).intValue;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month).intValue;    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
243	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month).intValue;  [CE]  int  cannot  be  dereferenced  [FE]              ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month).intValue;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month).intValue;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month).intValue;    	non-compiled	[CE]  int  cannot  be  dereferenced	260	None	replace
244	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month).intValue;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month).intValue;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month).intValue;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month).intValue;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	260	None	replace
245	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
246	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
247	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
248	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
249	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
250	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
251	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	70	None	replace
252	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;  [CE]  cannot  find  symbol  thisDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)/  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	23	None	replace
253	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;  [CE]  cannot  find  symbol  thisDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  2;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	23	None	replace
254	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [CE]  cannot  find  symbol  thisDom  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	23	None	replace
255	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;  [CE]  cannot  find  symbol  thisDom  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  3;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	23	None	replace
256	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [CE]  possible  loss  of  precision  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1L;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
257	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [CE]  cannot  find  symbol  thisDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	23	None	replace
258	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	5	None	replace
259	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	5	None	replace
260	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	5	None	replace
261	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  isize,  iLeapMonth);  [CE]  cannot  find  symbol  isize  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  isize,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  isize,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  isize	5	None	replace
262	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	5	None	replace
263	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayOfMonth,  iLeapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayOfMonth,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayOfMonth,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	5	None	replace
264	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear,  iLeapMonth);  [CE]  cannot  find  symbol  thisyear  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisyear,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisyear	5	None	replace
265	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisDom	162	None	replace
266	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  months	162	None	replace
267	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
268	[BUG]  [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	162	None	replace
269	[BUG]  [BUGGY]  nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	nt  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
270	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisMinute);    	compilable	  [FE]  ExceptionInInitializerError  	118	1	replace
271	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [FE]  ExceptionInInitializerError  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisMinute);    	compilable	  [FE]  ExceptionInInitializerError  	118	1	replace
272	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year  +  1);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  year	213	None	replace
273	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  +  1);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  months	213	None	replace
274	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	213	None	replace
275	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day  +  1);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  day  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  day	213	None	replace
276	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois  +  1);  [CE]  cannot  find  symbol  mois  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  mois	213	None	replace
277	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
278	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  +  1);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
279	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month  -  1);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
280	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)+  1;	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
281	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month)-  1;	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
282	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month),  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month),  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  ';'  expected	17	None	replace
283	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLastMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	280	None	replace
284	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	280	None	replace
285	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  null);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,<null>)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  null);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,<null>)	83	None	replace
286	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  months);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	83	None	replace
287	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  1);  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	83	None	replace
288	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	283	None	replace
289	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisDom	283	None	replace
290	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
291	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
292	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
293	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
294	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MILLIS_PER_DAY);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MILLIS_PER_DAY);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
295	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
296	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  day,  thisYear);  [CE]  cannot  find  symbol  day  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  day,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  day,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    year,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  day	119	None	replace
297	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	188	None	replace
298	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisDay);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisDay	188	None	replace
299	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  months	188	None	replace
300	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  year	188	None	replace
301	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisJear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisJear	188	None	replace
302	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisDay);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisDay);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  months	188	None	replace
303	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
304	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
305	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  yearToUse);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
306	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  iHeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
307	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	114	None	replace
308	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  year  +  1);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	114	None	replace
309	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
310	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	253	None	replace
311	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
312	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	253	None	replace
313	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
314	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	253	None	replace
315	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	253	None	replace
316	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
317	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [CE]  variable  thisDom  might  not  have  been  initialized  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisDom);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  variable  thisDom  might  not  have  been  initialized	261	None	replace
318	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDom);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	261	None	replace
319	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	261	None	replace
320	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	126	None	replace
321	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisYear;  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisYear;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisYear;  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
322	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	126	None	replace
323	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
324	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  2);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
325	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
326	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
327	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
328	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
329	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
330	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
331	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	149	8	replace
332	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	149	8	replace
333	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	149	None	replace
334	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
335	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	149	8	replace
336	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	149	8	replace
337	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  ExceptionInInitializerError  	149	1	replace
338	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  2);  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  ExceptionInInitializerError  	149	1	replace
339	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	61	None	replace
340	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	55	None	replace
341	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  *  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  *  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	55	None	replace
342	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [timeout]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [timeout]  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [timeout]	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
343	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1,  month);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	55	None	replace
344	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
345	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
346	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
347	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
348	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMin,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMin,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMin,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
349	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
350	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
351	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
352	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
353	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MILLIS_PER_DAY);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MILLIS_PER_DAY);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
354	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
355	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)/  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	49	None	replace
356	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1  +  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	49	None	replace
357	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  2;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  2;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	49	None	replace
358	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1L;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	49	None	replace
359	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	49	None	replace
360	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  3;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  3;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	49	None	replace
361	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
362	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
363	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
364	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
365	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
366	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
367	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
368	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
369	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMinute);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	182	None	replace
370	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	182	None	replace
371	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	182	None	replace
372	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMinue);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMinue);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMinue);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	182	None	replace
373	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	264	None	replace
374	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	264	None	replace
375	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	264	None	replace
376	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	264	None	replace
377	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLocalMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLocalMillis);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	264	None	replace
378	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  null);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	264	None	replace
379	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisWeek);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisWeek);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	264	None	replace
380	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	264	None	replace
381	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
382	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
383	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
384	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
385	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	203	None	replace
386	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	203	None	replace
387	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisYear);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	203	None	replace
388	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMillis	203	None	replace
389	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMinute	203	None	replace
390	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeight	203	None	replace
391	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  null);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,<null>)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  null);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,<null>)	203	None	replace
392	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
393	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
394	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
395	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
396	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
397	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
398	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMillisOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
399	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
400	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
401	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
402	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMinthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMinthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMinthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
403	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getSecondOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getSecondOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getSecondOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
404	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	105	None	replace
405	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	105	None	replace
406	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
407	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1));  [CE]  ';'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1));	  	non-compiled	[CE]  ';'  expected	52	None	add
408	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
409	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  year  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  year  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  year  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
410	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  months  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  months  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  months  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
411	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  2);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
412	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfYear(instant,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfYear(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  thisDom  =  iChronology.getDayOfYear(instant,  month  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
413	[BUG]  [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  time);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisYear  =  iChronology.getMonthOfYear(instant,  time);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisYear  =  iChronology.getMonthOfYear(instant,  time);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    time);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	246	None	replace
414	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
415	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1));  [CE]  ';'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1));	  	non-compiled	[CE]  ';'  expected	58	None	add
416	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
417	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
418	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  2);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
419	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
420	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
421	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  months);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  months	40	None	replace
422	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  months);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  months	40	None	replace
423	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth,  thisYear);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	26	None	replace
424	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	26	None	replace
425	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth,  thisLeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	26	None	replace
426	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	98	None	replace
427	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	98	None	replace
428	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  timePart,  thisYear);  [CE]  cannot  find  symbol  timePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  timePart,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  timePart,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  timePart	98	None	replace
429	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMax);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
430	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
431	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
432	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  -  1);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
433	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
434	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
435	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)+  1;	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
436	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month)-  1;	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
437	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	87	None	replace
438	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);  [CE]  cannot  find  symbol  hour  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	87	None	replace
439	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	87	None	replace
440	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  months);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  months	87	None	replace
441	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,<null>)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  null);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,<null>)	87	None	replace
442	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
443	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	302	None	replace
444	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	236	None	replace
445	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  new  Month(month));  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  new  Month(month));  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  new  Month(month));	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	236	None	replace
446	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisDom	236	None	replace
447	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	21	None	replace
448	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
449	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);  [CE]  cannot  find  symbol  thisDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
450	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
451	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);  [CE]  cannot  find  symbol  thisDom  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  *  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
452	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  thisDay	315	None	replace
453	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  months	315	None	replace
454	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  year	315	None	replace
455	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	315	None	replace
456	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
457	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
458	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
459	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
460	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	295	None	replace
461	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeight);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	295	None	replace
462	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	284	None	replace
463	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month;  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  ')'  expected	284	None	replace
464	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
465	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
466	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
467	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
468	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  2);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  2);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
469	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisYear);	  int    month    =    iChronology.getMonthOfYear(thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	121	None	replace
470	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisDay);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
471	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
472	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
473	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
474	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeight);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeight);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
475	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
476	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
477	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
478	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  max);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  max);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  max);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
479	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
480	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
481	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
482	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  valueToAdd);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  valueToAdd);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  valueToAdd);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
483	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  month);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    yearToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	133	None	replace
484	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    yearToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	133	None	replace
485	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    yearToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	133	None	replace
486	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLastMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	306	None	replace
487	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLastMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	306	None	replace
488	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	306	None	replace
489	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearOfMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearOfMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	296	None	replace
490	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)/  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)/  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  ExceptionInInitializerError  	151	1	replace
491	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)/  1;  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)/  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)/  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  ExceptionInInitializerError  	151	1	replace
492	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	151	8	replace
493	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	151	8	replace
494	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month)+  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
495	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  ExceptionInInitializerError  	151	1	replace
496	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  ExceptionInInitializerError  	151	1	replace
497	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  3;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  3;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  ExceptionInInitializerError  	151	1	replace
498	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  3;  [FE]  ExceptionInInitializerError  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  3;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  3;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	compilable	  [FE]  ExceptionInInitializerError  	151	1	replace
499	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	120	None	replace
500	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisHeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	134	None	replace
501	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisHeapMonth);  [CE]  cannot  find  symbol  mois  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  mois	134	None	replace
502	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisHeapMonth);  [CE]  cannot  find  symbol  year  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	134	None	replace
503	[BUG]  [BUGGY]  int  thisDOm  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDOm  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDOm  =  iChronology.getDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDOm    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	249	None	replace
504	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
505	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
506	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  year)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  year)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  year)-  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
507	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  months)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  months)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  months)-  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
508	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfYear(instant,  month)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfYear(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDom  =  iChronology.getDayOfYear(instant,  month)-  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
509	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
510	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
511	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  2);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
512	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
513	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
514	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  3);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  3);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
515	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  cannot  find  symbol	239	None	replace
516	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	66	None	replace
517	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	66	None	replace
518	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	66	None	replace
519	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
520	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
521	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisYear,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
522	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin,  thisYear);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
523	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
524	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  month);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
525	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  year);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
526	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
527	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  months);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
528	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)/  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)/  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)/  1;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	311	None	replace
529	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  2;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  2;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	311	None	replace
530	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1  +  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1  +  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1  +  1;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	311	None	replace
531	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month),  iMax  -  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month),  iMax  -  1;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	311	None	replace
532	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth();  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth();	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	301	None	replace
533	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	214	None	replace
534	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  this  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  this  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  this	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	214	None	replace
535	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  [CE]  '.class'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	214	None	replace
536	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	214	None	replace
537	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
538	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  year	199	None	replace
539	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisyear);  [CE]  cannot  find  symbol  thisyear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisyear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisyear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisyear	199	None	replace
540	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  datePart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  datePart);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  datePart	199	None	replace
541	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  hour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  hour);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  hour	199	None	replace
542	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	25	None	replace
543	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	25	None	replace
544	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMillis	25	None	replace
545	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisWeek);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisWeek);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisWeek	25	None	replace
546	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  null);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,<null>)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  null);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,<null>)	25	None	replace
547	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	50	None	replace
548	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMin);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	50	None	replace
549	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMillis);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	50	None	replace
550	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
551	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
552	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
553	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
554	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
555	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
556	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getLeapMonth(instant,  month,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getLeapMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getLeapMonth(instant,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
557	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  2;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  2;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	183	None	replace
558	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  3;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  3;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	183	None	replace
559	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  4;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  4;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  4;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	183	None	replace
560	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  5;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  5;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  5;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	183	None	replace
561	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
562	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
563	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
564	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
565	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
566	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    System    	non-compiled	[CE]  ')'  expected	220	None	replace
567	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	18	None	replace
568	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  +  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	18	None	replace
569	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)+  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	18	None	replace
570	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month)-  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	18	None	replace
571	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  cannot  find  symbol  thisMax	271	None	replace
572	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	128	None	replace
573	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	128	8	replace
574	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	128	8	replace
575	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
576	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	266	None	replace
577	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	82	None	replace
578	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	82	None	replace
579	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	82	None	replace
580	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	82	None	replace
581	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	102	8	replace
582	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	102	8	replace
583	[BUG]  [BUGGY]  int  thisDom  =  iChronologist.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  iChronologist  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronologist.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronologist.getDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronologist.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  iChronologist	316	None	replace
584	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  mois,  thisYear);  [CE]  cannot  find  symbol  mois  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  mois,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  mois,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  mois	10	None	replace
585	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  day,  thisYear);  [CE]  cannot  find  symbol  day  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  day,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  day,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  day	10	None	replace
586	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	88	None	replace
587	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	88	None	replace
588	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  year);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  year	103	None	replace
589	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisyear);  [CE]  cannot  find  symbol  thisyear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisyear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisyear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisyear	103	None	replace
590	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	103	None	replace
591	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisXear);  [CE]  cannot  find  symbol  thisXear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisXear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisXear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisXear	103	None	replace
592	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month  +  1);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
593	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month)-  1;	  int    thisDom    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
594	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  return  [CE]  '.class'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  return  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  return	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    return    	non-compiled	[CE]  '.class'  expected	221	None	replace
595	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    return    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
596	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	131	None	replace
597	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	131	None	replace
598	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  iHeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	131	None	replace
599	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMillisOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	300	None	replace
600	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMillisOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	300	None	replace
601	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMillisOfYear(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMillisOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	300	None	replace
602	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMillisOfDay(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMillisOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	300	None	replace
603	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	84	None	replace
604	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
605	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	84	None	replace
606	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	84	None	replace
607	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	84	None	replace
608	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  year);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	84	None	replace
609	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  dayOfMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  dayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	317	None	replace
610	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  yearToUse);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	317	None	replace
611	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  hour);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  hour);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	317	None	replace
612	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  day,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  day,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	116	None	replace
613	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  day,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  day,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  day,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	116	None	replace
614	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeight);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	94	None	replace
615	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYearDay(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYearDay(instant,  month,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYearDay(instant,  month,  thisHeight);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	94	None	replace
616	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeight);  [CE]  cannot  find  symbol  months  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeight);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  months	94	None	replace
617	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHear);  [CE]  cannot  find  symbol  thisHear  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  thisHear	94	None	replace
618	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear,  thisYear);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	54	None	replace
619	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear,  month);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	54	None	replace
620	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	54	None	replace
621	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	267	None	replace
622	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	267	None	replace
623	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	267	None	replace
624	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	267	None	replace
625	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	267	None	replace
626	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeight);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	267	None	replace
627	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  null);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	267	None	replace
628	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	231	None	replace
629	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	231	None	replace
630	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months,  iHeapMonth);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	231	None	replace
631	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months,  iMin);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	231	None	replace
632	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisMillis);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	293	None	replace
633	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
634	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
635	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
636	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
637	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month;  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMonthOfYear(instant,  month;	  	non-compiled	[CE]  ')'  expected	101	None	add
638	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMillisOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMillisOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMillisOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
639	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getYearOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getYearOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getYearOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
640	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTHOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTHOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMONTHOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
641	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	263	None	replace
642	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	263	None	replace
643	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	263	None	replace
644	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
645	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	263	None	replace
646	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  null);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  null);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
647	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeart);  [CE]  cannot  find  symbol  thisHeart  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeart);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeart	263	None	replace
648	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLocalMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLocalMillis);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	263	None	replace
649	[BUG]  [BUGGY]  int  itDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]            ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  itDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  itDom  =  iChronology.getDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	229	None	replace
650	[BUG]  [BUGGY]  int  itDom  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  itDom  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  itDom  =  iChronology.getMonthOfDay(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	229	None	replace
651	[BUG]  [BUGGY]  int  itDom  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  itDom  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  itDom  =  iChronology.getDaysInYearMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	229	None	replace
652	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  year  +  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
653	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  year  -  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
654	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  year,  month);	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
655	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  day);	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
656	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
657	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
658	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
659	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
660	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
661	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  instant);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	97	None	replace
662	[BUG]  [BUGGY]  char  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  char  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	char  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	97	None	replace
663	[BUG]  [BUGGY]  long  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	97	None	replace
664	[BUG]  [BUGGY]  boolean  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  boolean  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	boolean  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	97	None	replace
665	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	217	None	replace
666	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	217	None	replace
667	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  [CE]  '.class'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDayOfMonth(instant,	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	217	None	replace
668	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	217	None	replace
669	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getDaysInYearMonth(	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	217	None	replace
670	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  if(thisMonth  ==  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  if(thisMonth  ==  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  if(thisMonth  ==  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  incomparable  types:  int  and  <null>	217	None	replace
671	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
672	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
673	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
674	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
675	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
676	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
677	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSummaryOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSummaryOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSummaryOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
678	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
679	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
680	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iLeapMonth);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	190	None	replace
681	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear,  iLeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iLeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  yearToUse	190	None	replace
682	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iLeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  months	190	None	replace
683	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getYearOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
684	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearOfYear(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getYearOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	298	None	replace
685	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMONTth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMONTth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
686	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  month);	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	157	None	replace
687	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisHeap);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  months	294	None	replace
688	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisHeap);  [CE]  cannot  find  symbol  yearToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	294	None	replace
689	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  mois,  thisHeap);  [CE]  cannot  find  symbol  mois  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  mois,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  mois,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  mois	294	None	replace
690	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisHeap);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  year	294	None	replace
691	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	289	None	replace
692	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	289	None	replace
693	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  year  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	289	None	replace
694	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	289	None	replace
695	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [CE]  cannot  find  symbol  day  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  day	198	None	replace
696	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  hour);  [CE]  cannot  find  symbol  hour  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  hour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  hour);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	198	None	replace
697	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  months);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  months);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  months	198	None	replace
698	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthsInYearMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]        ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthsInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthsInYearMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
699	[BUG]  [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  iChronologist  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronologist.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  iChronologist	169	None	replace
700	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	132	None	replace
701	[BUG]  [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	125	None	replace
702	[BUG]  [BUGGY]  ThisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  ThisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  ThisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	ThisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  ThisDom	125	None	replace
703	[BUG]  [BUGGY]  theseDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  theseDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  theseDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	theseDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  theseDom	125	None	replace
704	[BUG]  [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  theYear);  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  theYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getMonthOfYear(instant,  theYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	125	None	replace
705	[BUG]  [BUGGY]  thisDom  =  iChronologist.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronologist.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronologist.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	125	None	replace
706	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
707	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  MIN);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
708	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
709	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
710	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  yearToUse);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
711	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
712	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearValue(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
713	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	63	None	replace
714	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	45	None	replace
715	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  2);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	45	None	replace
716	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  *  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  *  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  *  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	45	None	replace
717	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  3);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  3);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	45	None	replace
718	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	62	None	replace
719	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
720	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getDayOfMonth(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getDayOfMonth(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
721	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  itMonth  =  iChronology.getDayOfMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
722	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMillisOfDay(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMillisOfDay(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
723	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getYearOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
724	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMinthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMinthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMinthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
725	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
726	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getSecondOfDay(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getSecondOfDay(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getSecondOfDay(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
727	[BUG]  [BUGGY]  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getDayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  cannot  find  symbol  thisDom	251	None	replace
728	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	141	None	replace
729	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  month);	  int    month    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	141	None	replace
730	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	141	None	replace
731	[BUG]  [BUGGY]  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	250	None	replace
732	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	compilable	  [FE]  ExceptionInInitializerError  	250	1	replace
733	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [FE]  ExceptionInInitializerError  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	compilable	  [FE]  ExceptionInInitializerError  	250	1	replace
734	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	250	None	replace
735	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
736	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  2);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
737	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
738	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  3);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
739	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  *  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  *  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  *  1);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
740	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  1,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
741	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  2);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  2);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  2);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
742	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  *  1);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  *  1);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
743	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  3);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  3);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
744	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYearDay(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYearDay(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYearDay(instant,  thisYear  +  1);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
745	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(thisYear,  thisYear);	  int    month    =    iChronology.getDayOfMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
746	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear)-  1;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear)-  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
747	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)/  1;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)/  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)/  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
748	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear  -  1;  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear  -  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	258	None	replace
749	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	258	8	replace
750	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	258	8	replace
751	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month).set(thisYear,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month).set(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month).set(thisYear,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
752	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear)  -  1;  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear)  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear)  -  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	258	None	replace
753	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1,  thisYear;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1,  thisYear;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1,  thisYear;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
754	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDayMillis(instant,  month);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	226	None	replace
755	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  months);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	226	None	replace
756	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  month);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	226	None	replace
757	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	106	None	replace
758	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	106	None	replace
759	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	106	None	replace
760	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	106	None	replace
761	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  *  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    *    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	57	1	replace
762	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  *  1);  [FE]  ExceptionInInitializerError  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  *  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    *    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	57	1	replace
763	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  3);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  3);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    *    1);    [timeout]    	non-compiled	[timeout]	57	None	replace
764	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  /  1);  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  /  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  /  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    *    1);    [timeout]    	non-compiled	[timeout]	57	None	replace
765	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  10);  [timeout]  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  10);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  10);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    *    1);    [timeout]    	non-compiled	[timeout]	57	None	replace
766	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
767	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
768	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  Integer  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  Integer  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    Integer  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
769	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
770	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(ThisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(ThisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(ThisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
771	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMONTth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMONTth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMONTth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
772	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisXear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisXear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(thisXear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
773	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisyear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisyear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(thisyear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
774	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	113	None	replace
775	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfDay(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
776	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	113	None	replace
777	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	113	None	replace
778	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	113	None	replace
779	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
780	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	113	None	replace
781	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	6	None	replace
782	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear,  thisLeapMonth);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	6	None	replace
783	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1,  thisYear);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	6	None	replace
784	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)/  thisYear);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)/  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)/  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	6	None	replace
785	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	4	None	replace
786	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	4	None	replace
787	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  datePart);  [CE]  cannot  find  symbol  datePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  datePart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  datePart);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  datePart	4	None	replace
788	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth,  thisYear);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	4	None	replace
789	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  null);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  null);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	4	None	replace
790	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	4	None	replace
791	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  isize);  [CE]  cannot  find  symbol  isize  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  isize);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  isize);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  isize	4	None	replace
792	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLocalMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisLocalMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	4	None	replace
793	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisMillis);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	95	None	replace
794	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisJear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol  thisJear	95	None	replace
795	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
796	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	167	None	replace
797	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	167	None	replace
798	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	167	None	replace
799	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
800	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
801	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
802	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
803	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
804	[BUG]  [BUGGY]  double  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  double  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	double  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	200	None	replace
805	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	200	None	replace
806	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	200	None	replace
807	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	200	None	replace
808	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iMax);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
809	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(month,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(month,  thisYear);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
810	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthDayOfMonth(instant,  month);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
811	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iMin);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
812	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(thisYear,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
813	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant,  month);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
814	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	181	None	replace
815	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	181	None	replace
816	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	181	None	replace
817	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iHeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	181	None	replace
818	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iWeekMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iWeekMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iWeekMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	181	None	replace
819	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iRight);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iRight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth,  iRight);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	181	None	replace
820	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	150	None	add
821	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	150	None	add
822	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  year)+  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  year)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  year)+  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	150	None	add
823	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+1  1;  [CE]  ';'  expected  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+1  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+1  1;	  	non-compiled	[CE]  ';'  expected	150	None	add
824	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  months)+  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  months)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  months)+  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	150	None	add
825	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfYear(instant,  month)+  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfYear(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    int  thisDom  =  iChronology.getDayOfYear(instant,  month)+  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	150	None	add
826	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	265	None	replace
827	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	34	None	replace
828	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	72	None	replace
829	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	72	None	replace
830	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	72	None	replace
831	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	137	None	replace
832	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	137	None	replace
833	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	219	None	replace
834	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
835	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
836	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
837	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
838	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	291	None	replace
839	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	291	None	replace
840	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	291	None	replace
841	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	291	None	replace
842	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	28	None	replace
843	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	28	None	replace
844	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  mois  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  mois,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  mois	28	None	replace
845	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  year  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	28	None	replace
846	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	307	None	replace
847	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	307	None	replace
848	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	307	None	replace
849	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	209	None	replace
850	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	59	8	replace
851	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	59	8	replace
852	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear  +  1);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
853	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)+  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	15	None	replace
854	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	15	None	replace
855	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  month);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
856	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
857	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
858	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthsInYearMonth(instant,  thisYear);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
859	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(thisYear,  thisYear);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
860	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisYear);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
861	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  int  cannot  be  dereferenced  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	163	None	replace
862	[BUG]  [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  not  a  statement  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	null  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  not  a  statement	163	None	replace
863	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  18);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	276	8	replace
864	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  18);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  18);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	276	8	replace
865	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  17);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  17);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  17);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
866	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  11);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  11);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  11);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
867	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  31);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  31);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  31);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
868	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  13);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  13);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  13);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
869	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  12);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  12);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  12);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
870	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear,  month);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	14	None	replace
871	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDayMillis(instant,  thisYear);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	14	None	replace
872	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	155	None	replace
873	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	155	None	replace
874	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  year);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	275	None	replace
875	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	275	None	replace
876	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  year);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	275	None	replace
877	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisDay	191	None	replace
878	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLocalMillis);  [CE]  cannot  find  symbol  thisLocalMillis  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLocalMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLocalMillis);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisLocalMillis	191	None	replace
879	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	91	None	replace
880	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	91	None	replace
881	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  3);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    	compilable	  [FE]  ExceptionInInitializerError  	53	1	replace
882	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  3);  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  3);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    	compilable	  [FE]  ExceptionInInitializerError  	53	1	replace
883	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
884	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
885	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisHeap);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisHeap);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisHeap);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
886	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
887	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  year);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
888	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  months);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
889	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  1);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
890	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisDay	192	None	replace
891	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	192	None	replace
892	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  3);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  3);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    3);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	201	None	replace
893	[BUG]  [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  iChronologist  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronologist.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iChronologist	109	None	replace
894	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	30	None	replace
895	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month)+  1;	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
896	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    dayOfMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	73	None	replace
897	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  0);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  0);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  0);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
898	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  0,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  0,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  0,  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
899	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
900	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  12);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  12);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  12);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
901	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  1L);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  1L);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  1L);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
902	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
903	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
904	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  month);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
905	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
906	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisYear);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
907	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYearMonth(instant,  thisYear);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
908	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeight);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisHeight);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
909	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	148	None	add
910	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	148	None	add
911	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  year  -  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  year  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  year  -  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	148	None	add
912	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  months  -  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  months  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  months  -  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	148	None	add
913	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1));  [CE]  ';'  expected  [FE]            ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1));	  	non-compiled	[CE]  ';'  expected	148	None	add
914	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)  -  1);  [CE]  ';'  expected  [FE]              ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month)  -  1);	  	non-compiled	[CE]  ';'  expected	148	None	add
915	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)  -  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month)  -  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	148	None	add
916	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	148	None	add
917	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  2;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	22	None	replace
918	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;  [CE]  cannot  find  symbol  thisDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  3;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	22	None	replace
919	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;  [CE]  cannot  find  symbol  thisDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  4;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	22	None	replace
920	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [CE]  possible  loss  of  precision  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1L;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  possible  loss  of  precision	22	None	replace
921	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)	268	None	replace
922	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)	268	None	replace
923	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	268	None	replace
924	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(month,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(month,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	268	None	replace
925	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	314	None	replace
926	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  2;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  2;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
927	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  3;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  3;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
928	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  4;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  4;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  4;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
929	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
930	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
931	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
932	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
933	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMillis(instant,  month);  [CE]  cannot  find  symbol  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMillis(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMillis(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMillis(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
934	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMillis);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	272	None	replace
935	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeapMonth);  [CE]  cannot  find  symbol  months  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	93	None	replace
936	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  yearToUse,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	93	None	replace
937	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  year  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	93	None	replace
938	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeapYear);  [CE]  cannot  find  symbol  thisHeapYear  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeapYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHeapYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapYear	93	None	replace
939	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	195	None	replace
940	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	195	None	replace
941	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	195	None	replace
942	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(month,  thisYear);	  int    thisYear    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	195	None	replace
943	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);	  int    thisYear    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	195	None	replace
944	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  thisYear);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	244	None	replace
945	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisYear);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	244	None	replace
946	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  2);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	19	None	replace
947	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  3);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	19	None	replace
948	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	19	None	replace
949	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	117	None	replace
950	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	117	None	replace
951	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  month);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	117	None	replace
952	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeight);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	24	None	replace
953	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  -  1);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
954	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
955	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
956	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
957	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iMin);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
958	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
959	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month)+  1;	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
960	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
961	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonth(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
962	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
963	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfDay(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
964	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
965	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
966	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getYearOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
967	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfDay(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfDay(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfDay(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
968	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]        ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	252	None	replace
969	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	252	None	replace
970	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	252	None	replace
971	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  -  1,  thisYear);  [CE]  cannot  find  symbol  [FE]              ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  -  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month  -  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
972	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisHeight);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeight	252	None	replace
973	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                  ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMinute	252	None	replace
974	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	85	None	replace
975	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	257	None	replace
976	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	257	None	replace
977	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(thisYear,  month);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	257	None	replace
978	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(month,  thisYear);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	257	None	replace
979	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	299	None	replace
980	[BUG]  [BUGGY]  double  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  double  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	double  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	299	None	replace
981	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	299	None	replace
982	[BUG]  [BUGGY]  long  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	299	None	replace
983	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getMonthOfYear(instant,  year);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	299	None	replace
984	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	139	None	replace
985	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	139	None	replace
986	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	139	None	replace
987	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	139	None	replace
988	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
989	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
990	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
991	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
992	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  null);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,<null>)	270	None	replace
993	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	270	None	replace
994	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  timePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  timePart);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	270	None	replace
995	[BUG]  [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	double  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	197	None	replace
996	[BUG]  [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	197	None	replace
997	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
998	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfDay(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	197	None	replace
999	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1000	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  +  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month  +  1);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1001	[BUG]  [BUGGY]  int  thisDom  =  iChronology.dayOfMonth(instant,  month);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.dayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.dayOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	202	None	replace
1002	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month  -  1);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1003	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month)-  1;	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1004	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month)+  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month)+  1;	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1005	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month),  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month),  thisYear);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	202	None	replace
1006	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisMax);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  cannot  find  symbol  year	313	None	replace
1007	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1008	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  1);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1009	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iMin);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1010	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  1);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1011	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMillis);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMillis);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMillis);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1012	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	164	None	replace
1013	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	164	None	replace
1014	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	164	None	replace
1015	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	164	None	replace
1016	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(thisYear,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	164	None	replace
1017	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  dayOfMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  dayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  dayOfMonth);	  int    thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	287	None	replace
1018	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisMonth);	  int    thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	287	None	replace
1019	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    date);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	274	None	replace
1020	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  month);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    date);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	274	None	replace
1021	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMillisOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMillisOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMillisOfYear(instant,  month);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    date);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	274	None	replace
1022	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	304	None	replace
1023	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	242	8	replace
1024	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	242	8	replace
1025	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  null);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,<null>)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  null);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  null);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMinute);    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,<null>)	222	None	replace
1026	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	303	None	replace
1027	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	303	None	replace
1028	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  week,  thisYear);  [CE]  cannot  find  symbol  week  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  week,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  week,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    year,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  week	99	None	replace
1029	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  hour,  thisYear);  [CE]  cannot  find  symbol  hour  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  hour,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  hour,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    year,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  hour	99	None	replace
1030	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	79	None	replace
1031	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	79	None	replace
1032	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	79	None	replace
1033	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iWeekMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iWeekMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth,  iWeekMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	79	None	replace
1034	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [timeout]  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[timeout]	153	None	replace
1035	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear)-  1;  [timeout]  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear)-  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[timeout]	153	None	replace
1036	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	153	8	replace
1037	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  2;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	153	8	replace
1038	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1)-  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	compilable	  [FE]  ExceptionInInitializerError  	153	1	replace
1039	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1)-  1;  [FE]  ExceptionInInitializerError  [FE]          ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1)-  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	compilable	  [FE]  ExceptionInInitializerError  	153	1	replace
1040	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	179	None	replace
1041	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	179	None	replace
1042	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMin);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	179	None	replace
1043	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  0);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  0);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  0);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	179	None	replace
1044	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1045	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1046	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1047	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1048	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute,  iHeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1049	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois);  [CE]  cannot  find  symbol  mois  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  mois);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  mois	165	None	replace
1050	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  month);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1051	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  month);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1052	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1053	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfDay(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfDay(instant,  thisYear);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1054	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1055	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisValue);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisValue);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
1056	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisValue);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  thisValue);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
1057	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
1058	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	269	None	replace
1059	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	269	None	replace
1060	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisDay);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	269	None	replace
1061	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisHeight);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisHeight);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	269	None	replace
1062	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  month);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
1063	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  year);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	269	None	replace
1064	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	8	None	replace
1065	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	8	None	replace
1066	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [CE]  cannot  find  symbol  yearToUse  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	8	None	replace
1067	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(thisYear,  instant);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1068	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1069	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1070	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1  +  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1071	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1  -  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1072	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1073	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  cannot  find  symbol  hour  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  hour);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	254	None	replace
1074	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  timePart);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  timePart);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	254	None	replace
1075	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  mois);  [CE]  cannot  find  symbol  mois  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  mois);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  mois);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  mois	254	None	replace
1076	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	147	None	replace
1077	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  null);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  null);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  null);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	147	None	replace
1078	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  months);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  months	147	None	replace
1079	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(month,  instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	147	None	replace
1080	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1081	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1082	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1083	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	187	None	replace
1084	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	187	None	replace
1085	[BUG]  [BUGGY]  long  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  long  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	long  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	187	None	replace
1086	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  day,  thisHeap);  [CE]  cannot  find  symbol  day  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  day,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  day,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    year,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  day	234	None	replace
1087	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  hour,  thisHeap);  [CE]  cannot  find  symbol  hour  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  hour,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  hour,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    year,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  hour	234	None	replace
1088	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  2;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  2;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  2;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	47	None	replace
1089	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  3;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  3;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	47	None	replace
1090	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1L;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	47	None	replace
1091	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  4;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  4;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  4;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	47	None	replace
1092	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	47	None	replace
1093	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	235	None	replace
1094	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(dayOfMonth,  thisYear);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	235	None	replace
1095	[BUG]  [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  month  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	235	None	replace
1096	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfYear(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfYear(instant,    month);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	39	8	replace
1097	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfYear(instant,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfYear(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfYear(instant,    month);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	39	8	replace
1098	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1099	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1100	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1101	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMillisOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1102	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1103	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getLeapMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1104	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1105	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1106	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMinthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1107	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  18);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  18);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  18);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	80	None	replace
1108	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  11);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  11);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  11);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	80	None	replace
1109	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  ')'  expected	301	None	replace
1110	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  ')'  expected	301	None	replace
1111	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	301	None	replace
1112	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	301	None	replace
1113	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear)+  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear)+  1;	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1114	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  18);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  18);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	55	None	replace
1115	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  iMinute	314	None	replace
1116	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMin);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  iMin	314	None	replace
1117	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  18);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	45	None	replace
1118	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  11);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  11);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  11);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	45	None	replace
1119	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  4);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  4);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  4);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	45	None	replace
1120	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDayOfMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1121	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1122	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1123	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1124	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1125	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  year  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  year	91	None	replace
1126	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  iMax);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
1127	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1L;  [CE]  possible  loss  of  precision  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1L;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  possible  loss  of  precision	151	None	replace
1128	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	295	None	replace
1129	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	168	None	replace
1130	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	168	None	replace
1131	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	168	None	replace
1132	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [CE]  ')'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month;    	non-compiled	[CE]  ')'  expected	168	None	replace
1133	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1134	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChr  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChr  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChr	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ';'  expected	242	None	replace
1135	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChr  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChr  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChr	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ';'  expected	242	None	replace
1136	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  [CE]  '.class'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	242	None	replace
1137	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	269	None	replace
1138	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	269	None	replace
1139	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  1);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  1);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
1140	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisWeek);  [CE]  cannot  find  symbol  thisWeek  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisWeek);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisWeek);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	94	None	replace
1141	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    float  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
1142	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDOm  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
1143	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMONTthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	101	None	add
1144	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	296	None	replace
1145	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	296	None	replace
1146	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMONTthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	296	None	replace
1147	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  4);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  4);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  4);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    *    1);    [timeout]    	non-compiled	[timeout]	57	None	replace
1148	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	264	None	replace
1149	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	264	None	replace
1150	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iHeapMonth);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	264	None	replace
1151	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  iMinute);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinute	264	None	replace
1152	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	264	None	replace
1153	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  19);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  19);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  19);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
1154	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  16);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  16);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  16);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
1155	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  18);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  18);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    18);    [timeout]    	non-compiled	[timeout]	276	None	replace
1156	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	167	None	replace
1157	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	167	None	replace
1158	[BUG]  [BUGGY]  if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  incomparable  types:  int  and  <null>  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	167	None	replace
1159	[BUG]  [BUGGY]  if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  incomparable  types:  int  and  <null>  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	167	None	replace
1160	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	167	None	replace
1161	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	167	None	replace
1162	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  min,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  min,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
1163	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
1164	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear,  year);	  int    month    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	13	None	replace
1165	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
1166	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month  -  1,  iMax);	  int    thisYear    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
1167	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	228	8	replace
1168	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	228	8	replace
1169	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
1170	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
1171	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1172	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month,  iMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1173	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMinue);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMinue);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMinue);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1174	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1175	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1176	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1177	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1178	[BUG]  [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  MIN)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1179	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
1180	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	108	None	replace
1181	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  day);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  day	254	None	replace
1182	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  week);  [CE]  cannot  find  symbol  week  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  week);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  week);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  week	254	None	replace
1183	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearBounds(instant,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearBounds(instant,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearBounds(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
1184	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	299	None	replace
1185	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  float  thisDom  =  iChronology.getMonthOfYear(thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	299	None	replace
1186	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
1187	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  month);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
1188	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	238	None	replace
1189	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	238	None	replace
1190	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	238	None	replace
1191	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	238	None	replace
1192	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	238	None	replace
1193	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	238	None	replace
1194	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	219	None	replace
1195	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChr  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChr  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChr	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ';'  expected	219	None	replace
1196	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  day);  [CE]  cannot  find  symbol  day  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  day);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  day	191	None	replace
1197	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [CE]  cannot  find  symbol  months  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  months);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  months	191	None	replace
1198	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  date);  [CE]  cannot  find  symbol  date  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  date);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  date);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  date	191	None	replace
1199	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  hour);  [CE]  cannot  find  symbol  hour  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  hour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  hour);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	191	None	replace
1200	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	83	None	replace
1201	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	83	None	replace
1202	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear  +  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	83	None	replace
1203	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	83	None	replace
1204	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear)+  1;	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	83	None	replace
1205	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	214	None	replace
1206	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1207	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	214	None	replace
1208	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	214	None	replace
1209	[BUG]  [BUGGY]  int  thisDOm  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDOm  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDOm  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDOm    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	249	None	replace
1210	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisWeekMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	11	None	replace
1211	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  year);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	114	None	replace
1212	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	114	None	replace
1213	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	216	None	replace
1214	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	92	None	replace
1215	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(thisYear,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(thisYear,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(thisYear,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1216	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  1,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
1217	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  iHeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	181	None	replace
1218	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1L;  [CE]  possible  loss  of  precision  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1L;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  possible  loss  of  precision	153	None	replace
1219	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month)-  1;  [CE]  cannot  find  symbol  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonth(instant,  month)-  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
1220	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  year);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  year	162	None	replace
1221	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1  +  1);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
1222	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  3);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  3);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
1223	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1  -  1);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
1224	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(thisYear,  month,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	16	None	replace
1225	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  0);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  0);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  0);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
1226	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMin,  1);  [CE]  cannot  find  symbol  iMin  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMin,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMin,  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	12	None	replace
1227	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  cannot  find  symbol  iMin	12	None	replace
1228	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	66	None	replace
1229	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	66	None	replace
1230	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	66	None	replace
1231	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(instant);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
1232	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillisOfDay(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillisOfDay(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillisOfDay(instant);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
1233	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(thisYear,  month);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
1234	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
1235	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisYear);  [CE]  cannot  find  symbol  timePart  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  timePart	29	None	replace
1236	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  day	86	None	replace
1237	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	86	None	replace
1238	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	86	None	replace
1239	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month  +  1);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	226	None	replace
1240	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  year);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	226	None	replace
1241	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	120	None	replace
1242	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	120	None	replace
1243	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisDom);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	120	None	replace
1244	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisWeekMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	272	None	replace
1245	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth,  iMax);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iLeapMonth);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	190	None	replace
1246	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iLeapMonth);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	190	None	replace
1247	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  18);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  18);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  18);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
1248	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  11);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  11);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  11);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
1249	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(thisYear,  month  +  1);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
1250	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(thisYear,  month  -  1);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
1251	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthMillis(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthMillis(thisYear,  month);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
1252	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
1253	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  >=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  >=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  >=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
1254	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
1255	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ')'  expected	240	None	replace
1256	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	240	None	replace
1257	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	172	None	replace
1258	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	172	None	replace
1259	[BUG]  [BUGGY]  timeout  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	compilable	timeout	172	1	replace
1260	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  timeout  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	compilable	timeout	172	1	replace
1261	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	104	None	replace
1262	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1263	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	104	None	replace
1264	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	104	None	replace
1265	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  return  [CE]  '.class'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  return  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  return	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	104	None	replace
1266	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incomparable  types:  int  and  <null>  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	104	None	replace
1267	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisHeap);  [CE]  cannot  find  symbol  timePart  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    year,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  timePart	234	None	replace
1268	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
1269	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDOm  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDOm  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDOm  =  iChronology.getDayOfMonth(instant,  month)-  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
1270	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDOm    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	297	8	replace
1271	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDOm    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	297	8	replace
1272	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDOm    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	297	8	replace
1273	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDOm    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	297	8	replace
1274	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	197	None	replace
1275	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	197	None	replace
1276	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	197	None	replace
1277	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  1);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	317	None	replace
1278	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	88	None	replace
1279	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [CE]  cannot  find  symbol  day  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  day);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	88	None	replace
1280	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
1281	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  -  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month  -  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month  -  1,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
1282	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month)-  1;	  int    thisYear    =    iChronology.getYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
1283	[BUG]  [BUGGY]  float  thisYear  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisYear  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisYear  =  iChronology.getMonthOfYear(instant,  hour);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    hour);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	75	None	replace
1284	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  hour  +  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    hour);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	75	None	replace
1285	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month  -  1);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	255	None	replace
1286	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month,  thisDay);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	255	None	replace
1287	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  day,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	117	None	replace
1288	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(thisYear,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(thisYear,  month);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
1289	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(thisYear,  instant);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(thisYear,  instant);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
1290	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	189	None	replace
1291	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  1);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  1);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
1292	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)	291	None	replace
1293	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	123	8	replace
1294	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	123	8	replace
1295	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  1);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	123	8	replace
1296	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  1);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	123	8	replace
1297	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisLastMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	306	None	replace
1298	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisWeekMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeapYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	135	None	replace
1299	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	241	None	replace
1300	[BUG]  [BUGGY]  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	241	None	replace
1301	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	241	None	replace
1302	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  [CE]  '.class'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	241	None	replace
1303	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  this  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  this  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  this	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	241	None	replace
1304	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  iMax);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  year	212	None	replace
1305	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	212	None	replace
1306	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	105	None	replace
1307	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1  +  thisYear;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1  +  thisYear;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1  +  thisYear;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
1308	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  iMax  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  iMax  -  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	258	None	replace
1309	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  2;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  2;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
1310	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1L;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1L;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1L;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
1311	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  3);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	9	None	replace
1312	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  18);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  18);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	9	None	replace
1313	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  31);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  31);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  31);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	9	None	replace
1314	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  11);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  11);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  11);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	9	None	replace
1315	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	144	None	replace
1316	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  thisLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    dayOfMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	73	None	replace
1317	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDay);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	8	None	replace
1318	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisWeekMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	8	None	replace
1319	[BUG]  [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).set(thisDom,  month);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).set(thisDom,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).set(thisDom,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	125	None	replace
1320	[BUG]  [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).intValue();  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).intValue();  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).intValue();	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	125	None	replace
1321	[BUG]  [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).setValue(thisDom,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).setValue(thisDom,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getMonthOfYear(instant,  thisYear).setValue(thisDom,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	125	None	replace
1322	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	96	None	replace
1323	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  18);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	19	None	replace
1324	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  4);  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  4);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  4);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	19	None	replace
1325	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  31);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  31);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  31);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	19	None	replace
1326	[BUG]  [BUGGY]  int  itDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]            ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  itDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  itDom  =  iChronology.getMonthOfYear(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	229	None	replace
1327	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(thisYear,  month);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
1328	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  day);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
1329	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  hour);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  hour);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
1330	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  date);  [CE]  cannot  find  symbol  date  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  date);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  date);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  date	198	None	replace
1331	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month  -  1);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	18	None	replace
1332	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month  +  1);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	155	None	replace
1333	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month)+  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month)+  1;	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	155	None	replace
1334	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(thisYear,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(thisYear,  month);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
1335	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  1L;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  1L;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	183	None	replace
1336	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	247	None	replace
1337	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(thisYear,  month);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1338	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  year);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1339	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(month,  thisYear);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1340	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisHeap);  [CE]  cannot  find  symbol  year  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  year,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  year	193	None	replace
1341	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  mois,  thisHeap);  [CE]  cannot  find  symbol  mois  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  mois,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  mois,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  mois	193	None	replace
1342	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1L;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1L;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	311	None	replace
1343	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  3;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  3;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  3;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	311	None	replace
1344	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	64	None	replace
1345	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1346	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	54	None	replace
1347	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months  +  1,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months  +  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  months	54	None	replace
1348	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(thisYear,  month  +  1,  thisYear);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(thisYear,  month  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(thisYear,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[timeout]	54	None	replace
1349	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year  +  1,  thisYear);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  year  +  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[timeout]	54	None	replace
1350	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
1351	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
1352	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendToUse);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
1353	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
1354	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth  +  1);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	211	None	replace
1355	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	211	None	replace
1356	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	165	None	replace
1357	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	165	None	replace
1358	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  long  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  long  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  long  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	165	None	replace
1359	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1360	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfDay(thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(thisYear);	  int    month    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	14	None	replace
1361	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1),  thisYear);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1),  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1),  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	6	None	replace
1362	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear  +  1;  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear  +  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear  +  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  ';'  expected	6	None	replace
1363	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month),  this);  [CE]  <identifier>  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month),  this);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month),  this);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month),    thisYear);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
1364	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
1365	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	302	None	replace
1366	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getYearOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getYearOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	302	None	replace
1367	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMinute);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	182	None	replace
1368	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
1369	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  minuendMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
1370	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  1);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  1);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	267	None	replace
1371	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	267	None	replace
1372	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1373	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1374	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisWeekMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	103	None	replace
1375	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN  +  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
1376	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  minuendMonth,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
1377	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  3);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  3);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
1378	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month),  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month),  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  ';'  expected	90	None	replace
1379	[BUG]  [BUGGY]  if(month  >=  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  >=  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  >=  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1380	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1381	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	124	None	replace
1382	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDayOfMonth(instant,  month);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1383	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
1384	[BUG]  [BUGGY]  if(month  >  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  >  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  >  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
1385	[BUG]  [BUGGY]  if(month  >=  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  >=  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  >=  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
1386	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
1387	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if    	non-compiled	[CE]  illegal  start  of  expression	218	None	replace
1388	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1)-  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	49	None	replace
1389	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  year  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	63	None	replace
1390	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	63	None	replace
1391	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	63	None	replace
1392	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  months	63	None	replace
1393	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMONTHOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMONTHOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMONTHOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	63	None	replace
1394	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  dayToUse,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  dayToUse  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  dayToUse,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  dayToUse,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	28	None	replace
1395	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  timePart  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  timePart,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  timePart	28	None	replace
1396	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisDay);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	235	None	replace
1397	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	235	None	replace
1398	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	82	None	replace
1399	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	82	None	replace
1400	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	95	None	replace
1401	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
1402	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
1403	[BUG]  [BUGGY]  int  thisDom  =  iChronologist.getDayOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  iChronologist  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronologist.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronologist.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronologist.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  iChronologist	316	None	replace
1404	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  1);	  int    month    =    iChronology.getMonthOfYear(instant,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	236	None	replace
1405	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  1);	  int    thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	287	None	replace
1406	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  hour);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  hour);	  int    thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	287	None	replace
1407	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	59	8	replace
1408	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  3);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	59	8	replace
1409	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	59	8	replace
1410	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  18);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	59	8	replace
1411	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
1412	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
1413	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month)-  1;	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
1414	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  2);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
1415	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year)+  1;	  int    thisYear    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	71	None	replace
1416	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	145	None	replace
1417	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	145	None	replace
1418	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
1419	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iHeapMonth);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	263	None	replace
1420	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  iMinute);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinute	263	None	replace
1421	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	263	None	replace
1422	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisHeap);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	263	None	replace
1423	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  MIN);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
1424	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  minuendToUse);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
1425	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1L;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1L;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	184	None	replace
1426	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  4;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  4;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  4;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	184	None	replace
1427	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeapMonth,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisHeapMonth,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	134	None	replace
1428	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	  int    thisYear    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	195	None	replace
1429	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);	  int    thisYear    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	195	None	replace
1430	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysOfMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysOfMonth(instant,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysOfMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	174	None	replace
1431	[BUG]  [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  months  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    months);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	248	None	replace
1432	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    months);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	248	None	replace
1433	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	147	None	replace
1434	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getDaysInYearMonth(instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	147	None	replace
1435	[BUG]  [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  char  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	char  thisMonth  =  iChronology.getDaysInYearMonth(instant);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	147	None	replace
1436	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  4);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  4);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  4);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
1437	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  31);  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  31);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  31);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
1438	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    year,    thisYear);    	non-compiled	[timeout]	119	None	replace
1439	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear  +  1);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[timeout]	25	None	replace
1440	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  iMax);  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[timeout]	25	None	replace
1441	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  MIN  +  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	179	None	replace
1442	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  iLeapMonth);  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
1443	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
1444	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
1445	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  else  {  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  else  {  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
1446	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
1447	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;  [CE]  cannot  find  symbol  thisDom  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)+  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  cannot  find  symbol  thisDom	110	None	replace
1448	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	106	None	replace
1449	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	106	None	replace
1450	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	77	None	replace
1451	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  months);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	131	None	replace
1452	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  dayToUse,  thisYear);  [CE]  cannot  find  symbol  dayToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  dayToUse,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  dayToUse,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	98	None	replace
1453	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinute	208	None	replace
1454	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMineMonth);  [CE]  cannot  find  symbol  iMineMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMineMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMineMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMineMonth	208	None	replace
1455	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMin);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	208	None	replace
1456	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinuteSize);  [CE]  cannot  find  symbol  iMinuteSize  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinuteSize);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinuteSize);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinuteSize	208	None	replace
1457	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	208	None	replace
1458	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinuteMillis);  [CE]  cannot  find  symbol  iMinuteMillis  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinuteMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  iMinuteMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinuteMillis	208	None	replace
1459	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1460	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendToUse);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1461	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1462	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  minuendInstant);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1463	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(thisYear,  month);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1464	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  year);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1465	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear  +  1);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1466	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  months);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1467	[BUG]  [BUGGY]  if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	239	None	replace
1468	[BUG]  [BUGGY]  if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	239	None	replace
1469	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	239	None	replace
1470	[BUG]  [BUGGY]  if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  [CE]  '.class'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  iLeapMonth)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	239	None	replace
1471	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  3);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  ExceptionInInitializerError  	149	1	replace
1472	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  3);  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  3);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  3);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	compilable	  [FE]  ExceptionInInitializerError  	149	1	replace
1473	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month  -  1);  [CE]  cannot  find  symbol  [FE]      ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonth(instant,  month  -  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonth(instant,  month  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1474	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1  +  1);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
1475	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1  -  1);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
1476	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  18);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  18);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  18);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
1477	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  iMinute	209	None	replace
1478	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysMonth(instant,  month);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	284	None	replace
1479	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month  +  1);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	244	None	replace
1480	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisMinute);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	244	None	replace
1481	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisDay);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	244	None	replace
1482	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year)+  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  year)+  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
1483	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  cannot  find  symbol  thisDom	67	None	replace
1484	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month)-  1;	  int    month    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	15	None	replace
1485	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getMonthsInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	194	None	replace
1486	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  itDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  itDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  itDom  =  iChronology.getDayOfMonth(instant,  month  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
1487	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;  }  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  ')'  expected	111	None	replace
1488	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  }  [CE]  incomparable  types:  int  and  <null>  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  incomparable  types:  int  and  <null>	111	None	replace
1489	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  ')'  expected	111	None	replace
1490	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	111	None	replace
1491	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear;    	non-compiled	[CE]  cannot  find  symbol  thisMonth	111	None	replace
1492	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	4	None	replace
1493	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMinute	4	None	replace
1494	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMin);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	4	None	replace
1495	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	4	None	replace
1496	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMineMonth);  [CE]  cannot  find  symbol  iMineMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMineMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  iMineMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMineMonth	4	None	replace
1497	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
1498	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
1499	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
1500	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  0,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  0,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  0,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
1501	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisDay);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDay	187	None	replace
1502	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	126	None	replace
1503	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  [CE]  '.class'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	126	None	replace
1504	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  this  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  this  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  this	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	126	None	replace
1505	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  instant;  }  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  instant;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  instant;  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1506	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  5;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	22	None	replace
1507	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [CE]  cannot  find  symbol  thisDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1  +  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	22	None	replace
1508	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	compilable	  [FE]  ExceptionInInitializerError  	250	1	replace
1509	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [FE]  ExceptionInInitializerError  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    itDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	compilable	  [FE]  ExceptionInInitializerError  	250	1	replace
1510	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getHeapMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1511	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getWeekOfDayOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1512	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getYearOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getYearOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getYearOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1513	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1514	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1515	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	replace
1516	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	62	None	replace
1517	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	164	None	replace
1518	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	164	None	replace
1519	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	164	None	replace
1520	[BUG]  [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1521	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	164	None	replace
1522	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  min,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  min,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  min,  iMin);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	50	None	replace
1523	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  0,  iMin);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	50	None	replace
1524	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth  +  1);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	26	None	replace
1525	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  2;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	150	None	add
1526	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  day);  [CE]  cannot  find  symbol  day  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  day);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  day	192	None	replace
1527	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  months);  [CE]  cannot  find  symbol  months  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  months);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  months	192	None	replace
1528	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  hour);  [CE]  cannot  find  symbol  hour  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  hour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  hour);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  hour	192	None	replace
1529	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  date);  [CE]  cannot  find  symbol  date  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  date);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  date);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  date	192	None	replace
1530	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMONTH);  [CE]  cannot  find  symbol  thisHeapMONTH  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMONTH);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMONTH);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMONTH	290	None	replace
1531	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	290	None	replace
1532	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);  [CE]  cannot  find  symbol  thisDom  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  *  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	213	None	replace
1533	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [CE]  cannot  find  symbol  months  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  months	210	None	replace
1534	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	210	None	replace
1535	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    yearToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	133	None	replace
1536	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
1537	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
1538	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMillisOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
1539	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getSecondOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
1540	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month));  [CE]  ';'  expected  [FE]        ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month));	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month));    	non-compiled	[CE]  ';'  expected	259	None	replace
1541	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  instant);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,long)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  instant);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    instant);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,long)	223	None	replace
1542	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	304	None	replace
1543	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  hour,  thisHeap);  [CE]  cannot  find  symbol  hour  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  hour,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  hour,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  hour	294	None	replace
1544	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  0,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  0,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  0,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	294	None	replace
1545	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
1546	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);  [CE]  cannot  find  symbol  day  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  day	270	None	replace
1547	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  day);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	116	None	replace
1548	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	127	None	replace
1549	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse,  iLeapMonth);  [CE]  cannot  find  symbol  dayToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  dayToUse,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayToUse	5	None	replace
1550	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  iLeapMonth);  [CE]  cannot  find  symbol  minuendToUse  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  minuendToUse	5	None	replace
1551	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth,  iMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	5	None	replace
1552	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	5	None	replace
1553	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
1554	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
1555	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  valueToUse);  [CE]  cannot  find  symbol  valueToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  valueToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  valueToUse);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  valueToUse	87	None	replace
1556	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  date);  [CE]  cannot  find  symbol  date  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  date);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  date);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  date	87	None	replace
1557	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  timePart);  [CE]  cannot  find  symbol  timePart  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  timePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  timePart);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  timePart	87	None	replace
1558	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
1559	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisLastMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	280	None	replace
1560	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	268	None	replace
1561	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month  +  1);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	268	None	replace
1562	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMax	268	None	replace
1563	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear,  iMin);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	20	None	replace
1564	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisWeek,  thisYear);  [CE]  cannot  find  symbol  thisWeek  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisWeek,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisWeek,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisWeek	20	None	replace
1565	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	203	None	replace
1566	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  valueToAdd);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  valueToAdd);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	203	None	replace
1567	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  year);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	253	None	replace
1568	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(thisYear,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(thisYear,  month);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
1569	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(thisYear,  instant);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(thisYear,  instant);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(thisYear,  instant);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
1570	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  iMax);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	253	None	replace
1571	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  date,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    date);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	274	None	replace
1572	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisValue);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisValue);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
1573	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisValue);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisValue);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
1574	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  ';'  expected	251	None	replace
1575	[BUG]  [BUGGY]  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  ';'  expected	251	None	replace
1576	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  ';'  expected	251	None	replace
1577	[BUG]  [BUGGY]  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  }	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  ';'  expected	251	None	replace
1578	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  ';'  expected	251	None	replace
1579	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  ';'  expected	251	None	replace
1580	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  year);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
1581	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear  +  1);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
1582	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(month,  thisYear);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
1583	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  months);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  months);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
1584	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	129	None	replace
1585	[BUG]  [BUGGY]  System.arraycopy(thisYear,  0,  thisMonth,  0,  thisYear);  [CE]  cannot  find  symbol  thisMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  System.arraycopy(thisYear,  0,  thisMonth,  0,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	System.arraycopy(thisYear,  0,  thisMonth,  0,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    System    	non-compiled	[CE]  cannot  find  symbol  thisMonth	220	None	replace
1586	[BUG]  [BUGGY]  System.arraycopy(iChronology,  0,  thisYear,  0,  iMax);  [CE]  cannot  find  symbol  thisDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  System.arraycopy(iChronology,  0,  thisYear,  0,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	System.arraycopy(iChronology,  0,  thisYear,  0,  iMax);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    System    	non-compiled	[CE]  cannot  find  symbol  thisDom	220	None	replace
1587	[BUG]  [BUGGY]  System.arraycopy(thisYear,  0,  thisMonth,  0,  iMax);  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  System.arraycopy(thisYear,  0,  thisMonth,  0,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	System.arraycopy(thisYear,  0,  thisMonth,  0,  iMax);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    System    	non-compiled	[CE]  cannot  find  symbol  thisMonth	220	None	replace
1588	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  0,  time);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  0,  time);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  0,  time);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    time);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	246	None	replace
1589	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  time  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  time  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  time  +  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    time);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	246	None	replace
1590	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]        ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	252	None	replace
1591	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear  +  1);  [timeout]  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[timeout]	252	None	replace
1592	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  1);  [timeout]  [FE]            ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[timeout]	252	None	replace
1593	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
1594	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
1595	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant;  int  itMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  ')'  expected	69	None	add
1596	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMONTthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMONTthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMONTthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
1597	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  year,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
1598	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  0,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  0,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  0,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
1599	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(thisYear,  instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(thisYear,  instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonth(thisYear,  instant);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1600	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setYearMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setYearMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setYearMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1601	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  thisHeapMonth);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	224	None	replace
1602	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  year);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  year);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol  year	224	None	replace
1603	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	200	None	replace
1604	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	200	None	replace
1605	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	128	None	replace
1606	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  year);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	128	None	replace
1607	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisDom  =  iChronology.getMonthOfYear(thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	128	None	replace
1608	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	84	None	replace
1609	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	84	None	replace
1610	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);  [CE]  cannot  find  symbol  thisDate  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDate);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDate	84	None	replace
1611	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  3);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  3);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  3);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1612	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMin);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1613	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  18);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  18);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  18);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1614	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  day);  [CE]  cannot  find  symbol  day  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  day);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  day);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  day	199	None	replace
1615	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  date);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  date);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  date	199	None	replace
1616	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisWeekMonth);  [CE]  cannot  find  symbol  thisWeekMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisWeekMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisWeekMonth	199	None	replace
1617	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month,  thisMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	303	None	replace
1618	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeap);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeap);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisHeap);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1619	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1620	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
1621	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInWeekMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInWeekMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInWeekMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
1622	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month;  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month;	  	non-compiled	[CE]  ')'  expected	7	None	add
1623	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
1624	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months,  thisYear,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
1625	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
1626	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	163	None	replace
1627	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1628	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	163	None	replace
1629	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1630	[BUG]  [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( "Invalid  [CE]  unclosed  string  literal  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( "Invalid  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  0)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  }  else  {  throw  new  IllegalArgumentException( "Invalid	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  unclosed  string  literal	163	None	replace
1631	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iMin);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iMin	256	None	replace
1632	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iLeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	256	None	replace
1633	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  valueToAdd);  [CE]  cannot  find  symbol  valueToAdd  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  valueToAdd);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  valueToAdd);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  valueToAdd	256	None	replace
1634	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  iHeapMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	256	None	replace
1635	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1636	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getYearOfMonth(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1637	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1638	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getStartOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getStartOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getStartOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1639	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getYearOfDay(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1640	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1L;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1L;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1L;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
1641	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1  +  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1  +  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1  +  1;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
1642	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1643	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1644	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);	  int    month    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	257	None	replace
1645	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  -1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  -1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  -1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	74	None	replace
1646	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  year  *  DateTimeConstants.MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	136	None	replace
1647	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  year)-  1;	  int    thisYear    =    iChronology.getYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	136	None	replace
1648	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1649	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1650	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1651	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1652	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1653	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth,  thisLastMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	277	None	replace
1654	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  MIN,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
1655	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  min,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  min,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  min,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
1656	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  MIN  -  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  MIN  -  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  MIN  -  1,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
1657	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  4,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  4,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  4,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	206	None	replace
1658	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	26	None	replace
1659	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	34	None	replace
1660	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month),  iMax  -  1;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	23	None	replace
1661	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  4;  [CE]  cannot  find  symbol  thisDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  4;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  4;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)-    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	23	None	replace
1662	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHours);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHours);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDOm    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHours	297	None	replace
1663	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisMillis);  [CE]  cannot  find  symbol  months  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  months,  thisMillis);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol  months	95	None	replace
1664	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);  [CE]  cannot  find  symbol  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisDom);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisMillis);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
1665	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  year);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	130	None	replace
1666	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  month);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	130	None	replace
1667	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	294	None	replace
1668	[BUG]  [BUGGY]  t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol	294	None	replace
1669	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	284	None	replace
1670	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisMinute);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	118	8	replace
1671	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisMinute);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	118	8	replace
1672	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  iMin);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  iMin	118	None	replace
1673	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  datePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	231	None	replace
1674	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  date);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  date);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  date);	  int    thisYear    =    iChronology.getYearMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	231	None	replace
1675	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthSeconds(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthSeconds(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthSeconds(instant,  month);	  int    thisYear    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	232	None	replace
1676	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  iMax;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  iMax;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  iMax;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	183	None	replace
1677	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	98	None	replace
1678	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisHeap);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisHeap);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisHeap);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1679	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1680	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1681	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	279	None	replace
1682	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month,  iMin);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
1683	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	280	None	replace
1684	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	280	None	replace
1685	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisDay);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  thisDay	270	None	replace
1686	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  date);  [CE]  cannot  find  symbol  date  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  date);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  date);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  date	270	None	replace
1687	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1688	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1689	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	107	None	add
1690	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getSecondOfDay(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	107	None	add
1691	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	213	None	replace
1692	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	86	None	replace
1693	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	86	None	replace
1694	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	86	None	replace
1695	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  date);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  date);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  date);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
1696	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  datePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  datePart);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	154	None	replace
1697	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	200	None	replace
1698	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	200	None	replace
1699	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	  float    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	200	None	replace
1700	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMonth);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1701	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1702	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1703	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisMin);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1704	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDom);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDom);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear,  thisDom);	  int    month    =    iChronology.getMonthOfYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	160	None	replace
1705	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	210	None	replace
1706	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	210	None	replace
1707	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  iMax);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iMax);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	210	None	replace
1708	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  iMax;	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month)+    1;    	non-compiled	[CE]  cannot  find  symbol  thisDom	22	None	replace
1709	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  min,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  min,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  min,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1710	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  datePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  datePart);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1711	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MAX_MONTH);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MAX_MONTH);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MAX_MONTH);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1712	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MILLIS_PER_DAY);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MILLIS_PER_DAY);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  MILLIS_PER_DAY);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	205	None	replace
1713	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
1714	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
1715	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
1716	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	31	None	replace
1717	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	239	None	replace
1718	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	239	None	replace
1719	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	239	None	replace
1720	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	239	None	replace
1721	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisValue);  [CE]  cannot  find  symbol  thisValue  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisValue);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisValue);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisValue	29	None	replace
1722	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisTime);  [CE]  cannot  find  symbol  thisTime  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisTime);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisTime);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    yearToUse,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisTime	29	None	replace
1723	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1724	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
1725	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	120	None	replace
1726	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  date);  [CE]  cannot  find  symbol  date  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  date);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  date);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  cannot  find  symbol  date	254	None	replace
1727	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1,  MIN);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
1728	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  MIN);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	204	None	replace
1729	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  +  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	202	None	replace
1730	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  datePart,  thisHeapMonth);  [CE]  cannot  find  symbol  datePart  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  datePart,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  datePart,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  datePart	134	None	replace
1731	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  new  Month(thisYear),  thisHeapMonth);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  new  Month(thisYear),  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  new  Month(thisYear),  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	134	None	replace
1732	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  year);	  int    month    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	157	None	replace
1733	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHours);  [CE]  cannot  find  symbol  thisHours  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHours);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHours);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisHours	191	None	replace
1734	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  iMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	304	None	replace
1735	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	304	None	replace
1736	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute  +  1);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	304	None	replace
1737	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	307	None	replace
1738	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisMinute);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	307	None	replace
1739	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	307	None	replace
1740	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	307	None	replace
1741	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisMax	8	None	replace
1742	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MAX_MONTH,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MAX_MONTH,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MAX_MONTH,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
1743	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MILLIS_PER_MONTH);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MILLIS_PER_MONTH);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MILLIS_PER_MONTH);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	44	None	replace
1744	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
1745	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  MIN,  iMax);	  int    thisYear    =    iChronology.getYear(instant,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	288	None	replace
1746	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysMonth(instant,  month,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
1747	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  1,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  1,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  1,  thisLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	285	None	replace
1748	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMin);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	50	None	replace
1749	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iHeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
1750	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  2);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  2);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  2);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	51	None	replace
1751	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iLeapMonth);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	190	None	replace
1752	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1753	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1754	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	282	None	replace
1755	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearDay(instant,  thisYear);	  int    month    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	226	None	replace
1756	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisJear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisJear	103	None	replace
1757	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisMinute);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	103	None	replace
1758	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	156	None	replace
1759	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	156	None	replace
1760	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	156	None	replace
1761	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	179	None	replace
1762	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	179	None	replace
1763	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMinute	25	None	replace
1764	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  thisMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMax	25	None	replace
1765	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  months  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	10	None	replace
1766	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  months  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    months,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	10	None	replace
1767	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  iMax);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	71	None	replace
1768	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	264	None	replace
1769	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisJear);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	264	None	replace
1770	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLastMonth);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	264	None	replace
1771	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLocale);  [CE]  cannot  find  symbol  thisLocale  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLocale);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear,  thisLocale);	  int    thisDom    =    iChronology.getDaysMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLocale	264	None	replace
1772	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMONTth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	66	None	replace
1773	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisDay);	  int    month    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	141	None	replace
1774	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	141	None	replace
1775	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	141	None	replace
1776	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMinute);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	182	None	replace
1777	[BUG]  [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  t  month  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	t  month  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    month    =    iChronology.getMonthOfYear(month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	235	None	replace
1778	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getdayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getdayOfMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getdayOfMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
1779	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	303	None	replace
1780	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	303	None	replace
1781	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	303	None	replace
1782	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	303	None	replace
1783	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	263	None	replace
1784	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisJear);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisJear	263	None	replace
1785	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisMax);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	263	None	replace
1786	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  thisLastMonth);	  int    thisDom    =    iChronology.getDaysMonthOfMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	263	None	replace
1787	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant  +  1,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	61	None	replace
1788	[BUG]  [BUGGY]  t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol	290	None	replace
1789	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMONTTH);  [CE]  cannot  find  symbol  thisHeapMONTTH  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMONTTH);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisHeapMONTTH);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMONTTH	290	None	replace
1790	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisLastYear);  [CE]  cannot  find  symbol  thisLastYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisLastYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisLastYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLastYear	289	None	replace
1791	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute  +  1);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute  +  1);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
1792	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	35	None	replace
1793	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  MIN,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysMonth(instant,  month,  MIN,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	76	None	replace
1794	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  day);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	308	None	replace
1795	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisYear,  thisMonth);	  int    thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	287	None	replace
1796	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisYear,  month);	  int    thisYear    =    iChronology.getYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	287	None	replace
1797	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month,  iMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	155	None	replace
1798	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month)-  1;	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	155	None	replace
1799	[BUG]  [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ')'  expected	125	None	replace
1800	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	137	None	replace
1801	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	137	None	replace
1802	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	137	None	replace
1803	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinutes);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinutes);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth,  thisMinutes);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	137	None	replace
1804	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	139	None	replace
1805	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	139	None	replace
1806	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	139	None	replace
1807	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month));  [CE]  ';'  expected  [FE]        ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month));	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month));    	non-compiled	[CE]  ';'  expected	259	None	replace
1808	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1,  MIN);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	225	None	replace
1809	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear)-  1;	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  cannot  find  symbol  thisDom	110	None	replace
1810	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax));  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
1811	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay));  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay));  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay));	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear));    	non-compiled	[CE]  ';'  expected	110	None	replace
1812	[BUG]  [BUGGY]  t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	t  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol	293	None	replace
1813	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
1814	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisMin);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
1815	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
1816	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
1817	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	278	None	replace
1818	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisJear);  [CE]  cannot  find  symbol  thisJear  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisJear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisJear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisJear	142	None	replace
1819	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month,  iMax);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	140	None	replace
1820	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month)-  1;  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month)-  1;	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	140	None	replace
1821	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month),  thisYear  -  1;  [CE]  ';'  expected  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month),  thisYear  -  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month),  thisYear  -  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    	non-compiled	[CE]  ';'  expected	153	None	replace
1822	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysMonth(instant,  month);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
1823	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax  -  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  2,  iMax  -  1);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	46	None	replace
1824	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN,  iMax);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    1);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	12	None	replace
1825	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  11);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  11);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  11);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	19	None	replace
1826	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInMonth(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
1827	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMax	203	None	replace
1828	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  1);  [CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth(long,int,int,int)	203	None	replace
1829	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisLastMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear,  thisLastMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	203	None	replace
1830	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	212	None	replace
1831	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [CE]  cannot  find  symbol  months  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  cannot  find  symbol  months	212	None	replace
1832	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  MIN,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    iMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	212	None	replace
1833	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisDom;  }  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisDom;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisDom;  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1834	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisDom  +  iChronology.getDaysInYearMonth(  [CE]  '.class'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisDom  +  iChronology.getDaysInYearMonth(  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  thisDom  +  iChronology.getDaysInYearMonth(	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	126	None	replace
1835	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	127	None	replace
1836	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	127	None	replace
1837	[BUG]  [BUGGY]  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
1838	[BUG]  [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  itMonth  =  iChronology.getMonthOfYear(instant);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    itMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	70	None	replace
1839	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iHeap);  [CE]  cannot  find  symbol  iHeap  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iHeap);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  iHeap	144	None	replace
1840	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMin,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMin,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMin,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
1841	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax,  thisLeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
1842	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  iMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	309	None	replace
1843	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	21	None	replace
1844	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  MIN);  [CE]  cannot  find  symbol  thisDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  MIN);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
1845	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  18);  [CE]  cannot  find  symbol  thisDom  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  18);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  18);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    -    1);    	non-compiled	[CE]  cannot  find  symbol  thisDom	21	None	replace
1846	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  year);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  year	171	None	replace
1847	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  year);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  year	171	None	replace
1848	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear,  year);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  year	171	None	replace
1849	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear,  year);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear,  year);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear,  year);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  months	171	None	replace
1850	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
1851	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  datePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  datePart);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	230	None	replace
1852	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iWeekMonth);  [CE]  cannot  find  symbol  iWeekMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iWeekMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iWeekMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  iWeekMonth	209	None	replace
1853	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iJoin);  [CE]  cannot  find  symbol  iJoin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iJoin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iJoin);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisXear);    	non-compiled	[CE]  cannot  find  symbol  iJoin	209	None	replace
1854	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  +  1,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1855	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month)-  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)-    1;    int  thisDom  =  iChronology.getDayOfMONTth(instant,  month)-  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	152	None	add
1856	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  thisDom;  }  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  thisDom;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  thisDom;  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	241	None	replace
1857	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  instant;  }  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  instant;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  instant;  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	241	None	replace
1858	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  thisYear;  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  thisYear;  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  thisYear;  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  illegal  start  of  expression	241	None	replace
1859	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLastYear);  [CE]  cannot  find  symbol  thisLastYear  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLastYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLastYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLastYear	100	None	replace
1860	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  dayOfMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    dayOfMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	73	None	replace
1861	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisDay);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisDay);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	275	None	replace
1862	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	275	None	replace
1863	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year,  thisMinute);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	275	None	replace
1864	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	256	None	replace
1865	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  1);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear,  1);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int,int)	256	None	replace
1866	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1867	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1868	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfMinute(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfMinute(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        month);        int    thisMONTth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getSecondOfMinute(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	166	None	add
1869	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]        ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear,  thisMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMax	252	None	replace
1870	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  -  1,  thisYear);  [CE]  cannot  find  symbol  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month  -  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month  -  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month    -    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	252	None	replace
1871	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [CE]  int  cannot  be  dereferenced  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).intValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	197	None	replace
1872	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	197	None	replace
1873	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();  [CE]  int  cannot  be  dereferenced  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  month).longValue();	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  int  cannot  be  dereferenced	197	None	replace
1874	[BUG]  [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1875	[BUG]  [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1876	[BUG]  [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  else  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1877	[BUG]  [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1878	[BUG]  [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear  <  =  iChronology)  {  thisMonth  =  iChronology.getMonthOfYear(instant);  }	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int    thisMonth    =    iChronology.getMonthOfYear(instant;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1879	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	299	None	replace
1880	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	299	None	replace
1881	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	299	None	replace
1882	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	208	None	replace
1883	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	208	None	replace
1884	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	208	None	replace
1885	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  isize);  [CE]  cannot  find  symbol  isize  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  isize);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear,  isize);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month    +    1,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  isize	208	None	replace
1886	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHour);  [CE]  cannot  find  symbol  thisHour  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHour);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month,  thisHour);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear,    thisHeight);    	non-compiled	[CE]  cannot  find  symbol  thisHour	94	None	replace
1887	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ')'  expected	129	None	replace
1888	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ')'  expected	129	None	replace
1889	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [CE]  '.class'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom!=  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	129	None	replace
1890	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin);  [CE]  cannot  find  symbol  thisMin  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMin);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  cannot  find  symbol  thisMin	271	None	replace
1891	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfYear(instant,  year);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfYear(instant,  year);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	114	None	replace
1892	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthMillis(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonthMillis(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthMillis(instant,  thisYear);	  int    month    =    iChronology.getYearMonth(instant,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	243	None	replace
1893	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getYearMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getYearMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
1894	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
1895	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysMonth(thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	7	None	add
1896	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    hour);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	75	None	replace
1897	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  hour,  thisYear);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    hour);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	75	None	replace
1898	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  min,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  min,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  min,  iMax);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	180	None	replace
1899	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	214	None	replace
1900	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay,  thisMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisDay);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	32	None	replace
1901	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  [CE]  '.class'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    System    	non-compiled	[CE]  '.class'  expected	220	None	replace
1902	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisY  [CE]  ')'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    System    	non-compiled	[CE]  ')'  expected	220	None	replace
1903	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  datePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  datePart);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
1904	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1,  iMax);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1,    iMax);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	310	None	replace
1905	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month    +    1);    int  thisDom  =  iChronology.getDayOfMONTth(instant,  month  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	52	None	add
1906	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	306	None	replace
1907	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth,  thisMinute);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLastMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	306	None	replace
1908	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  year)-  1;	  int    thisYear    =    iChronology.getYearMonth(instant,    year);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
1909	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisyear);  [CE]  cannot  find  symbol  thisyear  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisyear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisyear);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  cannot  find  symbol  thisyear	82	None	replace
1910	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getYearOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	298	None	replace
1911	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getYearOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	298	None	replace
1912	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [CE]  '.class'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	240	None	replace
1913	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisY	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ')'  expected	240	None	replace
1914	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [CE]  '.class'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  '.class'  expected	240	None	replace
1915	[BUG]  [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(month  <  thisYear)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisDom  ==  null)  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  }	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear    ==    null)    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
1916	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  months);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  months);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear,  months);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    months);    	non-compiled	[CE]  cannot  find  symbol  months	173	None	replace
1917	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  thisYear);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
1918	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant,  datePart);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant,  datePart);	  int    thisYear    =    iChronology.getYearMillis(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	233	None	replace
1919	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear));  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear));  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear));	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month));    	non-compiled	[CE]  ';'  expected	251	None	replace
1920	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	78	None	replace
1921	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1,    thisYear);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  thisMonth	54	None	replace
1922	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1923	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1924	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1925	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	33	None	replace
1926	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  thisMonth);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	244	None	replace
1927	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month,  thisMax);	  int    month    =    iChronology.getYearMonth(thisYear,    month);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	244	None	replace
1928	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  day);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    day);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	117	None	replace
1929	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMax);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
1930	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear,  thisMinute);	  int    month    =    iChronology.getMonthsInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	158	None	replace
1931	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  theYear,  iLeapMonth);  [CE]  cannot  find  symbol  theYear  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  theYear,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  theYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  theYear	5	None	replace
1932	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  day,  iLeapMonth);  [CE]  cannot  find  symbol  day  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  day,  iLeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  day,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  day	5	None	replace
1933	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  MIN);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	185	None	replace
1934	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysMonth(instant,  month,  iLeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	77	None	replace
1935	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  Month.MILLISECOND);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  Month.MILLISECOND);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  Month.MILLISECOND);	  int    month    =    iChronology.getMonthOfYear(instant,    year);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	283	None	replace
1936	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth  +  1);  [CE]  cannot  find  symbol  thisMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMonth  +  1);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	60	None	replace
1937	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax  +  1);  [CE]  cannot  find  symbol  thisMax  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax  +  1);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear    +    1);    	non-compiled	[CE]  cannot  find  symbol  thisMax	60	None	replace
1938	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  time);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  time);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  time);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    time);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	246	None	replace
1939	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
1940	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getStandardOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getStandardOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    thisMONTth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getStandardOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	65	None	add
1941	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getDayOfMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1942	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1943	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant,        thisYear);        int    itMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getYearOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	112	None	add
1944	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month;  [CE]  ')'  expected  [FE]          ExceptionInInitializerError      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int    thisDom    =    iChronology.getDayOfMonth(instant,    month;    	non-compiled	[CE]  ')'  expected	228	None	replace
1945	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	217	None	replace
1946	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  [CE]  '.class'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  '.class'  expected	217	None	replace
1947	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	217	None	replace
1948	[BUG]  [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisMonth)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisMonth)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisMonth)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisMonth    >    thisYear)    {    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    	non-compiled	[CE]  ')'  expected	217	None	replace
1949	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  MIN);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisMax);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	313	None	replace
1950	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth,  iMax);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth,  iMax);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	211	None	replace
1951	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth);  [CE]  cannot  find  symbol  iHeapMonth  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    iHeapMonth);    [timeout]    	non-compiled	[CE]  cannot  find  symbol  iHeapMonth	211	None	replace
1952	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	269	None	replace
1953	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	269	None	replace
1954	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMin);  [CE]  cannot  find  symbol  thisMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear,  thisMin);	  int    thisMonth    =    iChronology.setMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMin	269	None	replace
1955	[BUG]  [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	t  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfYear(thisYear,    instant);    	non-compiled	[CE]  cannot  find  symbol	223	None	replace
1956	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfMonth(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfMonth(instant,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant);    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1957	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	4	None	replace
1958	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month,  iHeapMonth);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month,    iHeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	79	None	replace
1959	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month,  MIN);	  int    thisYear    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	196	None	replace
1960	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisLeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
1961	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisMin);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisMin);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
1962	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax,  thisHeapMonth);	  int    month    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMax);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	305	None	replace
1963	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  month);  [CE]  no  suitable  method  found  for  dayOfMonth(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.dayOfMonth(instant,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.dayOfMonth(instant,  month);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  dayOfMonth(long,int)	17	None	replace
1964	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearOfMonth(instant,  month  +  1);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month    +    1);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	80	None	replace
1965	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ')'  expected	219	None	replace
1966	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysMonth(instant,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysMonth(instant,  month,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
1967	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisMinute);	  int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	286	None	replace
1968	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  iMax;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  iMax;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  iMax;	  int    thisYear    =    iChronology.getDayOfMonth(instant,    month)+    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	81	None	replace
1969	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMillisOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	300	None	replace
1970	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMillisOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	300	None	replace
1971	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  month);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisDom    =    iChronology.getMillisOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	300	None	replace
1972	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month),  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month),  thisYear);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    month);    	non-compiled	[CE]  ';'  expected	255	None	replace
1973	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	292	None	replace
1974	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  thisWeek);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	273	None	replace
1975	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
1976	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	84	None	replace
1977	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart,  thisDay);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart,  thisDay);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    datePart);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	312	None	replace
1978	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  date);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  date);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  date);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    date);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	274	None	replace
1979	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant);	  int    thisMonth    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  cannot  find  symbol	224	None	replace
1980	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisMax);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
1981	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisMinute);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
1982	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth,  thisHeapMonth);	  int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	159	None	replace
1983	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  yearToUse);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    yearToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	133	None	replace
1984	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  yearToUse);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthsInYearMonth(instant,  yearToUse);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    yearToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	133	None	replace
1985	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  datePart,  thisHeap);  [CE]  cannot  find  symbol  datePart  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  datePart,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  datePart,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    months,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  datePart	143	None	replace
1986	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	83	None	replace
1987	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	83	None	replace
1988	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	83	None	replace
1989	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	83	None	replace
1990	[BUG]  [BUGGY]  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	Integer  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	97	None	replace
1991	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear  +  1);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear  +  1);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear    +    1);    int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear  +  1);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	58	None	add
1992	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin);  [CE]  cannot  find  symbol  thisMin  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMin);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMin	85	None	replace
1993	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);	  int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	85	None	replace
1994	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getDayOfMonth(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
1995	[BUG]  [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]          int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMthOfYear(instant);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	                int        thisMonth        =        iChronology.getMonthOfYear(instant);        int    itMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	69	None	add
1996	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1997	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month,  MIN,  iMin);	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month,    iMin);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	186	None	replace
1998	[BUG]  [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  float  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisMonth  =  iChronology.getMonthOfYear(instant,  1);	          int    thisMonth    =    iChronology.getMonthOfYear(instant);    float    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	237	None	replace
1999	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	253	None	replace
2000	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisHeap);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	253	None	replace
2001	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisValue);  [CE]  cannot  find  symbol  thisValue  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisValue);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisValue);	  int    thisDom    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisValue	253	None	replace
2002	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeap);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisHeap);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	189	None	replace
2003	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisValue);  [CE]  cannot  find  symbol  thisValue  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisValue);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear,  thisValue);	  int    thisDom    =    iChronology.getYearMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisValue	189	None	replace
2004	[BUG]  [BUGGY]  if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	if(thisYear!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth!=  null)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisY	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=    null)    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    }    else    {    int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  ')'  expected	215	None	replace
2005	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1)-  1;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1)-  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1)-  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	258	None	replace
2006	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  MIN,  iLeapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
2007	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  leapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  leapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  MIN,  leapMonth);	  int    thisYear    =    iChronology.getMonthOfYear(instant,    month,    iLeapMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	48	None	replace
2008	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1)-  1;  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1)-  1;	  int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month)-    1;    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	184	None	replace
2009	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisYear);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	267	None	replace
2010	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMax);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	267	None	replace
2011	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMine);  [CE]  cannot  find  symbol  thisMine  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMine);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMine);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMine	267	None	replace
2012	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear,  thisMinute);	  int    thisMonth    =    iChronology.getYearMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	267	None	replace
2013	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear,  month);	  int    thisYear    =    iChronology.getYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	317	None	replace
2014	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisDay);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisDay);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
2015	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisMinute);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisMinute);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
2016	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisLeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisLeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
2017	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisHeapMonth);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  thisHeapMonth);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
2018	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  iMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  iMax);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue,  iMax);	  int    month    =    iChronology.getMonthOfYear(instant,    thisYear,    thisValue);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	281	None	replace
2019	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month)+  1;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month)+  1;  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month)+    1;    int  thisDom  =  iChronology.getDayOfMONTth(instant,  month)+  1;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	150	None	add
2020	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisDom);  [CE]  cannot  find  symbol  months  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisDom);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol  months	261	None	replace
2021	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisDom);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
2022	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisDom);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisDom);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisDom);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisDom);    	non-compiled	[CE]  cannot  find  symbol	261	None	replace
2023	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDay);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisDay	198	None	replace
2024	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear,    year);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	198	None	replace
2025	[BUG]  [BUGGY]  char  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  char  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]      int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	char  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	187	None	replace
2026	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1      [CONTEXT]      public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);        [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]      int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	          int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
