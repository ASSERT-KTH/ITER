bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  month);	      int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	replace
2	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  year);	      int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	replace
3	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  month);	      int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	replace
4	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
5	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
6	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear);  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	16	None	replace
7	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	8	replace
8	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	8	replace
9	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
10	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  months	16	None	replace
11	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	16	None	replace
12	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  1);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  1);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
13	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  thisYear);	      int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	10	None	replace
14	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant);	      int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	10	None	replace
15	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month);	      int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	10	None	replace
16	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(thisYear,  month);	      int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	10	None	replace
17	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
18	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	28	None	replace
19	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	28	None	replace
20	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	28	None	replace
21	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  cannot  find  symbol  thisDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	28	None	replace
22	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  cannot  find  symbol  thisDom  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	28	None	replace
23	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  cannot  find  symbol  thisDom  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisDom	28	None	replace
24	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	17	None	replace
25	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [timeout]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[timeout]	17	None	replace
26	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [timeout]  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[timeout]	17	None	replace
27	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	17	None	replace
28	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  yearToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear,  thisLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	17	None	replace
29	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	17	None	replace
30	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
31	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
32	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
33	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
34	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
35	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
36	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
37	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  year);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  year);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
38	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    Integer  thisDom  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
39	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfYear(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
40	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  months);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
41	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMillis(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMillis(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMillis(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
42	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMONTth(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMONTth(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
43	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayofMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayofMonth(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayofMonth(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
44	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMax);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
45	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
46	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
47	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)+  1;	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
48	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iLeapMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
49	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month)-  1;	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
50	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMin);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iMin);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
51	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month,  iHeapMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
52	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	22	1	replace
53	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [FE]  ExceptionInInitializerError  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	compilable	  [FE]  ExceptionInInitializerError  	22	1	replace
54	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear);  [timeout]  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[timeout]	22	None	replace
55	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[timeout]	22	None	replace
56	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  2);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  2);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  2);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[timeout]	22	None	replace
57	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  1);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  *  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[timeout]	22	None	replace
58	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	22	8	replace
59	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	22	8	replace
60	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear  +  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
61	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	24	None	add
62	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	24	None	add
63	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisYear  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	24	None	add
64	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	24	None	add
65	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	24	8	add
66	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	24	8	add
67	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant;	  	non-compiled	[CE]  ')'  expected	24	None	add
68	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronologist.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronologist.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronologist.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	24	None	add
69	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	24	8	add
70	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  itMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  itMonth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	24	8	add
71	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  year);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
72	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
73	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
74	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  1);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
75	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  hour);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
76	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMax);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
77	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iLeapMonth);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
78	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iMinute);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
79	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month,  iHeapMonth);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
80	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
81	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)+  1;	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
82	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	32	None	replace
83	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	32	None	replace
84	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
85	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	32	None	replace
86	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	32	None	replace
87	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	32	None	replace
88	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	32	None	replace
89	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
90	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  month);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
91	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	20	None	replace
92	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
93	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	20	None	replace
94	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [CE]  cannot  find  symbol  thisHeight  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeight);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeight	20	None	replace
95	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	20	None	replace
96	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	13	None	replace
97	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  instant);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	13	None	replace
98	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [CE]  cannot  find  symbol  yearToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  yearToUse,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  yearToUse	13	None	replace
99	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  year,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	13	None	replace
100	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	13	None	replace
101	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	8	replace
102	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	8	replace
103	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    timeout    	non-compiled	[CE]  cannot  find  symbol  months	15	None	replace
104	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	31	None	add
105	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	31	None	add
106	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	31	None	add
107	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	31	8	add
108	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	31	8	add
109	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronologist.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	31	None	add
110	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear));	  	non-compiled	[CE]  ';'  expected	31	None	add
111	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear;	  	non-compiled	[CE]  ')'  expected	31	None	add
112	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	31	8	add
113	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  itMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	31	8	add
114	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  year);	      int    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	4	None	replace
115	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant);	      int    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	4	None	replace
116	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  day);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  day);	      int    thisYear    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	4	None	replace
117	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  day);	      int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	6	None	replace
118	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisMinute);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	35	None	replace
119	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisYear);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  year	35	None	replace
120	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	8	None	replace
121	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	8	None	replace
122	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	8	None	replace
123	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
124	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	18	None	add
125	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
126	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	18	None	add
127	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	18	None	add
128	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
129	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
130	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  year);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	7	None	replace
131	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  months);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	7	None	replace
132	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  day);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	7	None	replace
133	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  yearToUse);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	7	None	replace
134	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisHeapMonth);  [CE]  cannot  find  symbol  months  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisHeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  months	21	None	replace
135	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapYear);  [CE]  cannot  find  symbol  thisHeapYear  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeapYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisHeapYear	21	None	replace
136	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  year);	      int    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
137	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
138	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  month);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
139	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisHeapMonth);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
140	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
141	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  thisYear);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
142	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeap);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	36	None	replace
143	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisHeap);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisHeap);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  months,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  months	36	None	replace
144	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeap);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	36	None	replace
145	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  [CE]  cannot  find  symbol  thisDom  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	25	None	replace
146	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
147	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	25	None	replace
148	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	compilable	  [FE]  ExceptionInInitializerError  	12	1	replace
149	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  [FE]  ExceptionInInitializerError  [FE]    ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	compilable	  [FE]  ExceptionInInitializerError  	12	1	replace
150	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	compilable	  [FE]  ExceptionInInitializerError  	12	1	replace
151	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  [FE]  ExceptionInInitializerError  [FE]      ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)+  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	compilable	  [FE]  ExceptionInInitializerError  	12	1	replace
152	[BUG]  [BUGGY]  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	compilable	  [FE]  ExceptionInInitializerError  	12	1	replace
153	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  [FE]  ExceptionInInitializerError  [FE]        ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month)-  1;	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	compilable	  [FE]  ExceptionInInitializerError  	12	1	replace
154	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  months);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	5	None	replace
155	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
156	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisLeapMonth);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
157	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  month);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
158	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthsInYearMonth(instant,  thisYear);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
159	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisHeapMonth);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
160	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYearMonth(instant,  thisYear);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
161	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	27	None	add
162	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	27	None	add
163	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	27	None	add
164	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisYear  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	27	None	add
165	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	27	None	add
166	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
167	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
168	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;	  	non-compiled	[CE]  ')'  expected	27	None	add
169	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	27	None	add
170	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
171	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  year);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
172	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    Integer  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
173	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  months);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
174	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfYear(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfYear(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayOfYear(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
175	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisXear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisXear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisXear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
176	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMONTth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMONTth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayOfMONTth(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
177	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayofMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayofMonth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayofMonth(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
178	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisYear);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[timeout]	37	None	replace
179	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iLeapMonth);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
180	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
181	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iHeapMonth);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
182	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMinute);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
183	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
184	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
185	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
186	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month,  iMin);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
187	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	19	None	replace
188	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	19	None	replace
189	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfDay(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
190	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iLeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[timeout]	37	None	replace
191	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  year);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  year);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  year	37	None	replace
192	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  year);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  year);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	20	None	replace
193	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfDay(instant,  thisYear,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	20	None	replace
194	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthsInYearMonth(instant,  month);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	7	None	replace
195	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	7	None	replace
196	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant,  month);	      int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	6	None	replace
197	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	27	None	add
198	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	13	None	replace
199	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months);  [CE]  cannot  find  symbol  months  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  months);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  months	13	None	replace
200	[BUG]  [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	float  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	13	None	replace
201	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  3);  [timeout]  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  3);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  3);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[timeout]	22	None	replace
202	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    timeout    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
203	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    timeout    	non-compiled	[timeout]	15	None	replace
204	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDaysInYearMonth(instant,  month  -  1);	      int    thisYear    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	1	None	replace
205	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  +  1,  iMax);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
206	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  month  -  1,  iMax);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	33	None	replace
207	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	16	None	replace
208	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
209	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear);  [CE]  cannot  find  symbol  thisXear  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisXear);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  cannot  find  symbol  thisXear	16	None	replace
210	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iMax);  [timeout]  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iMax);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[timeout]	21	None	replace
211	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth);  [timeout]  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iHeapMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeapMonth);    	non-compiled	[timeout]	21	None	replace
212	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	32	None	replace
213	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear  +  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDom	32	None	replace
214	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	31	None	add
215	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
216	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	31	None	add
217	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisMonth  >  thisYear)  {  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
218	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if  [CE]  '('  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if	  	non-compiled	[CE]  '('  expected	31	None	add
219	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	31	None	add
220	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  System  [CE]  not  a  statement  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  System  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  System	  	non-compiled	[CE]  not  a  statement	31	None	add
221	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  return  [CE]  '.class'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  return  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear!=  null)  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  return	  	non-compiled	[CE]  '.class'  expected	31	None	add
222	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iMinute);  [CE]  cannot  find  symbol  iMinute  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iMinute);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  iMinute);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMinute);    	non-compiled	[CE]  cannot  find  symbol  iMinute	35	None	replace
223	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  instant);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,long)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,long)	25	None	replace
224	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
225	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  -  1);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
226	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfDay(instant,  month);	      int    month    =    iChronology.getDayOfMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	10	None	replace
227	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
228	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month;  [CE]  ')'  expected  [FE]      ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month;	  	non-compiled	[CE]  ')'  expected	11	None	add
229	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  itDom  =  iChronology.getDayOfMonth(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
230	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonthOfYear(instant);	      int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	replace
231	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  months);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  months);	      int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	replace
232	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(thisYear,  month);	      int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	replace
233	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMillis(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMillis(instant);	      int    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
234	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisHeap);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisHeap);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  year,  thisHeap);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisHeap);    	non-compiled	[CE]  cannot  find  symbol  year	36	None	replace
235	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	8	None	replace
236	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  months);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	8	None	replace
237	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    float  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	24	None	add
238	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	24	None	add
239	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	18	None	add
240	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
241	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [CE]  incomparable  types:  int  and  <null>  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    if(thisYear  ==  null)  {  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	non-compiled	[CE]  incomparable  types:  int  and  <null>	18	None	add
242	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  Integer  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
243	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getYearMonth(instant,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(instant,  month);	      int    month    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
244	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear,  month);	      int    month    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
245	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getYearMonth(thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonth(thisYear);	      int    month    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	30	None	replace
246	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  time);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  time);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  time);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
247	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
248	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  months);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
249	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDOm  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDOm  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDOm  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
250	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  itDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
251	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month));	  timeout    	non-compiled	[CE]  ';'  expected	14	None	add
252	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);  [timeout]  [FE]    ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  month  -  1,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[timeout]	12	None	replace
253	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  thisYear);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
254	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  year);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  year	19	None	replace
255	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
256	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	28	None	replace
257	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
258	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	16	None	replace
259	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month));  [CE]  ';'  expected  [FE]    ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month));  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month));	  	non-compiled	[CE]  ';'  expected	11	None	add
260	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month).intValue;  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      ExceptionInInitializerError    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  month);  int  thisDom  =  iChronology.getDayOfMonth(instant,  month).intValue;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    month);    int  thisDom  =  iChronology.getDayOfMonth(instant,  month).intValue;	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	11	None	add
261	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [CE]  variable  thisDom  might  not  have  been  initialized  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisDom);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  variable  thisDom  might  not  have  been  initialized	37	None	replace
262	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [CE]  cannot  find  symbol  thisLastMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisMonth);    	non-compiled	[CE]  cannot  find  symbol  thisLastMonth	37	None	replace
263	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonthOfMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    timeout    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
264	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysMonth(instant,  month,  thisYear);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    timeout    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
265	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    float  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	31	None	add
266	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisMonth  =  iChronology.getMONTthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	31	None	add
267	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getYearMonthOfYear(instant,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
268	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  cannot  find  symbol  thisDom  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  thisDom	25	None	replace
269	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.setMonthOfYear(instant,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
270	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  cannot  find  symbol  year	25	None	replace
271	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMax	17	None	replace
272	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);  [CE]  cannot  find  symbol  thisMillis  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMillis);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    thisLeapMonth);    	non-compiled	[CE]  cannot  find  symbol  thisMillis	17	None	replace
273	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
274	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  date);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  date);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
275	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	34	None	replace
276	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  18);  [timeout]  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  18);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear  +  18);	  int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear    +    1);    [timeout]    	non-compiled	[timeout]	22	None	replace
277	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
278	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
279	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
280	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLastMonth);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
281	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisValue);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	23	None	replace
282	[BUG]  [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getYearMonthOfYear(instant,  thisYear);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	8	None	replace
283	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	8	None	replace
284	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	5	None	replace
285	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLeapMonth);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	5	None	replace
286	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	5	None	replace
287	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisYear);	      int    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
288	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYear(instant,  iMax);	      int    thisYear    =    iChronology.getYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	2	None	replace
289	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [CE]  cannot  find  symbol  thisLeapMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisLeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisLeapMonth	20	None	replace
290	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [CE]  cannot  find  symbol  thisHeapMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeapMonth);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeapMonth	20	None	replace
291	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisYear);	  int    thisDom    =    iChronology.getMonthOfDay(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	20	None	replace
292	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	13	None	replace
293	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  cannot  find  symbol  thisMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMonth	19	None	replace
294	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap);  [CE]  cannot  find  symbol  thisHeap  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisHeap);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisHeap	19	None	replace
295	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);	  int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	19	None	replace
296	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getMONTthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
297	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDOm  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
298	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getYearOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
299	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    float  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
300	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getMillisOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	18	None	add
301	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getMonthOfYear(instant,    thisYear);    int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear;	  	non-compiled	[CE]  ')'  expected	18	None	add
302	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getYearOfYear(instant);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getYearOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	24	None	add
303	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
304	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMinute);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
305	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMax);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
306	[BUG]  [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDayOfMonth(instant,  thisYear,  thisLastMonth);	      int    month    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	9	None	replace
307	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
308	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  year);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
309	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);  [CE]  variable  month  is  already  defined  in  method  set(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  month  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMax);	      int    month    =    iChronology.getDaysInYearMonth(instant,    thisYear);    	non-compiled	[CE]  variable  month  is  already  defined  in  method  set(long,int)	29	None	replace
310	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  iMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month  +  1,  iMax);	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
311	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getDayOfMonth(instant,  month)-  1;	      int    thisYear    =    iChronology.getDayOfMonth(instant,    month);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	3	None	replace
312	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  datePart);	      int    thisYear    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	6	None	replace
313	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [CE]  cannot  find  symbol  thisMax  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMax);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMax	32	None	replace
314	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [CE]  cannot  find  symbol  thisMinute  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMinute);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisMinute	32	None	replace
315	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  cannot  find  symbol  thisDay  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol  thisDay	32	None	replace
316	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronologist.getDayOfMonth(instant,  thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  int  thisDom  =  iChronologist.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int    thisDom    =    iChronology.getDayOfMonth(instant,    thisYear,    month);    int  thisDom  =  iChronologist.getDayOfMonth(instant,  thisYear,  month);	  timeout    	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	14	None	add
317	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);      [BUGGY]  int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);  [BUGGY]    int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	297	297	8	replace	int  thisYear  =  iChronology.getYearMonth(instant,  thisYear);	      int    thisYear    =    iChronology.getYearMonth(instant);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	replace
