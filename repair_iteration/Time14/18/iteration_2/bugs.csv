bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisYear)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  ||  thisDom  <  thisYear)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
2	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisYear)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisYear)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  thisYear)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
3	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendMonth)  {  [CE]  cannot  find  symbol  minuendMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  minuendMonth)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	34	None	replace
4	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendYear)  {  [CE]  cannot  find  symbol  minuendYear  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendYear)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  minuendYear)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendYear	34	None	replace
5	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendMillis)  {  [CE]  cannot  find  symbol  minuendMillis  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendMillis)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  minuendMillis)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendMillis	34	None	replace
6	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendInstant)  {  [CE]  cannot  find  symbol  minuendInstant  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendInstant)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  minuendInstant)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendInstant	34	None	replace
7	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisMonth)  {  [CE]  cannot  find  symbol  thisMonth  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  thisMonth)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  thisMonth	34	None	replace
8	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  MILLIS_PER_DAY)  {  [CE]  cannot  find  symbol  MILLIS_PER_DAY  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  MILLIS_PER_DAY)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  MILLIS_PER_DAY)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  MILLIS_PER_DAY	34	None	replace
9	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendMax)  {  [CE]  cannot  find  symbol  minuendMax  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  minuendMax)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  minuendMax)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendMax	34	None	replace
10	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  maxDom  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
11	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  If(thisDom  >  maxDom  +  1)  {  [CE]  ';'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  If(thisDom  >  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    If(thisDom  >  maxDom  +  1)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
12	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  thisDom  +  1)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  thisDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  thisDom  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
13	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  thisDom  =  maxDom;  }  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  thisDom  =  maxDom;  }  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  maxDom  +  1)  {  thisDom  =  maxDom;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
14	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  thisDom  =  maxDom;  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  maxDom  +  1)  {  thisDom  =  maxDom;	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
15	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  }  thisDom  =  maxDom;  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  {  }  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  maxDom  +  1)  {  }  thisDom  =  maxDom;	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
16	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  minDom  +  1)  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  minDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  minDom  +  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
17	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  <  thisDom  =  maxDom;  [CE]  >  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  1)  <  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  maxDom  +  1)  <  thisDom  =  maxDom;	  	non-compiled	[CE]  >  expected	6	None	add
18	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
19	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
20	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
21	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
22	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
23	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
24	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
25	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
29	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iLeapMonth);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMinute);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMinute);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMinute);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  <  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
33	[BUG]  [BUGGY]  if(thisDom  <  maxDom  +  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
34	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >=  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
35	[BUG]  [BUGGY]  if(thisDom  >=  maxDom  +  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >=  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
36	[BUG]  [BUGGY]  if(thisDom  <  =  maxDom  +  1)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  =  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  =  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  thisDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
38	[BUG]  [BUGGY]  if(thisDom  >  thisDom  +  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  thisDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
39	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  ==  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  ==  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
40	[BUG]  [BUGGY]  if(thisDom  ==  maxDom  +  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  ==  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  ==  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
41	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  >  thisDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(maxDom  >  thisDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
42	[BUG]  [BUGGY]  if(maxDom  >  thisDom  +  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  >  thisDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(maxDom  >  thisDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
43	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom!=  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom!=  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
44	[BUG]  [BUGGY]  if(thisDom!=  maxDom  +  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom!=  maxDom  +  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom!=  maxDom  +  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
45	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  maxDom);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  maxDom);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
46	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
47	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
48	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  month);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
49	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom);  [CE]  illegal  start  of  type  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisDom);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
50	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  illegal  start  of  type  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [CE]  illegal  start  of  type  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDay);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  temp);  [CE]  illegal  start  of  type  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  temp);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  temp);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
53	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  &&  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
54	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  >  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
55	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  <  maxDom  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
56	[BUG]  [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  maxDom  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
57	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisYear  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  thisYear  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
58	[BUG]  [BUGGY]  if(thisDom  >  thisYear  ||  thisDom  >  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisYear  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  thisYear  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
59	[BUG]  [BUGGY]  if(thisDom  <  =  maxDom  ||  thisDom  >  maxDom)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  =  maxDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  =  maxDom  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
60	[BUG]  [BUGGY]  if(thisDom  <  minuendDom  ||  thisDom  >  maxDom)  {  [CE]  cannot  find  symbol  minuendDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  minuendDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  minuendDom  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendDom	33	None	replace
61	[BUG]  [BUGGY]  if(thisDom  <  minuendInstant  ||  thisDom  >  maxDom)  {  [CE]  cannot  find  symbol  minuendInstant  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  minuendInstant  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  minuendInstant  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendInstant	33	None	replace
62	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >=  maxDom  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
63	[BUG]  [BUGGY]  if(thisDom  >=  maxDom  ||  thisDom  >  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >=  maxDom  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
64	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
65	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month  +  1);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  month);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month  -  1);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
69	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month)-  1;	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
70	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month)+  1;	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
71	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
72	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  thisDom  ||  thisDom  >  maxDom)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  thisDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  thisDom  ||  thisDom  >  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
73	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  If(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  [CE]  ';'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  If(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    If(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {	  	non-compiled	[CE]  ';'  expected	32	None	add
74	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  minDom  ||  thisDom  >  maxDom)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  minDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  minDom  ||  thisDom  >  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
75	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  minuendDom)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  minuendDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  maxDom  ||  thisDom  >  minuendDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
76	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  tempDom  ||  thisDom  >  maxDom)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  tempDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  tempDom  ||  thisDom  >  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
77	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  minDom)  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  minDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  maxDom  ||  thisDom  >  minDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
78	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	17	None	add
79	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisDom  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisDom  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	17	None	add
80	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	17	None	add
81	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	17	None	add
82	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	17	None	add
83	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisYear  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisYear  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	17	None	add
84	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronologist.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	17	None	add
85	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	8	add
86	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMONTth  =  iChronology.getMonthOfYear(instant,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	17	8	add
87	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  ==  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  ==  maxDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
88	[BUG]  [BUGGY]  if(thisDom  ==  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  ==  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  ==  maxDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
89	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom!=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom!=  maxDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
90	[BUG]  [BUGGY]  if(thisDom!=  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom!=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom!=  maxDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
91	[BUG]  [BUGGY]  if(thisDom  <  =  thisDom)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  =  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  =  thisDom)  {	  if(thisDom    >    thisDom)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
92	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  >  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(maxDom  >  thisDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
93	[BUG]  [BUGGY]  if(maxDom  >  thisDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  >  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(maxDom  >  thisDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
94	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  <  thisDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
95	[BUG]  [BUGGY]  if(thisDom  <  thisDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  thisDom)  {	  if(thisDom    >    thisDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	8	replace
96	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  month);	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
97	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
98	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  instant);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(month,  instant);	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
99	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
100	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  year);	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
101	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
104	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  illegal  start  of  type  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
105	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [CE]  illegal  start  of  type  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month)+  1;	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
106	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [CE]  illegal  start  of  type  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
107	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  illegal  start  of  type  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
108	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  >=  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(maxDom  >=  thisDom)  {	  if(thisDom    >=    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	replace
109	[BUG]  [BUGGY]  if(maxDom  >=  thisDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  >=  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(maxDom  >=  thisDom)  {	  if(thisDom    >=    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	replace
110	[BUG]  [BUGGY]  if(thisDom  >>  maxDom)  {  [CE]  incompatible  types  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >>  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >>  maxDom)  {	  if(thisDom    >=    maxDom)    {    	non-compiled	[CE]  incompatible  types	4	None	replace
111	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >=  thisDom)  {	  if(thisDom    >=    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	replace
112	[BUG]  [BUGGY]  if(thisDom  >=  thisDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >=  thisDom)  {	  if(thisDom    >=    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	replace
113	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
114	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
115	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
116	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
117	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
119	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom;  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
120	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
121	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  thisYear);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
122	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthsInYearMonth(thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthsInYearMonth(thisYear,  month);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
123	[BUG]  [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getDaysInYearMonth(thisYear,  month);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
124	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMinutesInYearMonth(instant,  month);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
125	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMillisOfDay(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMillisOfDay(instant,  thisYear);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMillisOfDay(instant,  thisYear);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
126	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
127	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  If(thisDom  >  thisDom)  {  [CE]  ';'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  If(thisDom  >  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    If(thisDom  >  thisDom)  {	  	non-compiled	[CE]  ';'  expected	28	None	add
128	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
129	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY);  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
130	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY);  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
131	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
132	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY  [CE]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "= "  +  DateTimeConstants.MILLIS_PER_DAY	  	non-compiled	[CE]  	28	None	add
133	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY  [CE]  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + ", "  +  DateTimeConstants.MILLIS_PER_DAY	  	non-compiled	[CE]  	28	None	add
134	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  throw  new  IllegalFieldValueException( "dayOfMonth  must  be  in  the  range  [ "  +  DateTimeConstants.MILLIS_PER_DAY  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
135	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  maxDom);	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
136	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  illegal  start  of  type  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  +  1);	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
137	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [CE]  illegal  start  of  type  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  thisYear);	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
138	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  illegal  start  of  type  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month  -  1);	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
139	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  illegal  start  of  type  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month,  iMax);	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
140	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  illegal  start  of  type  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month)-  1;	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
141	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  illegal  start  of  type  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month)+  1;	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
142	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month),  maxDom);  [CE]  ';'  expected  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  month),  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  month),  maxDom);	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  ';'  expected	21	None	replace
143	[BUG]  [BUGGY]  if(thisDom  <  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  maxDom  &&  thisDom  <  =  MAX_VALUE)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
144	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  MAX_VALUE)  {  [CE]  cannot  find  symbol  MAX_VALUE  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  MAX_VALUE)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  MAX_VALUE)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_VALUE	35	None	replace
145	[BUG]  [BUGGY]  if(thisDom  <  =  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  =  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  =  maxDom  &&  thisDom  <  =  MAX_VALUE)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
146	[BUG]  [BUGGY]  if(thisDom  >=  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >=  maxDom  &&  thisDom  <  =  MAX_VALUE)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
147	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  thisYear)  {  [CE]  illegal  start  of  expression  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  thisYear)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  =  thisYear)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
148	[BUG]  [BUGGY]  if(thisDom  >  MAX_VALUE  &&  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  MAX_VALUE  &&  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  MAX_VALUE  &&  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
149	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  =  1)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
150	[BUG]  [BUGGY]  if(thisDom  ==  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  ==  maxDom  &&  thisDom  <  =  MAX_VALUE)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  ==  maxDom  &&  thisDom  <  =  MAX_VALUE)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
151	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
152	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  If(thisDom  <  maxDom)  {  [CE]  ';'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  If(thisDom  <  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    If(thisDom  <  maxDom)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
153	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  thisYear  + "] ");  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  thisYear  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  thisYear  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
154	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  month  + "] ");  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  month  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  month  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
155	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Found  dayOfMonth  must  be  in  the  range  [ "  +  thisYear  + "] ");  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Found  dayOfMonth  must  be  in  the  range  [ "  +  thisYear  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Found  dayOfMonth  must  be  in  the  range  [ "  +  thisYear  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
156	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  getMillis()  + "] ");  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  getMillis()  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Function  of  dayOfMonth  must  be  in  the  range  [ "  +  getMillis()  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
157	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Found  dayOfMonth  must  be  in  the  range  [ "  +  month  + "] ");  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Found  dayOfMonth  must  be  in  the  range  [ "  +  month  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Found  dayOfMonth  must  be  in  the  range  [ "  +  month  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
158	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Minutes  must  be  in  the  range  [ "  +  month  + "] ");  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Minutes  must  be  in  the  range  [ "  +  month  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Minutes  must  be  in  the  range  [ "  +  month  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
159	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Minutes  must  be  in  the  range  [ "  +  thisYear  + "] ");  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Minutes  must  be  in  the  range  [ "  +  thisYear  + "] ");  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  throw  new  IllegalFieldValueException( "Minutes  must  be  in  the  range  [ "  +  thisYear  + "] ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
160	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
161	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear,  maxDom);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisYear,  maxDom);	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
162	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [timeout]  [CE]  illegal  start  of  expression  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [timeout]  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  thisYear);  [timeout]	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
163	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisDom);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(month,  thisDom);	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
164	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(yearToUse,  month);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(yearToUse,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(yearToUse,  month);	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
165	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  maxDom);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(month,  maxDom);	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
166	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
167	[BUG]  [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  maxDom  ||  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
168	[BUG]  [BUGGY]  if(thisDom  >=  maxDom  ||  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom  ||  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >=  maxDom  ||  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
169	[BUG]  [BUGGY]  if(thisDom  <  =  maxDom  ||  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  =  maxDom  ||  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  =  maxDom  ||  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
170	[BUG]  [BUGGY]  if(thisDom  <  minuendDom  ||  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  minuendDom  ||  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  minuendDom  ||  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
171	[BUG]  [BUGGY]  if(thisDom  ==  maxDom  ||  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  ==  maxDom  ||  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  ==  maxDom  ||  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
172	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  ||  thisDom  <  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	31	8	replace
173	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	31	8	replace
174	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
175	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  maxDom);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
176	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(month,  thisYear);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
177	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
178	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  yearToUse);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
179	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
180	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
181	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
182	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  thisYear);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
183	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  year);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
184	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
185	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  maxDom);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
186	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  +  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
187	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
188	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  maxDom);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  maxDom);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
189	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month  -  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
190	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)+  1;	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
191	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month)-  1;	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
192	[BUG]  [BUGGY]  if(thisDom  <  minuendDom)  {  [CE]  cannot  find  symbol  minuendDom  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  minuendDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  minuendDom)  {	  if(thisDom    <    =    maxDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendDom	5	None	replace
193	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  <  maxDom  ||  thisDom  >=  maxDom)  {	  if(thisDom    <    =    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	5	8	replace
194	[BUG]  [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >=  maxDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  maxDom  ||  thisDom  >=  maxDom)  {	  if(thisDom    <    =    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	5	8	replace
195	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  <  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(maxDom  <  thisDom)  {	  if(thisDom    <    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	2	8	replace
196	[BUG]  [BUGGY]  if(maxDom  <  thisDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  <  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(maxDom  <  thisDom)  {	  if(thisDom    <    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	2	8	replace
197	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
198	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisDom  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisDom  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisDom  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	26	None	add
199	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  Integer  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    Integer  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
200	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
201	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisYear  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisYear  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	26	None	add
202	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	26	8	add
203	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMONTth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMONTth  =  iChronology.getMonthOfYear(instant);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	26	8	add
204	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronologist.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronologist.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronologist.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
205	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMonthOfYear(instant;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMonthOfYear(instant;	  	non-compiled	[CE]  ')'  expected	26	None	add
206	[BUG]  [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  >=  maxDom)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  >=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >=    maxDom)    {    if(thisDom  >=  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
207	[BUG]  [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom!=  maxDom)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom!=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >=    maxDom)    {    if(thisDom!=  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
208	[BUG]  [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  >>  maxDom)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  >>  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >=    maxDom)    {    if(thisDom  >>  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
209	[BUG]  [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  ==  maxDom)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  ==  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >=    maxDom)    {    if(thisDom  ==  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
210	[BUG]  [BUGGY]  if(thisDom  >=  maxDom)  {  If(thisDom  >=  maxDom)  {  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom)  {  If(thisDom  >=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >=    maxDom)    {    If(thisDom  >=  maxDom)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
211	[BUG]  [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  [BUGGY]  maxDom)  {  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  [BUGGY]  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >=    maxDom)    {    if(thisDom  [BUGGY]  maxDom)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
212	[BUG]  [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  [Delete]  maxDom)  {  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >=  maxDom)  {  if(thisDom  [Delete]  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >=    maxDom)    {    if(thisDom  [Delete]  maxDom)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
213	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
214	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  year);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
215	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisDom  is  already  defined  in  method  set(long,int)	13	None	add
216	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  months);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  months);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  months);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
217	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(ThisYear,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(ThisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMonth  =  iChronology.getDaysInYearMonth(ThisYear,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
218	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  Integer  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  Integer  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    Integer  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
219	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  variable  thisYear  is  already  defined  in  method  set(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisYear  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  set(long,int)	13	None	add
220	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisXear,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDaysInYearMonth(thisXear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMonth  =  iChronology.getDaysInYearMonth(thisXear,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
221	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
222	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMax);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
223	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisLeapMonth);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
224	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisHeapMonth);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
225	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisMinute);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
226	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  maxDom);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  maxDom);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
227	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(thisYear,  month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
228	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  year);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
229	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfDay(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfDay(instant);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
230	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  day);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  day);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
231	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(month);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
232	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisYear);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
233	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
234	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisLeapMonth);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
235	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(month,  instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(month,  instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(month,  instant);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
236	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHeapMonth);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
237	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisHour);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
238	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
239	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  iMax);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
240	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
241	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
242	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
243	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
244	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	10	None	add
245	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  }  [CE]  cannot  find  symbol  year  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  }	  	non-compiled	[CE]  cannot  find  symbol  year	10	None	add
246	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getLeapMonthMonth(thisYear,  month);  }  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getLeapMonthMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getLeapMonthMonth(thisYear,  month);  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
247	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
248	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
249	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);  }  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getMinutesInYearMonth(thisYear,  month);  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
250	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);	  	non-compiled	[CE]  cannot  find  symbol  year	10	None	add
251	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  ==  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month	  	non-compiled	[CE]  ')'  expected	10	None	add
252	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  ThisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  ThisDom  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  ThisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    ThisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  cannot  find  symbol  ThisDom	10	None	add
253	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfDay(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfDay(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
254	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  day);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
255	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  year);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
256	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  1);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
257	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
258	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
259	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  minuendMonth);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
260	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
261	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  1);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  1);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
262	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
263	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendMonth);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
264	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuendToUse);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
265	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  float  thisMonth  =  iChronology.getMonthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    float  thisMonth  =  iChronology.getMonthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
266	[BUG]  [BUGGY]  if(thisDom  >  MAX_VALUE  &&  maxDom  <  =  thisDom)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  MAX_VALUE  &&  maxDom  <  =  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  MAX_VALUE  &&  maxDom  <  =  thisDom)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
267	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  maxDom)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
268	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  <  thisDom;  [CE]  >  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  <  thisDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  <  thisDom;	  	non-compiled	[CE]  >  expected	28	None	add
269	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  int  thisDom  =  thisDom;  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  int  thisDom  =  thisDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    int  thisDom  =  thisDom;	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
270	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  <  thisDom)  {  [CE]  >  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  <  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  <  thisDom)  {	  	non-compiled	[CE]  >  expected	28	None	add
271	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [timeout]  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [timeout]  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [timeout]	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
272	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  month);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMaximumMonthOfYear(instant,  month);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
273	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  minuendMonth)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  maxDom  ||  thisDom  >  minuendMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  maxDom  ||  thisDom  >  minuendMonth)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
274	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  minuendDom  ||  thisDom  >  maxDom)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  >  maxDom)  {  if(thisDom  >  minuendDom  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    if(thisDom  >  minuendDom  ||  thisDom  >  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
275	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  month);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  month);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
276	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
277	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(thisYear,  month);  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDayOfMonth(thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDayOfMonth(thisYear,  month);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
278	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  illegal  start  of  type  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getYearMonthOfYear(instant,  month);	      int    thisDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
279	[BUG]  [BUGGY]  if(thisDom  <  minuendMonth  ||  thisDom  >  maxDom)  {  [CE]  cannot  find  symbol  minuendMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  minuendMonth  ||  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  minuendMonth  ||  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	33	None	replace
280	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  int  thisDom  =  maxDom  +  1;  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  int  thisDom  =  maxDom  +  1;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    int  thisDom  =  maxDom  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
281	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  2)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1)  {  if(thisDom  >  maxDom  +  2)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    maxDom    +    1)    {    if(thisDom  >  maxDom  +  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
282	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
283	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
284	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  iMin);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
285	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(month,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(month,  thisYear);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
286	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
287	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  year);	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
288	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month)+  1;  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month)+  1;	      int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
289	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);	      int    thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
290	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getDaysInYearMonth(thisYear,  month)!=  0)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  +  1  &&  iChronology.getDaysInYearMonth(thisYear,  month)!=  0)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
291	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getDaysInYearMonth(thisYear,  month)!=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getDaysInYearMonth(thisYear,  month)!=  0)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  1  &&  iChronology.getDaysInYearMonth(thisYear,  month)!=  0)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
292	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getYearMonthDayMillis(thisYear,  month)!=  0)  {  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getYearMonthDayMillis(thisYear,  month)!=  0)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  1  &&  iChronology.getYearMonthDayMillis(thisYear,  month)!=  0)  {	  if(thisDom    >    maxDom    +    1)    {    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	7	None	replace
293	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.isDayOfMonth(thisYear,  month))  {  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.isDayOfMonth(thisYear,  month))  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  1  &&  iChronology.isDayOfMonth(thisYear,  month))  {	  if(thisDom    >    maxDom    +    1)    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
294	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getDayOfMonth(thisYear,  month)!=  0)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  +  1  &&  iChronology.getDayOfMonth(thisYear,  month)!=  0)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
295	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getDayOfMonth(thisYear,  month)!=  0)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getDayOfMonth(thisYear,  month)!=  0)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  1  &&  iChronology.getDayOfMonth(thisYear,  month)!=  0)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
296	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getYearMonthDayMillis(thisYear,  month)  ==  0)  {  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  iChronology.getYearMonthDayMillis(thisYear,  month)  ==  0)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  1  &&  iChronology.getYearMonthDayMillis(thisYear,  month)  ==  0)  {	  if(thisDom    >    maxDom    +    1)    {    	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	7	None	replace
297	[BUG]  [BUGGY]  if(thisDom  [Delete]  maxDom)  {  [CE]  ')'  expected  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  [Delete]  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  [Delete]  maxDom)  {	  if(thisDom    >=    maxDom)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
298	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
299	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
300	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
301	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month);  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    int  maxDom  =  iChronology.getYearMonthDayMillis(thisYear,  month);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
302	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom;  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
303	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
304	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [CE]  illegal  start  of  expression  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    int  maxDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
305	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  iMax)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  ||  thisDom  <  iMax)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
306	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  iMax)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  iMax)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  iMax)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
307	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  MIN)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  ||  thisDom  <  MIN)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
308	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  MIN)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  MIN)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  MIN)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
309	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  minuendMonth)  {  [CE]  cannot  find  symbol  minuendMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  minuendMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  minuendMonth)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	34	None	replace
310	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  minuendDom)  {  [CE]  cannot  find  symbol  minuendDom  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  minuendDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  minuendDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendDom	34	None	replace
311	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  iLeapMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  ||  thisDom  <  iLeapMonth)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
312	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  iLeapMonth)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  iLeapMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  iLeapMonth)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
313	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getYearMonthOfYear(instant,  month);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getYearMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getYearMonthOfYear(instant,  month);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
314	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(thisYear,  month);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
315	[BUG]  [BUGGY]  if(thisDom  <  minuendMonth)  {  [CE]  cannot  find  symbol  minuendMonth  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  minuendMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  minuendMonth)  {	  if(thisDom    <    maxDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	2	None	replace
316	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [CE]  ')'  expected  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMonthOfYear(instant,  month;	  	non-compiled	[CE]  ')'  expected	17	None	add
317	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    float  thisMonth  =  iChronology.getMonthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	17	None	add
318	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getYearMonth(thisYear,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMonth  =  iChronology.getYearMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
319	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMONTth  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	13	8	add
320	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMONTth  =  iChronology.getDaysInYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMONTth  =  iChronology.getDaysInYearMonth(thisYear,  month);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	13	8	add
321	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(thisYear,  month);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
322	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
323	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month  -  1);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
324	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  instant);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(month,  instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(month,  instant);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
325	[BUG]  [BUGGY]  if(maxDom  <  =  thisDom)  {  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(maxDom  <  =  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(maxDom  <  =  thisDom)  {	  if(thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
326	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getYearMonth(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getYearMonth(instant,  month);	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
327	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [CE]  illegal  start  of  type  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)-  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month)-  1;	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
328	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  -  1);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
329	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
330	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  maxDom);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  maxDom);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
331	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)+  1;  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)+  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)+  1;	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
332	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months);	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
333	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [CE]  illegal  start  of  type  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  day);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
334	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);  [CE]  illegal  start  of  type  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  thisYear,  hour);	      int    month    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
335	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
336	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
337	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [CE]  variable  maxDom  is  already  defined  in  method  set(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	non-compiled	[CE]  variable  maxDom  is  already  defined  in  method  set(long,int)	10	None	add
338	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
339	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
340	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChr  [CE]  ';'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChr  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChr	  	non-compiled	[CE]  ';'  expected	10	None	add
341	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  i  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  i  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  i	  	non-compiled	[CE]  ';'  expected	10	None	add
342	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month	  	non-compiled	[CE]  ')'  expected	10	None	add
343	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
344	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
345	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  }  [CE]  cannot  find  symbol  year  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(month  >  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  year);  }	  	non-compiled	[CE]  cannot  find  symbol  year	10	None	add
346	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  ||  thisDom  <  thisDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
347	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  thisDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
348	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  ||  thisDom  <  1)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
349	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  1)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	34	8	replace
350	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  size)  {  [CE]  cannot  find  symbol  size  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  size)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  size)  {	  if(thisDom    >    maxDom    ||    thisDom    <    minuendDom)    {    	non-compiled	[CE]  cannot  find  symbol  size	34	None	replace
351	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  thisDom);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
352	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(instant,  month,  MIN);	      int    maxDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
353	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getDaysInYearMonth(thisYear,  month);  int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getDaysInYearMonth(thisYear,    month);    int  thisMonth  =  iChronology.getDayOfMonth(thisYear,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	13	None	add
354	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDaysInYearMonth(instant,  month,  maxDom);	      int    thisMonth    =    iChronology.getDaysInYearMonth(instant,    month);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
355	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  {  }  thisDom  =  maxDom;  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  {  }  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  {  }  thisDom  =  maxDom;	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
356	[BUG]  [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  {  superDom  =  maxDom;  }  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom)  {  if(thisDom  >  thisDom)  {  superDom  =  maxDom;  }  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    >    thisDom)    {    if(thisDom  >  thisDom)  {  superDom  =  maxDom;  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
357	[BUG]  [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  month  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  month  =  iChronology.getMonthOfYear(instant,  hour);	      int    month    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
358	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  >=  maxDom)  {  [CE]  illegal  start  of  expression  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  >=  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  >=  maxDom)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
359	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  thisDom  =  maxDom;  }  [CE]  illegal  start  of  expression  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  thisDom  =  maxDom;  }  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  {  thisDom  =  maxDom;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
360	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  thisDom  =  maxDom;  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  {  thisDom  =  maxDom;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
361	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  }  thisDom  =  maxDom;  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  }  thisDom  =  maxDom;  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  {  }  thisDom  =  maxDom;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
362	[BUG]  [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  superDom  =  maxDom;  }  [CE]  illegal  start  of  expression  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom)  {  if(thisDom  <  maxDom)  {  superDom  =  maxDom;  }  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom    <    maxDom)    {    if(thisDom  <  maxDom)  {  superDom  =  maxDom;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
363	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMONTthOfYear(instant);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant);  int  thisMonth  =  iChronology.getMONTthOfYear(instant);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant);    int  thisMonth  =  iChronology.getMONTthOfYear(instant);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	26	None	add
364	[BUG]  [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >  MAX_MONTH)  {  [CE]  cannot  find  symbol  MAX_MONTH  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >  MAX_MONTH)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  maxDom  ||  thisDom  >  MAX_MONTH)  {	  if(thisDom    <    maxDom)    {    	non-compiled	[CE]  cannot  find  symbol  MAX_MONTH	2	None	replace
365	[BUG]  [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >  minuendMonth)  {  [CE]  cannot  find  symbol  minuendMonth  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  <  maxDom  ||  thisDom  >  minuendMonth)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  <  maxDom  ||  thisDom  >  minuendMonth)  {	  if(thisDom    <    maxDom)    {    	non-compiled	[CE]  cannot  find  symbol  minuendMonth	2	None	replace
366	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
367	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisDom);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month  +  1,  thisDom);	      int    maxDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
368	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  thisDom  >  maxDom)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  thisDom  >  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  thisDom  >  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	33	None	replace
369	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom  ||  maxDom  >  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  thisDom  ||  maxDom  >  thisDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
370	[BUG]  [BUGGY]  if(thisDom  >  thisDom  ||  maxDom  >  thisDom)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  thisDom  ||  maxDom  >  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  thisDom  ||  maxDom  >  thisDom)  {	  if(thisDom    >    maxDom    ||    thisDom    >    maxDom)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	33	8	replace
371	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  maxDom);  [CE]  ';'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month),  maxDom);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  ';'  expected	30	None	replace
372	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month  +  1,  thisYear);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
373	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuend);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuend);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(instant,  month,  minuend);	      thisDom    =    iChronology.getDaysInYearMonth(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
374	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  month,  iMax);	      int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
375	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
376	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
377	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
378	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
379	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChronology.getYearMonth(thisYear,  month);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  iChronology.getYearMonth(thisYear,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    thisDom  =  iChronology.getYearMonth(thisYear,  month);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
380	[BUG]  [BUGGY]  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  }	  	compilable	timeout	10	1	add
381	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  }  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear,  month);  }	  	compilable	timeout	10	1	add
382	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
383	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
384	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getYearMonthMonth(thisYear,  month);  }  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getYearMonthMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getYearMonthMonth(thisYear,  month);  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
385	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getMillisOfDay(instant,  thisYear,  thisDom);  }  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getMillisOfDay(instant,  thisYear,  thisDom);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getMillisOfDay(instant,  thisYear,  thisDom);  }	  	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	10	None	add
386	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  }  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  <  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  else  {  thisDom  =  iChronology.getDaysInYearMonth(instant,  thisYear,  month);  }	  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	10	None	add
387	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
388	[BUG]  [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    if(thisDom  >=  maxDom)  {  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	10	8	add
389	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  thisDom);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
390	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  maxDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  month,  maxDom);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    month);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
391	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom  +  iChronology.getMillisOfDay(instant);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom  +  iChronology.getMillisOfDay(instant);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);  thisDom  =  maxDom  +  iChronology.getMillisOfDay(instant);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
392	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonthMillis(thisYear,  month);  [CE]  illegal  start  of  type  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getDaysInYearMonthMillis(thisYear,  month);  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getDaysInYearMonthMillis(thisYear,  month);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
393	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  illegal  start  of  type  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getDayOfMonth(instant,  thisYear);	      int    thisMonth    =    iChronology.getDaysInYearMonth(month,    thisYear);    [timeout]    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
394	[BUG]  [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  month);  [CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]      int  thisMonth  =  iChronology.getMonthOfYear(instant,  month);  int  thisMonth  =  iChronology.getMONTthOfYear(instant,  month);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	        int    thisMonth    =    iChronology.getMonthOfYear(instant,    month);    int  thisMonth  =  iChronology.getMONTthOfYear(instant,  month);	  	non-compiled	[CE]  variable  thisMonth  is  already  defined  in  method  set(long,int)	17	None	add
395	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  thisDom);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
396	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  iMax);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
397	[BUG]  [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [CE]  illegal  start  of  type  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  day);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  maxDom  =  iChronology.getMonthOfYear(instant,  thisYear,  day);	      int    maxDom    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
398	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [CE]  illegal  start  of  type  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  thisDom);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
399	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN);  [CE]  illegal  start  of  type  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month,  MIN);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
400	[BUG]  [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months,  iMax);  [CE]  illegal  start  of  type  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months,  iMax);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  months,  iMax);	      int    thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
401	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1  ||  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  ||  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  1  ||  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
402	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  thisDom  <  =  maxDom)  {  [CE]  illegal  start  of  expression  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  thisDom  <  =  maxDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  thisDom  <  =  maxDom)  {	  if(thisDom    >    maxDom    ||    thisDom    <    =    maxDom)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
403	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  thisDom)  {  [CE]  illegal  start  of  expression  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  =  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  =  thisDom)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
404	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  &&  thisDom  <  1)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	35	8	replace
405	[BUG]  [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  &&  thisDom  <  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  &&  thisDom  <  1)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	35	8	replace
406	[BUG]  [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  =  MAX_VALUE)  {  [CE]  illegal  start  of  expression  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  ||  thisDom  <  =  MAX_VALUE)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  ||  thisDom  <  =  MAX_VALUE)  {	  if(thisDom    >    maxDom    &&    thisDom    <    =    MAX_VALUE)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
407	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  *  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  *  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
408	[BUG]  [BUGGY]  if(thisDom  >  maxDom  *  1)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  *  1)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  *  1)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
409	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  2)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	add	if(thisDom  >  maxDom  +  2)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
410	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  2)  {  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  2)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  2)  {	  if(thisDom    >    maxDom    +    1)    {    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	8	replace
411	[BUG]  [BUGGY]  if(thisDom  >  maxDom  +  1  &&  thisYear  <  =  thisDom)  {  [CE]  illegal  start  of  expression  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  if(thisDom  >  maxDom  +  1  &&  thisYear  <  =  thisDom)  {  [BUGGY]      thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	if(thisDom  >  maxDom  +  1  &&  thisYear  <  =  thisDom)  {	  if(thisDom    >    maxDom    +    1)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
412	[BUG]  [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	thisDom  =  iChronology.getDaysInYearMonth(thisYear,  month)-  1;	      thisDom    =    iChronology.getDaysInYearMonth(thisYear,    month);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
413	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);  [CE]  illegal  start  of  type  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  hour);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
414	[BUG]  [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [CE]  illegal  start  of  type  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    public  long  set(long  instant,  int  month)  {  FieldUtils.verifyValueBounds(this,  month,  MIN,  iMax);  int  thisYear  =  iChronology.getYear(instant);  int  thisDom  =  iChronology.getDayOfMonth(instant,  thisYear);  int  maxDom  =  iChronology.getDaysInYearMonth(thisYear,  month);    [BUGGY]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    if  (thisDom  >  maxDom)  {  thisDom  =  maxDom;  }  return  iChronology.getYearMonthDayMillis(thisYear,  month,  thisDom)  +  iChronology.getMillisOfDay(instant);  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  set  [RETURN_TYPE]  long  long  instant  int  month  [VARIABLES]  boolean  long  datePart  difference  instant  minuendInstant  minuendRem  monthToUse  months  serialVersionUID  subtrahendInstant  subtrahendRem  timePart  yearToUse  int  MIN  dayToUse  fieldIndex  i  iLeapMonth  iMax  i_monthToUse  i_months  i_yearToUse  isize  leapMonth  maxDay  maxDom  minuendDom  minuendMonth  minuendYear  month  monthToUse  months  remMonthToUse  subtrahendDom  subtrahendMonth  subtrahendYear  thisDom  thisMonth  thisYear  valueToAdd  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	299	299	8	replace	int  thisMonth  =  iChronology.getMonthOfYear(instant,  months);	      int    thisMonth    =    iChronology.getMonthOfYear(instant);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
