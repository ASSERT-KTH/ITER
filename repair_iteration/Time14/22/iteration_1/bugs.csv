bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iLeapMonth;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  iLeapMonth;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
2	[BUG]  [BUGGY]  dayToUse  =  iLeapMonth;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iLeapMonth;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iLeapMonth;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
3	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  maxDay  +  1;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  maxDay  +  1;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
4	[BUG]  [BUGGY]  dayToUse  =  maxDay  +  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  maxDay  +  1;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  maxDay  +  1;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
5	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  maxDay  -  1;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  maxDay  -  1;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
6	[BUG]  [BUGGY]  dayToUse  =  maxDay  -  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  maxDay  -  1;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  maxDay  -  1;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
7	[BUG]  [BUGGY]  dayToUse  =  iLeapMonthDayMillis;  [CE]  cannot  find  symbol  iLeapMonthDayMillis  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iLeapMonthDayMillis;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iLeapMonthDayMillis;	dayToUse  =  maxDay;  	non-compiled	[CE]  cannot  find  symbol  iLeapMonthDayMillis	43	None	replace
8	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  MIN;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  MIN;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
9	[BUG]  [BUGGY]  dayToUse  =  MIN;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  MIN;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  MIN;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
10	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  -=  maxDay;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  -=  maxDay;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
11	[BUG]  [BUGGY]  dayToUse  -=  maxDay;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  -=  maxDay;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  -=  maxDay;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
12	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iLeapMonth  +  maxDay;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  iLeapMonth  +  maxDay;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
13	[BUG]  [BUGGY]  dayToUse  =  iLeapMonth  +  maxDay;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iLeapMonth  +  maxDay;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iLeapMonth  +  maxDay;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
14	[BUG]  [BUGGY]  dayToUse  =  iDayOfMonth;  [CE]  cannot  find  symbol  iDayOfMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iDayOfMonth;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iDayOfMonth;	dayToUse  =  maxDay;  	non-compiled	[CE]  cannot  find  symbol  iDayOfMonth	43	None	replace
15	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  thisYear;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  thisYear;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
16	[BUG]  [BUGGY]  dayToUse  =  thisYear;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  thisYear;  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  thisYear;	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
17	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	  	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
18	[BUG]  [BUGGY]    [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	  	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
19	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
20	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
21	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisMonth);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisMonth);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisMonth);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
22	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
23	[BUG]  [BUGGY]    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  possible  loss  of  precision  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);		non-compiled	[CE]  possible  loss  of  precision	44	None	add
24	[BUG]  [BUGGY]    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  possible  loss  of  precision  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  possible  loss  of  precision	44	None	add
25	[BUG]  [BUGGY]    Month  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    Month  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    Month  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);		non-compiled	[CE]  cannot  find  symbol	44	None	add
26	[BUG]  [BUGGY]    thisYear  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  possible  loss  of  precision  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    thisYear  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    thisYear  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  possible  loss  of  precision	44	None	add
27	[BUG]  [BUGGY]    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisMonth);  [CE]  possible  loss  of  precision  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisMonth);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisMonth);		non-compiled	[CE]  possible  loss  of  precision	44	None	add
28	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisYear);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisYear);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  thisYear);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
29	[BUG]  [BUGGY]    monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  possible  loss  of  precision  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  possible  loss  of  precision	44	None	add
30	[BUG]  [BUGGY]    minuteToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  cannot  find  symbol  minuteToUse  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    minuteToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    minuteToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);		non-compiled	[CE]  cannot  find  symbol  minuteToUse	44	None	add
31	[BUG]  [BUGGY]    monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  possible  loss  of  precision  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);		non-compiled	[CE]  possible  loss  of  precision	44	None	add
32	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  monthToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	44	None	add
33	[BUG]  [BUGGY]    minuteToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  cannot  find  symbol  minuteToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    minuteToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    minuteToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  cannot  find  symbol  minuteToUse	44	None	add
34	[BUG]  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  possible  loss  of  precision  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  maxDay);	dayToUse  =  maxDay;  	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
35	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
36	[BUG]  [BUGGY]  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	12	replace
37	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	add	dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	8	replace
38	[BUG]  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);	dayToUse  =  maxDay;  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	43	8	replace
39	[BUG]  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(dayToUse,  monthToUse);  [CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(dayToUse,  monthToUse);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getYearMonthDayMillis(dayToUse,  monthToUse);	dayToUse  =  maxDay;  	non-compiled	[CE]  method  getYearMonthDayMillis  in  class  BasicChronology  cannot  be  applied  to  given  types;	43	None	replace
40	[BUG]  [BUGGY]  dayToUse  =  iChronology.getDayOfMonth(instant,  monthToUse,  maxDay);  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDayOfMonth(instant,  monthToUse,  maxDay);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getDayOfMonth(instant,  monthToUse,  maxDay);	dayToUse  =  maxDay;  	non-compiled	[timeout]	43	None	replace
41	[BUG]  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse);  [timeout]  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse);	dayToUse  =  maxDay;  	non-compiled	[timeout]	43	None	replace
42	[BUG]  [BUGGY]  dayToUse  =  iChronology.getDayOfMonth(instant,  months,  dayToUse);  [timeout]  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDayOfMonth(instant,  months,  dayToUse);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getDayOfMonth(instant,  months,  dayToUse);	dayToUse  =  maxDay;  	non-compiled	[timeout]	43	None	replace
43	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthMillis(yearToUse,  monthToUse,  maxDay);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthMonthMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
44	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(yearToUse,  monthToUse,  maxDay);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  monthToUse  =  iChronology.getMonthOfYear(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	44	None	add
45	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthMonthMillis(yearToUse,  monthToUse,  dayToUse);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
46	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  thisMonth);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	44	None	add
47	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthMonthDayMillis(yearToUse,  monthToUse,  dayToUse);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
48	[BUG]  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    int  yearToUse  =  iChronology.getYearMonthMonthDayMillis(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    int  yearToUse  =  iChronology.getYearMonthMonthDayMillis(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	44	None	add
49	[BUG]  [BUGGY]    monthToUse  =  iChronology.getMonthOfYear(yearToUse,  monthToUse,  maxDay);  [CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]    monthToUse  =  iChronology.getMonthOfYear(yearToUse,  monthToUse,  maxDay);  [BUGGY]  dayToUse  =  maxDay;  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	    monthToUse  =  iChronology.getMonthOfYear(yearToUse,  monthToUse,  maxDay);		non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(int,int,int)	44	None	add
50	[BUG]  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getDaysInYearMonth(instant,  thisYear,  thisMonth);	dayToUse  =  maxDay;  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	43	None	replace
51	[BUG]  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [CE]  possible  loss  of  precision  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);	dayToUse  =  maxDay;  	non-compiled	[CE]  possible  loss  of  precision	43	None	replace
52	[BUG]  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse,  maxDay);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse,  maxDay);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse,  maxDay);	dayToUse  =  maxDay;  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	43	None	replace
53	[BUG]  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse,  dayToUse);  [CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  }      int  dayToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  thisMonth);  int  maxDay  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse);  if  (dayToUse  >  maxDay)  {  [BUGGY]  dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse,  dayToUse);  [BUGGY]  }    long  datePart  =  iChronology.getYearMonthDayMillis(yearToUse,  monthToUse,  dayToUse);  return  datePart  +  timePart;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.2886751345948129	139	139	8	replace	dayToUse  =  iChronology.getDaysInYearMonth(yearToUse,  monthToUse,  dayToUse);	dayToUse  =  maxDay;  	non-compiled	[CE]  method  getDaysInYearMonth  in  class  BasicChronology  cannot  be  applied  to  given  types;	43	None	replace
