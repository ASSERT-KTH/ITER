bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
2	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
3	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getDayOfMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getDayOfMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	15	None	replace
4	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
5	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
6	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	15	None	replace
7	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
8	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
9	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
10	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
11	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
12	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
13	[BUG]  [BUGGY]    [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	  	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	15	None	replace
14	[BUG]  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
15	[BUG]  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());		non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	16	None	add
16	[BUG]  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
17	[BUG]  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
18	[BUG]  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    super(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth());		non-compiled	[CE]  cannot  find  symbol	16	None	add
19	[BUG]  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
20	[BUG]  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth());  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth());		non-compiled	[CE]  cannot  find  symbol	16	None	add
21	[BUG]  [BUGGY]    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
22	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
23	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	9	replace
24	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear());  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	15	None	replace
25	[BUG]  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth());  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth());  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth());		non-compiled	[CE]  cannot  find  symbol	16	None	add
26	[BUG]  [BUGGY]    iMax  =  iChronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    iMax  =  iChronology.getMinYear();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    iMax  =  iChronology.getMinYear();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
27	[BUG]  [BUGGY]    iMax  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    iMax  =  chronology.getMinYear();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    iMax  =  chronology.getMinYear();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
28	[BUG]  [BUGGY]    int  iLeapMonth  =  chronology.getLeapMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    int  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    int  iLeapMonth  =  chronology.getLeapMonth();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
29	[BUG]  [BUGGY]    int  MIN  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    int  MIN  =  chronology.getMinYear();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    int  MIN  =  chronology.getMinYear();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
30	[BUG]  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();		non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	add
31	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
32	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth());	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
