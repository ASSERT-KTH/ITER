bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
2	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
3	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	31	None	replace
4	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  jumpMonth,  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  jumpMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  jumpMonth,  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  jumpMonth,  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	31	None	replace
5	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
6	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
7	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
8	[BUG]  [BUGGY]  super(DateTimeFieldType.DAYOFMONTH(),  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.DAYOFMONTH(),  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.DAYOFMONTH(),  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
9	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
10	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getMonthOfYear());  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	24	None	replace
11	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear(),  leapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	24	None	replace
12	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMonthOfYear());  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	24	None	replace
13	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getMonthOfYear());  [CE]  cannot  find  symbol  dayOfMonth  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	24	None	replace
14	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getMonthOfYear());  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  0,  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	24	None	replace
15	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  1,  chronology.getMonthOfYear());  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  1,  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  1,  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	24	None	replace
16	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getMonthOfYear());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
17	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMillisOfYear());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMillisOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getMillisOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
18	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	23	None	replace
19	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getDayOfMonth());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	23	None	replace
20	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerDay(),  leapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerDay(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerDay(),  leapMonth);	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
21	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerChronology());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerChronology());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerChronology());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
22	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
23	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
24	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getDayOfMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getDayOfMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
25	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
26	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
27	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  dayOfMonth.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  dayOfMonth.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  dayOfMonth.getAverageMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
28	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
29	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    super(DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	add
30	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	22	None	add
31	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    (DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ')'  expected	22	None	add
32	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    (DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ')'  expected	22	None	add
33	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.year();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.year();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.year();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
34	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    this(DateTimeFieldType.day(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	22	None	add
35	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth();  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  ';'  expected	22	None	add
36	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
37	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
38	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ';'  expected	22	None	add
39	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	12	None	replace
40	[BUG]  [BUGGY]  Super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	12	None	replace
41	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	12	9	replace
42	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	12	9	replace
43	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
44	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
45	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  dayOfMonth  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  dayOfMonth,  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	32	None	replace
46	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
47	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  jumpMonth,  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  jumpMonth  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  jumpMonth,  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  jumpMonth,  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol  jumpMonth	32	None	replace
48	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
49	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
50	[BUG]  [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.yearOfYear(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
51	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
52	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfMonth(),  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
53	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
54	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
55	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
56	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	21	None	replace
57	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth);  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth);	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
58	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  null;  [CE]  <identifier>  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  null;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  null;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
59	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	21	None	replace
60	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  leapMonth  +  1;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
61	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  1;  [CE]  <identifier>  expected  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  1;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
62	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  0,  leapMonth;  [CE]  <identifier>  expected  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  0,  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  0,  leapMonth;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
63	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  intLeapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  intLeapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  intLeapMonth;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	21	None	replace
64	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
65	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
66	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
67	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth).withUTC();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
68	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
69	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true).withUTC();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
70	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
71	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null).withUTC();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
72	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  -  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear()  -  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear()  -  leapMonth;	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	27	None	replace
73	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear(),  leapMonth;  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear(),  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear(),  leapMonth;	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  ';'  expected	27	None	replace
74	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear()  +  leapMonth;	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	27	None	replace
75	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  -  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear()  -  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear()  -  1;	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	27	None	replace
76	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear(),  leapMonth);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear(),  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear(),  leapMonth);	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  ';'  expected	27	None	replace
77	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  /  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear()  /  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear()  /  2;	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	27	None	replace
78	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  +  leapMonth;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
79	[BUG]  [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  iChronology.getLeapMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  iChronology.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
80	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  *  leapMonth;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
81	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  -  leapMonth;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
82	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(dayOfMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(dayOfMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(dayOfMonth);	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
83	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  -  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  -  1;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
84	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  /  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  /  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  /  2;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
85	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switchMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(switchMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(switchMonth);	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
86	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getLeapMonth();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
87	[BUG]  [BUGGY]  BasicChronology  chronology  =(BasicChronology)this.dayOfMonth.clone();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =(BasicChronology)this.dayOfMonth.clone();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =(BasicChronology)this.dayOfMonth.clone();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
88	[BUG]  [BUGGY]  BasicChronology  chronology  =  iChronology.getBase();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  iChronology.getBase();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  iChronology.getBase();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
89	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iFieldType  =  chronology.getFieldType(iFieldType);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iFieldType  =  chronology.getFieldType(iFieldType);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iFieldType  =  chronology.getFieldType(iFieldType);	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
90	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iLeapMonth  =  chronology.getDayOfMonth();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
91	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	2	None	replace
92	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	2	9	replace
93	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	2	9	replace
94	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStartMillis());  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStartMillis());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getStartMillis());	  super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
95	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  MIN);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  MIN);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  MIN);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
96	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  MIN,  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  MIN,  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  MIN,  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
97	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  dayOfMonth,  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  dayOfMonth,  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	6	None	replace
98	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  30);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  30);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  30);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
99	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  1);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  1);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  1);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
100	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  dayOfMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  dayOfMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  dayOfMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	6	None	replace
101	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  MIN);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  MIN);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  MIN);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
102	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMax  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMax  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMax  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
103	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
104	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getDayOfMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getDayOfMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
105	[BUG]  [BUGGY]  iMax  =  DateTimeUtils.getChronology(chronology);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  DateTimeUtils.getChronology(chronology);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  DateTimeUtils.getChronology(chronology);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
106	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMonthOfYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMonthOfYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
107	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear()  +  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear()  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear()  +  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
108	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMax  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMax  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMax  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
109	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	1	None	add
110	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
111	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    (DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ')'  expected	1	None	add
112	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    this(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	1	None	add
113	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  Super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  Super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    Super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
114	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth();  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  ';'  expected	1	None	add
115	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iMax  =  chronology.getAverageMillisPerMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iMax  =  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iMax  =  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
116	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iLeapMonth  =  chronology.getAverageMillisPerMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iLeapMonth  =  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iLeapMonth  =  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
117	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
118	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
119	[BUG]  [BUGGY]  super(DateTimeFieldType.DAYOFMONTH(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.DAYOFMONTH(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.DAYOFMONTH(),  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
120	[BUG]  [BUGGY]  super(DateTimeFieldType.DAYOF_MONTH(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.DAYOF_MONTH(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.DAYOF_MONTH(),  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
121	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
122	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
123	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  leapMonth,  chronology.getDayOfMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	3	None	replace
124	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getDayOfMonth(),  leapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getDayOfMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getDayOfMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	3	None	replace
125	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfMonth(),  chronology.getDayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfMonth(),  chronology.getDayOfMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfMonth(),  chronology.getDayOfMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
126	[BUG]  [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getDayOfMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.yearOfYear(),  chronology.getDayOfMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
127	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getDayOfMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getDayOfMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getDayOfMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
128	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  0,  chronology.getDayOfMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	3	None	replace
129	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getDayOfMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getDayOfMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
130	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	11	None	add
131	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  ')'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    (DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ')'  expected	11	None	add
132	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
133	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  Super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  Super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    Super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
134	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    this(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	11	None	add
135	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  iMax  =  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
136	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth();  [CE]  ';'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  ';'  expected	11	None	add
137	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
138	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  iDateTimeFieldType  =  DateTimeFieldType.dayOfYear();  [CE]  cannot  find  symbol  iDateTimeFieldType  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  iDateTimeFieldType  =  DateTimeFieldType.dayOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    iDateTimeFieldType  =  DateTimeFieldType.dayOfYear();	  	non-compiled	[CE]  cannot  find  symbol  iDateTimeFieldType	11	None	add
139	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getSecondMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getSecondMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getSecondMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
140	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth()  +  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth()  +  leapMonth);	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
141	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinimumMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinimumMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getMinimumMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
142	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getWeekMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getWeekMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getWeekMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
143	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear()  -  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear()  -  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear()  -  leapMonth;	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
144	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear()  +  leapMonth;	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
145	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear(),  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear(),  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear(),  leapMonth;	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
146	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear()  -  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear()  -  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear()  -  1;	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
147	[BUG]  [BUGGY]  int  MIN  =  iChronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  iChronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  iChronology.getMinYear();	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
148	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear()  /  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear()  /  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear()  /  2;	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
149	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear(),  leapMonth);  [CE]  ';'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear(),  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear(),  leapMonth);	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  ';'  expected	29	None	replace
150	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYearMillis();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYearMillis();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYearMillis();	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
151	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth(),  leapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth(),  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth(),  leapMonth);	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	15	None	replace
152	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth()  +  leapMonth);  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth()  +  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth()  +  leapMonth);	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	15	None	replace
153	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfYear());  [CE]  no  suitable  method  found  for  getDayOfYear()  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfYear());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfYear());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfYear()	15	None	replace
154	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getDayOfMonth());  [CE]  no  suitable  method  found  for  getDayOfMonth()  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getDayOfMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),  chronology.getDayOfMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  no  suitable  method  found  for  getDayOfMonth()	15	None	replace
155	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth(),  leapMonth)  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth(),  leapMonth)  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth(),  leapMonth)	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  ';'  expected	15	None	replace
156	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth()  +  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth()  +  leapMonth);	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
157	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth(),  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth(),  leapMonth);	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
158	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getIsStandardMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getIsStandardMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getIsStandardMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
159	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getCurrentMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getCurrentMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getCurrentMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
160	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  leapMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
161	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
162	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  dayOfMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
163	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  jumpMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
164	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfMonth(),  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
165	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  hourMonth,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  hourMonth,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  hourMonth,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
166	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getDayOfMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getDayOfMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
167	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYearMillisPerMonth());  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYearMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYearMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getVersionMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
168	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  +  leapMonth;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	26	None	replace
169	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear(),  leapMonth;  [CE]  ';'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear(),  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear(),  leapMonth;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	26	None	replace
170	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  -  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  -  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  -  1;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	26	None	replace
171	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  -  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  -  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  -  leapMonth;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	26	None	replace
172	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  +  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  +  1;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	26	None	replace
173	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  /  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  /  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  /  2;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	26	None	replace
174	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear(),  leapMonth);  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear(),  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear(),  leapMonth);	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	26	None	replace
175	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	add
176	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [CE]  ')'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    (DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ')'  expected	7	None	add
177	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	7	None	add
178	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    this(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	7	None	add
179	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  Super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  Super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    Super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
180	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth();  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  ';'  expected	7	None	add
181	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iMax  =  chronology.getAverageMillisPerMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iMax  =  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iMax  =  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	7	None	add
182	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iLeapMonth  =  chronology.getAverageMillisPerMonth();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iLeapMonth  =  chronology.getAverageMillisPerMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iLeapMonth  =  chronology.getAverageMillisPerMonth();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	7	None	add
183	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay()?  chronology.getAverageMillisPerMonth()  :  null;  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay()?  chronology.getAverageMillisPerMonth()  :  null;  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.millisOfDay()?  chronology.getAverageMillisPerMonth()  :  null;	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	7	None	add
184	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	8	None	replace
185	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getMillisPerMonth());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
186	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
187	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerChronology());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerChronology());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerChronology());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
188	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMaxYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.millisOfDay(),  chronology.getMaxYear());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	9	replace
189	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMaxYear());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMaxYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getMaxYear());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	9	replace
190	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	9	replace
191	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	9	replace
192	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerWeek());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerWeek());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerWeek());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
193	[BUG]  [BUGGY]  iMin  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMin  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMin  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
194	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMin  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
195	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
196	[BUG]  [BUGGY]  iMin  =  DateTimeUtils.getChronology(chronology);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMin  =  DateTimeUtils.getChronology(chronology);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMin  =  DateTimeUtils.getChronology(chronology);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
197	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  -  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
198	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
199	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMonthOfYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
200	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear()  +  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
201	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
202	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  dayOfMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
203	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
204	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  jumpMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
205	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
206	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth  -  1);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
207	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  30);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
208	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  true);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
209	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  false);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
210	[BUG]  [BUGGY]  iMax  =  chronology.getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
211	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMax  =  chronology.getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMax  =  chronology.getMinMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  leapMonth);  iMax  =  chronology.getMinMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
212	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth()  +  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth()  +  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth()  +  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
213	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
214	[BUG]  [BUGGY]  iMax  =  DateTimeUtils.getChronology(chronology).getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  DateTimeUtils.getChronology(chronology).getMinMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  DateTimeUtils.getChronology(chronology).getMinMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
215	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [CE]  not  a  statement  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];	  	non-compiled	[CE]  not  a  statement	7	None	add
216	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CE]  not  a  statement  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1	  	non-compiled	[CE]  not  a  statement	7	None	add
217	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [CE]  not  a  statement  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]	  	non-compiled	[CE]  not  a  statement	7	None	add
218	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [CE]  not  a  statement  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth	  	non-compiled	[CE]  not  a  statement	7	None	add
219	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [CE]  not  a  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]	  	non-compiled	[CE]  not  a  statement	7	None	add
220	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [CE]  not  a  statement  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];	  	non-compiled	[CE]  not  a  statement	7	None	add
221	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
222	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getStartMillis());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getStartMillis());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getStartMillis());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
223	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getMillisPerMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
224	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
225	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getWeekOfYear());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getWeekOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getWeekOfYear());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
226	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [CE]  not  a  statement  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];	  	non-compiled	[CE]  not  a  statement	22	None	add
227	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CE]  not  a  statement  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1	  	non-compiled	[CE]  not  a  statement	22	None	add
228	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [CE]  not  a  statement  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]	  	non-compiled	[CE]  not  a  statement	22	None	add
229	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [CE]  not  a  statement  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];	  	non-compiled	[CE]  not  a  statement	22	None	add
230	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [CE]  ')'  expected  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    (DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ')'  expected	22	None	add
231	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  this(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    this(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	22	None	add
232	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [CE]  not  a  statement  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth	  	non-compiled	[CE]  not  a  statement	22	None	add
233	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [CE]  not  a  statement  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]	  	non-compiled	[CE]  not  a  statement	22	None	add
234	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  com.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CE]  not  a  statement  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  com.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    com.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1	  	non-compiled	[CE]  not  a  statement	22	None	add
235	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CE]  not  a  statement  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1	  	non-compiled	[CE]  not  a  statement	11	None	add
236	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [CE]  not  a  statement  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];	  	non-compiled	[CE]  not  a  statement	11	None	add
237	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [CE]  not  a  statement  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]	  	non-compiled	[CE]  not  a  statement	11	None	add
238	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [CE]  not  a  statement  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];	  	non-compiled	[CE]  not  a  statement	11	None	add
239	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [CE]  not  a  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth	  	non-compiled	[CE]  not  a  statement	11	None	add
240	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [CE]  not  a  statement  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]	  	non-compiled	[CE]  not  a  statement	11	None	add
241	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  com.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CE]  not  a  statement  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  com.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    com.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1	  	non-compiled	[CE]  not  a  statement	11	None	add
242	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC,  leapMonth;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC,  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC,  leapMonth;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
243	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  /  2;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
244	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(2);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(2);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(2);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
245	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CE]  not  a  statement  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1	  	non-compiled	[CE]  not  a  statement	1	None	add
246	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [CE]  not  a  statement  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1];	  	non-compiled	[CE]  not  a  statement	1	None	add
247	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [CE]  not  a  statement  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0]	  	non-compiled	[CE]  not  a  statement	1	None	add
248	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [CE]  not  a  statement  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [0];	  	non-compiled	[CE]  not  a  statement	1	None	add
249	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [CE]  not  a  statement  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1]	  	non-compiled	[CE]  not  a  statement	1	None	add
250	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [CE]  not  a  statement  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  +  leapMonth	  	non-compiled	[CE]  not  a  statement	1	None	add
251	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDeserializeMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getDeserializeMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getDeserializeMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
252	[BUG]  [BUGGY]  Context.checkNotNull(chronology);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Context.checkNotNull(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Context.checkNotNull(chronology);	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
253	[BUG]  [BUGGY]  super(chronology,  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(chronology,  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(chronology,  leapMonth);	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
254	[BUG]  [BUGGY]  Integer  iMax  =  iChronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Integer  iMax  =  iChronology.getMinYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Integer  iMax  =  iChronology.getMinYear();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
255	[BUG]  [BUGGY]  Context  ctx  =  Context.getCurrentContext();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Context  ctx  =  Context.getCurrentContext();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Context  ctx  =  Context.getCurrentContext();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
256	[BUG]  [BUGGY]  Context  ctx  =  Context.getCurrentNodeContext();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Context  ctx  =  Context.getCurrentNodeContext();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Context  ctx  =  Context.getCurrentNodeContext();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
257	[BUG]  [BUGGY]  Context.checkState(iChronology!=  null);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Context.checkState(iChronology!=  null);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Context.checkState(iChronology!=  null);	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
258	[BUG]  [BUGGY]  Context  ctx  =  Context.getCurrentNodeInstance();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Context  ctx  =  Context.getCurrentNodeInstance();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Context  ctx  =  Context.getCurrentNodeInstance();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
259	[BUG]  [BUGGY]  Context  ctx  =  Context.getCurrentSecond();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Context  ctx  =  Context.getCurrentSecond();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Context  ctx  =  Context.getCurrentSecond();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
260	[BUG]  [BUGGY]  BasicChronology  chronology  =  getBasicChronology();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  getBasicChronology();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  getBasicChronology();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
261	[BUG]  [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.yearOfYear(),  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
262	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
263	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  0,  chronology.getAverageMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  0,  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  0,  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
264	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
265	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
266	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getStartMillis());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getStartMillis());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getStartMillis());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
267	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth()  -  leapMonth);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth()  -  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth()  -  leapMonth);	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
268	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getDeserializeMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getDeserializeMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getDeserializeMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
269	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getYearMonth());  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getYearMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getYearMonth());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
270	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getStartMillis());  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getStartMillis());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getStartMillis());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
271	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerYear());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	23	9	replace
272	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerYear());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerYear());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	23	9	replace
273	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getDeserializeMillisPerMonth());  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getDeserializeMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getDeserializeMillisPerMonth());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
274	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerYear());	  super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	2	9	replace
275	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerYear());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerYear());	  super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	2	9	replace
276	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear()  +  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear()  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear()  +  1;	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
277	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYear()  -  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYear()  -  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYear()  -  2;	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
278	[BUG]  [BUGGY]  int  MIN  =  chronology.getMinYearMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  MIN  =  chronology.getMinYearMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  MIN  =  chronology.getMinYearMonth();	      int    MIN    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	29	None	replace
279	[BUG]  [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.yearOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
280	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  31);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  31);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  31);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
281	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  iLeapMonth);  [CE]  cannot  reference  iLeapMonth  before  supertype  constructor  has  been  called  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  iLeapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  iLeapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  cannot  reference  iLeapMonth  before  supertype  constructor  has  been  called	6	None	replace
282	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  2);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  2);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  2);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
283	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonthOfYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonthOfYear();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
284	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  +  1;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
285	[BUG]  [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  this.chronology.getLeapMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  this.chronology.getLeapMonth();	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
286	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
287	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getStartMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
288	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMonth());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getStartMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
289	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getEndMillisPerMonth());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getEndMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getEndMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
290	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getStartMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  0,  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
291	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
292	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
293	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMin  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMin  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN);  iMin  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
294	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMinYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.monthOfYear(),  chronology.getMinYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	3	9	replace
295	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMinYear());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMinYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getMinYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	3	9	replace
296	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getRangeMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getRangeMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getRangeMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
297	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	18	10	replace
298	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getMinYear());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	18	10	replace
299	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getWeeksPerYear());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getWeeksPerYear());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getWeeksPerYear());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
300	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
301	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth()  +  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth()  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth()  +  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
302	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iMax);  iMax  =  chronology.getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iMax);  iMax  =  chronology.getMinMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iMax);  iMax  =  chronology.getMinMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
303	[BUG]  [BUGGY]  NullFieldType  type  =  DateTimeUtils.getChronology(chronology);  iMax  =  type.getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  NullFieldType  type  =  DateTimeUtils.getChronology(chronology);  iMax  =  type.getMinMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	NullFieldType  type  =  DateTimeUtils.getChronology(chronology);  iMax  =  type.getMinMonth();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
304	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this.dayOfMonth);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
305	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  40);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
306	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
307	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getStartMillis());  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getStartMillis());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),  chronology.getStartMillis());	  super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
308	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getYearMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getYearMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getYearMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
309	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getMinuteMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
310	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getHourOfDay());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getHourOfDay());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getHourOfDay());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
311	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	21	None	replace
312	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth();  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth();	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
313	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.monthOfYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.monthOfYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.monthOfYear();	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	21	None	replace
314	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth();  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getMillisPerMonth();	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
315	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  +  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear()  +  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear()  +  1;	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	27	None	replace
316	[BUG]  [BUGGY]  iMax  =  chronology.getMinYear()  -  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  chronology.getMinYear()  -  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  chronology.getMinYear()  -  2;	      iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	27	None	replace
317	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMonth(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
318	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
319	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  0,  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  0,  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
320	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
321	[BUG]  [BUGGY]  Super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Super(DateTimeFieldType.monthOfYear(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	32	None	replace
322	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
323	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getMillisPerMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
324	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getBaseMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getBaseMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getBaseMillisPerMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
325	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getStartMillis());  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getStartMillis());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getStartMillis());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
326	[BUG]  [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Node  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
327	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iMax);  iMax  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iMax);  iMax  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  iMax);  iMax  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
328	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getWeekOfYear());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getWeekOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getWeekOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
329	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartOfYear());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getStartOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getStartOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
330	[BUG]  [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getMonthOfYear());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.yearOfYear(),  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.yearOfYear(),  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
331	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getMonthOfYear());  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	24	None	replace
332	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getSecondOfYear());  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getSecondOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getSecondOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
333	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear()  +  leapMonth);  [CE]  no  suitable  method  found  for  getMonthOfYear()  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getMonthOfYear()  +  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear()	24	None	replace
334	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getWeeksPerMonth());  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getWeeksPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getWeeksPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getVersionMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
335	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth()  +  leapMonth);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth()  +  leapMonth);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth()  +  leapMonth);	      super(DateTimeFieldType.dayOfMonth(),    chronology.getVersionMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
336	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  +  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  +  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  +  2;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	26	None	replace
337	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  -  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  -  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  -  2;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	26	None	replace
338	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.year();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.year();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.year();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
339	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
340	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
341	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
342	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	22	None	add
343	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth();  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth();	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
344	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getDayOfMonth());	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
345	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getHeaderMillisPerMonth();  [CE]  ';'  expected  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getHeaderMillisPerMonth();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getHeaderMillisPerMonth();	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
346	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [CE]  ';'  expected  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  ';'  expected	21	None	replace
347	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.DAY_OF_MONTH;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.DAY_OF_MONTH;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth()  /  DateTimeFieldType.DAY_OF_MONTH;	      BasicChronology    chronology    =    DateTimeFieldType.dayOfMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	21	None	replace
348	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getDeserializationMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfYear(),  chronology.getDeserializationMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfYear(),  chronology.getDeserializationMillisPerMonth());	  super(DateTimeFieldType.millisOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
349	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfYear();  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  BasicChronology  chronology  =  DateTimeFieldType.millisOfYear();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    BasicChronology  chronology  =  DateTimeFieldType.millisOfYear();	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	7	None	add
350	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  ')'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  (DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    (DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());	  	non-compiled	[CE]  ')'  expected	7	None	add
351	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.millisOfDay();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	7	None	add
352	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.millisOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.millisOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.millisOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	7	None	add
353	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  iMin  =  chronology.getMinYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  iMin  =  chronology.getMinYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  null);  iMin  =  chronology.getMinYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
354	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMaxYear();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMin    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	17	None	replace
355	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC()  -  1;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
356	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  null;  [CE]  <identifier>  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  null;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology).withUTC(),  null;	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
357	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this).withUTC();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this).withUTC();  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  this).withUTC();	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology).withUTC();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	16	None	replace
358	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(second);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth(second);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth(second);	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
359	[BUG]  [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  2;  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  int  iLeapMonth  =  chronology.getLeapMonth()  *  2;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	int  iLeapMonth  =  chronology.getLeapMonth()  *  2;	      int    iLeapMonth    =    chronology.getLeapMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	28	None	replace
360	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  3);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  3);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  3);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
361	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  29);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  29);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth(),  leapMonth,  29);	  super(DateTimeFieldType.monthOfYear(),    chronology.getAverageMillisPerMonth(),    leapMonth);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	6	None	replace
362	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getMinYear());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getMinYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getMinYear());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
363	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getSecondMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getSecondMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getSecondMillisPerMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
364	[BUG]  [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getDayOfMonth());  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.minuteOfYear(),  chronology.getDayOfMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.minuteOfYear(),  chronology.getDayOfMonth());	  super(DateTimeFieldType.minuteOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
365	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.dayOfMonth();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
366	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
367	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
368	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
369	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	1	None	add
370	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBase());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBase());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getBase());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	24	None	replace
371	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getHeaderMonthOfYear());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getHeaderMonthOfYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getHeaderMonthOfYear());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
372	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMillisOfDay());  [CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getMillisOfDay());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getMillisOfDay());	  super(DateTimeFieldType.monthOfYear(),    chronology.getMonthOfYear());    	non-compiled	[CE]  method  getMillisOfDay  in  class  BasicChronology  cannot  be  applied  to  given  types;	24	None	replace
373	[BUG]  [BUGGY]  iMax  =  iChronology.getMinYear()  +  1,  leapMonth;  [CE]  ';'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iMax  =  iChronology.getMinYear()  +  1,  leapMonth;  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iMax  =  iChronology.getMinYear()  +  1,  leapMonth;	      iMax    =    iChronology.getMinYear();    	non-compiled	[CE]  ';'  expected	26	None	replace
374	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBase(),  leapMonth);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.getBase(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.getBase(),  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getDayOfMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	3	None	replace
375	[BUG]  [BUGGY]  super();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
376	[BUG]  [BUGGY]  super(chronology);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(chronology);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(chronology);	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
377	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
378	[BUG]  [BUGGY]  iChronology  =  chronology.getBase();  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  iChronology  =  chronology.getBase();  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	iChronology  =  chronology.getBase();	      	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	13	None	replace
379	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getMinYear());  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getMinYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getMinYear());	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
380	[BUG]  [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth()  -  leapMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth()  -  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.hourOfYear(),  chronology.getAverageMillisPerMonth()  -  leapMonth);	  super(DateTimeFieldType.hourOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
381	[BUG]  [BUGGY]  Super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Super(DateTimeFieldType.monthOfYear(),  chronology.getStartMillisPerMonth());	  super(DateTimeFieldType.monthOfYear(),    chronology.getStartMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	31	None	replace
382	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getHoursPerMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getHoursPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getHoursPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getDayOfMonth());    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
383	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
384	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  super(DateTimeFieldType.dayOfMonth(),  chronology.getAverageMillisPerMonth()	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  ')'  expected	19	None	replace
385	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
386	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxYear();  }  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxYear();  }  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxYear();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	19	None	replace
387	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [CE]  illegal  start  of  expression  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinYear();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinYear();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
388	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeFieldType.dayOfYear();  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
389	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getAverageMillisPerMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
390	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
391	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMin  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
392	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfYear(),  chronology.getAverageMillisPerMonth());  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfYear(),    chronology.getAverageMillisPerMonth());    if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  iLeapMonth  =  leapMonth;  }	  	non-compiled	[CE]  variable  chronology  is  already  defined  in  constructor  BasicMonthOfYearDateTimeField(BasicChronology,int)	11	None	add
393	[BUG]  [BUGGY]  Super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Super(DateTimeFieldType.dayOfMonth(),  chronology.getVersionMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getVersionMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	25	None	replace
394	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getVisibleMillisPerMonth());  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getVisibleMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getVisibleMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getVersionMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
395	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getMillisPerMonth());  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
396	[BUG]  [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getStandardMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.weekOfYear(),  chronology.getStandardMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.weekOfYear(),  chronology.getStandardMillisPerMonth());	  super(DateTimeFieldType.weekOfYear(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
397	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
398	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  }  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  }  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
399	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  Preconditions.checkNotNull(chronology);  iMax  =  chronology.getMaxMonth();  }  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  Preconditions.checkNotNull(chronology);  iMax  =  chronology.getMaxMonth();  }  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  Preconditions.checkNotNull(chronology);  iMax  =  chronology.getMaxMonth();  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
400	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [CE]  ')'  expected  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  return  new  BasicChronology(DateTimeFieldType.dayOfMonth	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  ')'  expected	30	None	replace
401	[BUG]  [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	if(chronology!=  null)  {  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology);  iMax  =  chronology.getMinMonth();  }  else  {  iMax  =  chronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    iMax    =    chronology.getMinMonth();    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	30	None	replace
402	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	23	9	replace
403	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth()  +  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getAverageMillisPerMonth()  +  leapMonth);	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	23	9	replace
404	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getChronology());  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getChronology());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getChronology());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
405	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMonth(),  leapMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getAverageMonth(),  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getAverageMonth(),  leapMonth);	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
406	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getMinYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.year(),  chronology.getMinYear());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	23	10	replace
407	[BUG]  [BUGGY]  super(DateTimeFieldType.year(),  chronology.getMinYear());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.year(),  chronology.getMinYear());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.year(),  chronology.getMinYear());	  super(DateTimeFieldType.year(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	23	10	replace
408	[BUG]  [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.dayOfMonth,  leapMonth);  [CE]  cannot  find  symbol  dayOfMonth  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.monthOfYear(),  chronology.dayOfMonth,  leapMonth);  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.monthOfYear(),  chronology.dayOfMonth,  leapMonth);	  super(DateTimeFieldType.monthOfYear(),    chronology.getBaseMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol  dayOfMonth	32	None	replace
409	[BUG]  [BUGGY]  Super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	20	None	replace
410	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getParentMillisPerMonth());  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getParentMillisPerMonth());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getParentMillisPerMonth());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
411	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth()));  [CE]  ';'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth()));  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getStandardMillisPerMonth()));	      super(DateTimeFieldType.dayOfMonth(),    chronology.getStandardMillisPerMonth());    	non-compiled	[CE]  ';'  expected	20	None	replace
412	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getBase());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getBase());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getBase());	  super(DateTimeFieldType.dayOfMonth(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	2	None	replace
413	[BUG]  [BUGGY]  Super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  Super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	Super(DateTimeFieldType.millisOfYear(),  chronology.getAverageMillisPerMonth());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	8	None	replace
414	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getBase());  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getBase());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getBase());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	8	None	replace
415	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMaxMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	add	super(DateTimeFieldType.millisOfDay(),  chronology.getMaxMonth());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	10	replace
416	[BUG]  [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMaxMonth());  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.millisOfDay(),  chronology.getMaxMonth());  [BUGGY]    iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.millisOfDay(),  chronology.getMaxMonth());	  super(DateTimeFieldType.millisOfDay(),    chronology.getAverageMillisPerMonth());    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	10	replace
417	[BUG]  [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH);  [CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH);  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	BasicChronology  chronology  =  DateTimeUtils.getChronology(chronology,  MIN_MONTH);	      BasicChronology    chronology    =    DateTimeUtils.getChronology(chronology);    	non-compiled	[CE]  constructor  ImpreciseDateTimeField  in  class  ImpreciseDateTimeField  cannot  be  applied  to  given  types;	14	None	replace
418	[BUG]  [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getParent());  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    BasicMonthOfYearDateTimeField(BasicChronology  chronology,  int  leapMonth)  {    [BUGGY]  super(DateTimeFieldType.dayOfMonth(),  chronology.getParent());  [BUGGY]    super(DateTimeFieldType.monthOfYear(),  chronology.getAverageMillisPerMonth());  iChronology  =  chronology;  iMax  =  iChronology.getMaxMonth();  iLeapMonth  =  leapMonth;  }  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  <init>  [RETURN_TYPE]  BasicChronology,int)  BasicChronology  chronology  int  leapMonth  [VARIABLES]  boolean  long  serialVersionUID  int  MIN  iLeapMonth  iMax  leapMonth  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.3592106040535498	51	51	8	replace	super(DateTimeFieldType.dayOfMonth(),  chronology.getParent());	      super(DateTimeFieldType.dayOfMonth(),    chronology.getMillisPerMonth());    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
