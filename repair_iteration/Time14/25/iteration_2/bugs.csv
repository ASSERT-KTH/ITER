bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  monthToUse  =(monthToUse  %  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =(monthToUse  %  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =(monthToUse  %  iMax)+  1;	      	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	10	None	replace
2	[BUG]  [BUGGY]  MonthToUse  monthToUse  =(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =(monthToUse  %  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =(monthToUse  %  iMax)+  1;	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	      	non-compiled	[CE]  cannot  find  symbol	10	None	replace
4	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse)+  1;	      	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	10	None	replace
5	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
6	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse,  monthToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
7	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  thisMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
8	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months,  monthToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
9	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
10	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse,  yearToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
11	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisHeapMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisHeapMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisHeapMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
12	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
13	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
14	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
15	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
16	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
17	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
18	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear	  	non-compiled	[CE]  ')'  expected	29	None	add
19	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
20	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
21	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  weekToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  weekToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  weekToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    weekToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  cannot  find  symbol  weekToUse	29	None	add
22	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  MonthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  MonthToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  MonthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    MonthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  cannot  find  symbol  MonthToUse	29	None	add
23	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisY  [CE]  ')'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisY  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisY	  	non-compiled	[CE]  ')'  expected	29	None	add
24	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  [CE]  ')'  expected  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,	  	non-compiled	[CE]  ')'  expected	29	None	add
25	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
26	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear.getMonthOfYear(instant,  iChronology);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear.getMonthOfYear(instant,  iChronology);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear.getMonthOfYear(instant,  iChronology);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
27	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  months);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
28	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
29	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
30	[BUG]  [BUGGY]  MonthToUse  yearToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  yearToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  yearToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
31	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  thisYear);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  thisYear);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
32	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
33	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
34	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
35	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisDay);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisDay);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisDay);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
36	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  monthToUse,  thisMonth);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
37	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  yearToUse,  monthToUse);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
38	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  yearToUse);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
39	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  monthToUse,  yearToUse);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
40	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisMonth,  monthToUse);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
41	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  months);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
42	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  1);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  1);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  monthToUse,  1);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
43	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  monthToUse,  iMax);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
44	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  months);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  monthToUse,  months);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
45	[BUG]  [BUGGY]  int  monthToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
46	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  *  iMax)-  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  *  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  *  iMax)-  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
47	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMin)-  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMin)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMin)-  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
48	[BUG]  [BUGGY]  int  monthToUse  =  iMax  +(monthToUse  /  thisYear)-  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iMax  +(monthToUse  /  thisYear)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iMax  +(monthToUse  /  thisYear)-  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
49	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  %  iMax)-  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  %  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  %  iMax)-  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
50	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
51	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  thisYear);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
52	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  months);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
53	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisYear);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
54	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
55	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  thisYear);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
56	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(monthToUse,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(monthToUse,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(monthToUse,  thisYear);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
57	[BUG]  [BUGGY]  monthToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	17	None	replace
58	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)-  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  %  iMax)-  1;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	17	None	replace
59	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  2;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  %  iMax)+  2;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	17	None	replace
60	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMin)+  1;  [CE]  cannot  find  symbol  iMin  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  %  iMin)+  1;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	17	None	replace
61	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)/  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)/  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  %  iMax)/  1;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	17	None	replace
62	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	17	None	replace
63	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (monthToUse  *  iMax);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	8	add
64	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (monthToUse  *  iMax);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	8	add
65	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  monthToUse  =  thisYear  +  (monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    monthToUse  =  thisYear  +  (monthToUse  *  iMax);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	14	add
66	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  monthToUse  =  thisYear  +  (monthToUse  *  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  monthToUse  =  thisYear  +  (monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    monthToUse  =  thisYear  +  (monthToUse  *  iMax);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	14	add
67	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMax)  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (monthToUse  *  iMax)  +  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	8	add
68	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMax)  +  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMax)  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (monthToUse  *  iMax)  +  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	8	add
69	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  imax);  [CE]  cannot  find  symbol  imax  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  imax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (monthToUse  *  imax);	  timeout    	non-compiled	[CE]  cannot  find  symbol  imax	8	None	add
70	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (monthToUse  *  iMin);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (monthToUse  *  iMin);	  timeout    	non-compiled	[CE]  cannot  find  symbol  iMin	8	None	add
71	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (yearToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (yearToUse  *  iMax);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	8	add
72	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (yearToUse  *  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  yearToUse  =  thisYear  +  (yearToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    yearToUse  =  thisYear  +  (yearToUse  *  iMax);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	8	8	add
73	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;	  yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	5	6	replace
74	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;	  yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	5	6	replace
75	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;	  yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	5	8	replace
76	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;	  yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	5	8	replace
77	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMin);  [CE]  cannot  find  symbol  iMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMin);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisMonth  +  (monthToUse  /  iMin);	  yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    	non-compiled	[CE]  cannot  find  symbol  iMin	5	None	replace
78	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (yearToUse  /  iMax);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (yearToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +  (yearToUse  /  iMax);	  yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	5	None	replace
79	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (monthToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
80	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (monthToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
81	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisYear  +  (monthToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
82	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisYear  +  (monthToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
83	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  monthToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    monthToUse  =  thisMonth  +  (monthToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	11	add
84	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  monthToUse  =  thisMonth  +  (monthToUse  /  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  monthToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    monthToUse  =  thisMonth  +  (monthToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	11	add
85	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  int  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  int  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    int  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);	  	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	4	None	add
86	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMin);  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMin);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (monthToUse  /  iMin);	  	non-compiled	[CE]  cannot  find  symbol  iMin	4	None	add
87	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMax)  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (monthToUse  /  iMax)  +  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
88	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMax)  +  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  iMax)  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (monthToUse  /  iMax)  +  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
89	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  YearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [CE]  cannot  find  symbol  YearToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  YearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    YearToUse  =  thisMonth  +  (monthToUse  /  iMax);	  	non-compiled	[CE]  cannot  find  symbol  YearToUse	4	None	add
90	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  imax);  [CE]  cannot  find  symbol  imax  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (monthToUse  /  imax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (monthToUse  /  imax);	  	non-compiled	[CE]  cannot  find  symbol  imax	4	None	add
91	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  weekToUse  =  thisMonth  +  (monthToUse  /  iMax);  [CE]  cannot  find  symbol  weekToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  weekToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    weekToUse  =  thisMonth  +  (monthToUse  /  iMax);	  	non-compiled	[CE]  cannot  find  symbol  weekToUse	4	None	add
92	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisMonth);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisMonth);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	37	None	replace
93	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  monthToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  monthToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	37	None	replace
94	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	37	None	replace
95	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse,  months);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	37	None	replace
96	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  yearToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  yearToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	37	None	replace
97	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	37	None	replace
98	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
99	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
100	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	11	add
101	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	11	add
102	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(yearToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(yearToUse  /  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
103	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(yearToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(yearToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(yearToUse  /  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
104	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  imax)+  1;  [CE]  cannot  find  symbol  imax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  imax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  imax)+  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  imax	1	None	add
105	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMin)+  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  iMin	1	None	add
106	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  YearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  YearToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  YearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    YearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  timeout    	non-compiled	[CE]  cannot  find  symbol  YearToUse	1	None	add
107	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
108	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
109	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
110	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	1	8	add
111	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse  -  1);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse  -  1);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse  -  1);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
112	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse  +  1);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse  +  1);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse  +  1);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
113	[BUG]  [BUGGY]  monthToUse  =  Math.max(monthToUse,  iMax);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.max(monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.max(monthToUse,  iMax);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
114	[BUG]  [BUGGY]  monthToUse  =  Math.min(monthToUse,  iMax);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.min(monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.min(monthToUse,  iMax);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
115	[BUG]  [BUGGY]  monthToUse  =  Math.min(monthToUse,  thisMonth);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.min(monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.min(monthToUse,  thisMonth);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
116	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse  /  iMax);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse  /  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse  /  iMax);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
117	[BUG]  [BUGGY]  monthToUse  =  Math.max(monthToUse,  thisMonth);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.max(monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.max(monthToUse,  thisMonth);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
118	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse)-  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse)-  1;	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
119	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
120	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
121	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
122	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  months);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
123	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
124	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
125	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
126	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisHeapMonth);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisHeapMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisHeapMonth);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
127	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
128	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
129	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
130	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
131	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iMax  +(monthToUse  /  thisYear)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iMax  +(monthToUse  /  thisYear)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iMax  +(monthToUse  /  thisYear)+  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
132	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisDay  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisDay  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisDay  +(monthToUse  /  iMax)+  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
133	[BUG]  [BUGGY]  Month  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
134	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
135	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
136	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
137	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
138	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
139	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
140	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax),  iMax  +  1;  [CE]  ';'  expected  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax),  iMax  +  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  /  iMax),  iMax  +  1;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  ';'  expected	18	None	replace
141	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  mLeapMonth);  [CE]  cannot  find  symbol  mLeapMonth  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  mLeapMonth);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  mLeapMonth);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  mLeapMonth	31	None	replace
142	[BUG]  [BUGGY]  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iLeapMonth);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  iLeapMonth);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	compilable	timeout	31	1	replace
143	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iLeapMonth);  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iLeapMonth);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  iLeapMonth);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	compilable	timeout	31	1	replace
144	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  datePart);  [CE]  cannot  find  symbol  datePart  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  datePart);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  datePart);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  datePart	31	None	replace
145	[BUG]  [BUGGY]  timeout  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  1);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  1);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	compilable	timeout	31	1	replace
146	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  1);  timeout  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  1);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  1);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	compilable	timeout	31	1	replace
147	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MONTH);  [CE]  cannot  find  symbol  MONTH  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MONTH);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  MONTH);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  MONTH	31	None	replace
148	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  thisMonth);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  thisMonth);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
149	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  iMax);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  iMax);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
150	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  iMin);  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  iMin);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  iMin);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol  iMin	25	None	replace
151	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(thisMonth);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(thisMonth);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
152	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(thisMonth,  monthToUse);  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(thisMonth,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(thisMonth,  monthToUse);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
153	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(monthToUse);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(monthToUse);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	25	None	replace
154	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  yearToUse);  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  yearToUse);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
155	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(yearToUse);  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(yearToUse);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
156	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  months);  [CE]  cannot  find  symbol  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  months);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
157	[BUG]  [BUGGY]  timeout  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
158	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  timeout  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
159	[BUG]  [BUGGY]  timeout  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  MIN)+  1;	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
160	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  timeout  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  MIN)+  1;	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
161	[BUG]  [BUGGY]  timeout  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  *  MIN);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
162	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  MIN);  timeout  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  *  MIN);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
163	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisMonth  +(monthToUse  /  MIN);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	6	replace
164	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  MIN);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisMonth  +(monthToUse  /  MIN);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	7	6	replace
165	[BUG]  [BUGGY]  timeout  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(thisMonth  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(thisMonth  /  MIN);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
166	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(thisMonth  /  MIN);  timeout  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(thisMonth  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(thisMonth  /  MIN);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	compilable	timeout	7	1	replace
167	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN,  iMax);  [CE]  ')'  expected  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN,  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  MIN,  iMax);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	non-compiled	[CE]  ')'  expected	7	None	replace
168	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
169	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [CE]  cannot  find  symbol  iMin  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	12	None	replace
170	[BUG]  [BUGGY]  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
171	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
172	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(yearToUse  /  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(yearToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(yearToUse  /  iMax)+  1;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
173	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	8	add
174	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	8	add
175	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	14	add
176	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	14	add
177	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  YearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  YearToUse  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  YearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    YearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  YearToUse	14	None	add
178	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  int  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  int  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    int  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	14	None	add
179	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  imax)+  1;  [CE]  cannot  find  symbol  imax  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  imax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  imax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  imax	14	None	add
180	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  weekToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  weekToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  weekToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    weekToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  weekToUse	14	None	add
181	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	8	add
182	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	8	add
183	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMin)+  1;  [CE]  cannot  find  symbol  iMin  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  iMin)+  1;	  	non-compiled	[CE]  cannot  find  symbol  iMin	14	None	add
184	[BUG]  [BUGGY]  timeout  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
185	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  timeout  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
186	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [CE]  cannot  find  symbol  iMin  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  iMin)+  1;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	non-compiled	[CE]  cannot  find  symbol  iMin	2	None	replace
187	[BUG]  [BUGGY]  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  iMax)+  2;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
188	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  iMax)+  2;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
189	[BUG]  [BUGGY]  timeout  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(thisMonth  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(thisMonth  /  iMax)+  1;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
190	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(thisMonth  /  iMax)+  1;  timeout  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(thisMonth  /  iMax)+  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(thisMonth  /  iMax)+  1;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
191	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisMonth  +  (monthToUse  *  iMax);	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	9	8	replace
192	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  *  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisMonth  +  (monthToUse  *  iMax);	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	9	8	replace
193	[BUG]  [BUGGY]  timeout  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMax)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  *  iMax)-  1;	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	timeout	9	1	replace
194	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMax)-  1;  timeout  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMax)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  *  iMax)-  1;	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	timeout	9	1	replace
195	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	11	14	add
196	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	11	14	add
197	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	11	11	add
198	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	11	11	add
199	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  weekToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  weekToUse  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  weekToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    weekToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  weekToUse	11	None	add
200	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  MonthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  MonthToUse  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  MonthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    MonthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  MonthToUse	11	None	add
201	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	11	None	add
202	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  imax)+  1;  [CE]  cannot  find  symbol  imax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  imax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  imax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  imax	11	None	add
203	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [CE]  cannot  find  symbol  iMin  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;	  	non-compiled	[CE]  cannot  find  symbol  iMin	11	None	add
204	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(yearToUse  /  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(yearToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(yearToUse  /  iMax)+  1;	  	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	11	None	add
205	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  minuteToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  minuteToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  minuteToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    minuteToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteToUse	11	None	add
206	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
207	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
208	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
209	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
210	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  weekToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  weekToUse  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  weekToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    weekToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  weekToUse	16	None	add
211	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  MonthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  MonthToUse  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  MonthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    MonthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  MonthToUse	16	None	add
212	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  int  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  int  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    int  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	16	None	add
213	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  imax)+  1;  [CE]  cannot  find  symbol  imax  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  %  imax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  %  imax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  imax	16	None	add
214	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(yearToUse  %  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(yearToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(yearToUse  %  iMax)+  1;	  	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	16	None	add
215	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  minuteToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  minuteToUse  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  minuteToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    minuteToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  minuteToUse	16	None	add
216	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthsToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  cannot  find  symbol  monthsToUse  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthsToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthsToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	  	non-compiled	[CE]  cannot  find  symbol  monthsToUse	16	None	add
217	[BUG]  [BUGGY]  int  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisMonth  +(monthToUse  /  iMax)+  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
218	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
219	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMin)+  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
220	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  2;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
221	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
222	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
223	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
224	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
225	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  monthToUse  =  thisYear  +(monthToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    MIN);    monthToUse  =  thisYear  +(monthToUse  /  MIN);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	14	add
226	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  monthToUse  =  thisYear  +(monthToUse  /  MIN);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  monthToUse  =  thisYear  +(monthToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    monthToUse  =  thisYear  +(monthToUse  /  MIN);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	14	add
227	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN)  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN)  +  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
228	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN)  +  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN)  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN)  +  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
229	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(yearToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(yearToUse  /  MIN);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
230	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(yearToUse  /  MIN);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(yearToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(yearToUse  /  MIN);	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
231	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN));  [CE]  ';'  expected  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN));  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN));	  timeout    	non-compiled	[CE]  ';'  expected	6	None	add
232	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  YearToUse  =  thisYear  +(monthToUse  /  MIN);  [CE]  cannot  find  symbol  YearToUse  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  YearToUse  =  thisYear  +(monthToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    YearToUse  =  thisYear  +(monthToUse  /  MIN);	  timeout    	non-compiled	[CE]  cannot  find  symbol  YearToUse	6	None	add
233	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
234	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN)-  1;	  timeout    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	6	8	add
235	[BUG]  [BUGGY]  timeout  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  %  iMax)-  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	timeout	15	1	replace
236	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)-  1;  timeout  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  %  iMax)-  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	timeout	15	1	replace
237	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	8	replace
238	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisMonth  +(monthToUse  %  iMax)+  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	15	8	replace
239	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMin)+  1;  [CE]  cannot  find  symbol  iMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMin)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  %  iMin)+  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol  iMin	15	None	replace
240	[BUG]  [BUGGY]  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  %  iMax)+  2;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	timeout	15	1	replace
241	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  2;  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)+  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  %  iMax)+  2;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	timeout	15	1	replace
242	[BUG]  [BUGGY]  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)/  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  %  iMax)/  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	timeout	15	1	replace
243	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)/  1;  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax)/  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  %  iMax)/  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	compilable	timeout	15	1	replace
244	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(yearToUse  %  iMax)+  1;	      yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	15	None	replace
245	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
246	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  months);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
247	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(monthToUse,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(monthToUse,  thisMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
248	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(dayOfMonth,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(dayOfMonth,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(dayOfMonth,  thisMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
249	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
250	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth,  thisYear);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
251	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  monthToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  monthToUse);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
252	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  months);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
253	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  months);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
254	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  yearToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear,  yearToUse);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
255	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  yearToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  yearToUse);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
256	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getDayOfMonth(instant,  yearToUse,  thisYear);	      int    monthToUse    =    iChronology.getDayOfMonth(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	21	None	replace
257	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
258	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
259	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  yearToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    Math.abs(monthToUse);    yearToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
260	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  yearToUse  =  Math.abs(monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  yearToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    yearToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
261	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  weekToUse  =  Math.abs(monthToUse);  [CE]  cannot  find  symbol  weekToUse  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  weekToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    weekToUse  =  Math.abs(monthToUse);	  	non-compiled	[CE]  cannot  find  symbol  weekToUse	27	None	add
262	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(yearToUse);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(yearToUse);	  	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	27	None	add
263	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  minuteToUse  =  Math.abs(monthToUse);  [CE]  cannot  find  symbol  minuteToUse  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  minuteToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    minuteToUse  =  Math.abs(monthToUse);	  	non-compiled	[CE]  cannot  find  symbol  minuteToUse	27	None	add
264	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  MonthToUse  =  Math.abs(monthToUse);  [CE]  cannot  find  symbol  MonthToUse  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  MonthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    MonthToUse  =  Math.abs(monthToUse);	  	non-compiled	[CE]  cannot  find  symbol  MonthToUse	27	None	add
265	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  hourToUse  =  Math.abs(monthToUse);  [CE]  cannot  find  symbol  hourToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  hourToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    hourToUse  =  Math.abs(monthToUse);	  	non-compiled	[CE]  cannot  find  symbol  hourToUse	27	None	add
266	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse));  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse));  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(monthToUse));	  	non-compiled	[CE]  ';'  expected	27	None	add
267	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  thisYear  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    Math.abs(monthToUse);    thisYear  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	10	add
268	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  thisYear  =  Math.abs(monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  thisYear  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    thisYear  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	10	add
269	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisMonth  +(monthToUse  /  iMax)-  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
270	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  *  iMax)-  1;  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  *  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  *  iMax)-  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
271	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMin)-  1;  [CE]  cannot  find  symbol  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMin)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMin)-  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
272	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iMax  +(monthToUse  /  thisYear)-  1;  [CE]  cannot  find  symbol  [FE]                        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iMax  +(monthToUse  /  thisYear)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iMax  +(monthToUse  /  thisYear)-  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
273	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisDay  +(monthToUse  /  iMax)-  1;  [CE]  cannot  find  symbol  [FE]                          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisDay  +(monthToUse  /  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisDay  +(monthToUse  /  iMax)-  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
274	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [CE]  cannot  find  symbol  [FE]                            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  MIN)-  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
275	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(instant,  thisMonth);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
276	[BUG]  [BUGGY]  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
277	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
278	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(thisMonth,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
279	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(instant,  months);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
280	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(monthToUse,  thisYear);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(monthToUse,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(monthToUse,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
281	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
282	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfDay(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfDay(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfDay(instant,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
283	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	8	replace
284	[BUG]  [BUGGY]  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	30	8	replace
285	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  yearToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	33	None	replace
286	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  1);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  1);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  1);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	33	None	replace
287	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  months);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  months);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	33	None	replace
288	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	33	None	replace
289	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMin)-  1;  [CE]  cannot  find  symbol  iMin  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMin)-  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +  (monthToUse  /  iMin)-  1;	  yearToUse    =    thisYear    +    (monthToUse    /    iMax)-    1;    [timeout]    	non-compiled	[CE]  cannot  find  symbol  iMin	3	None	replace
290	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  monthToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay,  monthToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
291	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  thisMonth);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
292	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1);  [CE]  ';'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1);	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
293	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  yearToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	37	None	replace
294	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  uMin);  [CE]  cannot  find  symbol  uMin  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  uMin);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  uMin);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  uMin	31	None	replace
295	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  t);  [CE]  cannot  find  symbol  t  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  t);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  t);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  t	31	None	replace
296	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  n);  [CE]  cannot  find  symbol  n  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  n);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  n);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  n	31	None	replace
297	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
298	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  dayOfMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  dayOfMonth);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
299	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  null,  monthToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  null,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  null,  monthToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
300	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse),  iMax);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse),  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse),  iMax);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
301	[BUG]  [BUGGY]  yearToUse  =  thisXear  +(monthToUse  /  iMax);  [CE]  cannot  find  symbol  thisXear  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisXear  +(monthToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisXear  +(monthToUse  /  iMax);	  yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    	non-compiled	[CE]  cannot  find  symbol  thisXear	5	None	replace
302	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;	      Month    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
303	[BUG]  [BUGGY]  timeout  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
304	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;  timeout  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;	  yearToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    timeout    	compilable	timeout	2	1	replace
305	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (yearToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (yearToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
306	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (yearToUse  /  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  yearToUse  =  thisMonth  +  (yearToUse  /  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisMonth    +    (monthToUse    /    iMax);    yearToUse  =  thisMonth  +  (yearToUse  /  iMax);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	4	8	add
307	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN,  monthToUse);  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN,  monthToUse);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN,  monthToUse);	  timeout    	non-compiled	[CE]  ')'  expected	6	None	add
308	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  monthToUse,  iMin);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  monthToUse,  iMin);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
309	[BUG]  [BUGGY]  timeout  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  %  iMax);	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	timeout	9	1	replace
310	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax);  timeout  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  %  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  %  iMax);	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	timeout	9	1	replace
311	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse  *  iMax);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse  *  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse  *  iMax);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
312	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  yearToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	35	None	replace
313	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  yearToUse,  thisMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
314	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
315	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  months);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
316	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
317	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1  +  months;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1  +  months;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1  +  months;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	17	None	replace
318	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
319	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  months;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  months;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  months;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
320	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
321	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
322	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  iMax);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  iMax);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
323	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  iMin,  monthToUse);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  iMin,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  iMin,  monthToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
324	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
325	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
326	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  'else'  without  'if'  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  'else'  without  'if'	29	None	add
327	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear  [CE]  ')'  expected  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear	  	non-compiled	[CE]  ')'  expected	29	None	add
328	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	33	None	replace
329	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(yearToUse  /  MIN);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(yearToUse  /  MIN);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(yearToUse  /  MIN);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	7	None	replace
330	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	11	10	add
331	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  *  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	11	10	add
332	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1  +  months;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1  +  months;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1  +  months;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
333	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1  +  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1  +  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1  +  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
334	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
335	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMax);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
336	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse,  iMin);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
337	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(yearToUse,  monthToUse);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(yearToUse,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(yearToUse,  monthToUse);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
338	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  MIN);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  MIN);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse,  MIN);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
339	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  1;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
340	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  months;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  months;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1  +  months;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
341	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  /  iMax)+  3;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
342	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1+1;  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1+1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1+1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
343	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  dayOfMonth,  monthToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
344	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  1,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  1,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  1,  monthToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
345	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  YearToUse  =  thisYear  +  (monthToUse  *  iMax);  [CE]  cannot  find  symbol  YearToUse  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  YearToUse  =  thisYear  +  (monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +    (monthToUse    *    iMax);    YearToUse  =  thisYear  +  (monthToUse  *  iMax);	  timeout    	non-compiled	[CE]  cannot  find  symbol  YearToUse	8	None	add
346	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  monthToUse);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	30	None	replace
347	[BUG]  [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);  [CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  yearToUse);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  no  suitable  method  found  for  getMonthOfYear(long,int,int)	30	None	replace
348	[BUG]  [BUGGY]  monthToUse  =  iChronology.getYear(instant,  thisYear);  [CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getYear(instant,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  method  getYear  in  class  BasicChronology  cannot  be  applied  to  given  types;	30	None	replace
349	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  int  monthToUse  =  Math.abs(monthToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  int  monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    int  monthToUse  =  Math.abs(monthToUse);	  	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	27	None	add
350	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse;  [CE]  ')'  expected  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(monthToUse;	  	non-compiled	[CE]  ')'  expected	27	None	add
351	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;	      monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	12	None	replace
352	[BUG]  [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  DateTimeUtils.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  DateTimeUtils.getMonthOfYear(instant,  monthToUse);	      monthToUse    =    DateTimeUtils.getMonthOfYear(monthToUse);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
353	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
354	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  0)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
355	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
356	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  else  {  monthToUse  =  Math.abs(monthToUse);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
357	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);	  	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	29	None	add
358	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
359	[BUG]  [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    if(monthToUse  ==  1)  {  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  }	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	29	11	add
360	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
361	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
362	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  months  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    months  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
363	[BUG]  [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  months  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  months  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    months  =  thisYear  +(monthToUse  %  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	16	14	add
364	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse  -  1,  iMax);  [CE]  no  suitable  method  found  for  abs(int,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse  -  1,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse  -  1,  iMax);	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  no  suitable  method  found  for  abs(int,int)	28	None	replace
365	[BUG]  [BUGGY]  monthToUse  =  Math.abs(monthToUse)/  2;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  Math.abs(monthToUse)/  2;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  Math.abs(monthToUse)/  2;	      monthToUse    =    Math.abs(monthToUse);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	28	None	replace
366	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisMonth);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
367	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  new  MonthOfYear(monthToUse));  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  new  MonthOfYear(monthToUse));  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  new  MonthOfYear(monthToUse));	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
368	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getYear(instant,  thisYear,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getYear(instant,  thisYear,  monthToUse);	      int    thisYear    =    iChronology.getYear(instant,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	32	None	replace
369	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
370	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  thisYear);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
371	[BUG]  [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  MIN)+  1;  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  thisYear  +(monthToUse  %  MIN)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  thisYear  +(monthToUse  %  MIN)+  1;	      monthToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	17	None	replace
372	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  yearToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  yearToUse);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
373	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  months);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  months);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
374	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisDay,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisDay,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisDay,  thisMonth);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	35	None	replace
375	[BUG]  [BUGGY]  monthToUse  =  iChronology.getYearOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getYearOfYear(instant,  thisYear);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getYearOfYear(instant,  thisYear);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
376	[BUG]  [BUGGY]  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	monthToUse  =  iChronology.getDayOfMonth(instant,  thisMonth);	      monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	30	None	replace
377	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  monthToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
378	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
379	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  chronology.getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  chronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  chronology.getMonthOfYear(instant,  monthToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
380	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear.getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear.getMonthOfYear(instant,  monthToUse);	      MonthToUse    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
381	[BUG]  [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax),  iMax  -  1;  [CE]  ';'  expected  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax),  iMax  -  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax),  iMax  -  1;	      MonthToUse    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  ';'  expected	19	None	replace
382	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  BasicMonthOfYear(monthToUse));  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  BasicMonthOfYear(monthToUse));  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  BasicMonthOfYear(monthToUse));	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
383	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisDay);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
384	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  BasicMonthOfYear(instant,  monthToUse));  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  BasicMonthOfYear(instant,  monthToUse));  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  new  BasicMonthOfYear(instant,  monthToUse));	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	24	None	replace
385	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN,  iMax);  [CE]  ')'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  yearToUse  =  thisYear  +(monthToUse  /  MIN,  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse    =    thisYear    +(monthToUse    /    MIN);    yearToUse  =  thisYear  +(monthToUse  /  MIN,  iMax);	  timeout    	non-compiled	[CE]  ')'  expected	6	None	add
386	[BUG]  [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  months);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear,  months);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    thisYear);    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	20	None	replace
387	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  FIELD_MONTH);  [CE]  cannot  find  symbol  FIELD_MONTH  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  FIELD_MONTH);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  FIELD_MONTH);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  FIELD_MONTH	31	None	replace
388	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  imax);  [CE]  cannot  find  symbol  imax  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  imax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  imax);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  imax	31	None	replace
389	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMin);  [CE]  cannot  find  symbol  iMin  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  *  iMin);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  *  iMin);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  iMin	31	None	replace
390	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  IME_MONTH);  [CE]  cannot  find  symbol  IME_MONTH  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  IME_MONTH);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  IME_MONTH);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  IME_MONTH	31	None	replace
391	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  IMAGE_MONTH);  [CE]  cannot  find  symbol  IMAGE_MONTH  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  IMAGE_MONTH);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  IMAGE_MONTH);	  yearToUse    =    thisYear    +(monthToUse    /    iMin);    	non-compiled	[CE]  cannot  find  symbol  IMAGE_MONTH	31	None	replace
392	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  MIN)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  MIN)-  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)-    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	34	None	replace
393	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	8	add
394	[BUG]  [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        yearToUse    =    thisYear    +(monthToUse    %    iMax)+    1;    yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	14	8	add
395	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    Math.abs(monthToUse);    months  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
396	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  Math.abs(monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    months  =  iChronology.getMonthOfYear(instant,  thisYear);  monthToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
397	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  yearToUse);  monthToUse  =  Math.abs(monthToUse);  [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  yearToUse);  monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    months  =  iChronology.getMonthOfYear(instant,  yearToUse);  monthToUse  =  Math.abs(monthToUse);	  	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	27	None	add
398	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    Math.abs(monthToUse);    months  =  iChronology.getMonthOfYear(instant,  monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
399	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    months  =  iChronology.getMonthOfYear(instant,  monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
400	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  monthToUse);monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    Math.abs(monthToUse);    months  =  iChronology.getMonthOfYear(instant,  monthToUse);monthToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
401	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  monthToUse);monthToUse  =  Math.abs(monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  months  =  iChronology.getMonthOfYear(instant,  monthToUse);monthToUse  =  Math.abs(monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    months  =  iChronology.getMonthOfYear(instant,  monthToUse);monthToUse  =  Math.abs(monthToUse);	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	8	add
402	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)-  1;  [timeout]  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)-  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)-  1;	  	non-compiled	[timeout]	27	None	add
403	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	12	add
404	[BUG]  [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]      monthToUse  =  Math.abs(monthToUse);  monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	        monthToUse    =    Math.abs(monthToUse);    monthToUse  =  Math.abs(monthToUse);  thisYear  =  thisYear  +  (monthToUse  /  iMax)+  1;	  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	27	12	add
405	[BUG]  [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  yearToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  yearToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);	      int    monthToUse    =    iChronology.getMonthOfYear(instant,    yearToUse);    	non-compiled	[CE]  variable  yearToUse  is  already  defined  in  method  add(long,int)	37	None	replace
406	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN),  iMax);  [CE]  ';'  expected  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN),  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  MIN),  iMax);	  yearToUse    =    thisYear    +(monthToUse    /    MIN);    timeout    	non-compiled	[CE]  ';'  expected	7	None	replace
407	[BUG]  [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse,  iMax);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse,  iMax);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse,  iMax);	      int    thisYear    =    iChronology.getMonthOfYear(instant,    thisMonth,    monthToUse);    	non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	38	None	replace
408	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.dayOfMonth().getMonthOfYear(instant,  monthToUse);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
409	[BUG]  [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));  [CE]  cannot  find  symbol  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  iChronology.getMonthOfYear(instant,  new  MonthOfYear(monthToUse));	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
410	[BUG]  [BUGGY]  Month  monthToUse  =  thisYear.getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]                    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  Month  monthToUse  =  thisYear.getMonthOfYear(instant,  monthToUse);  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	Month  monthToUse  =  thisYear.getMonthOfYear(instant,  monthToUse);	      Month    monthToUse    =    iChronology.getMonthOfYear(instant,    monthToUse);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
411	[BUG]  [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  int  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;  [BUGGY]    yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	int  monthToUse  =  thisYear  +(monthToUse  /  MIN)+  1;	      int    monthToUse    =    thisYear    +(monthToUse    /    iMax)+    1;    	non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	36	None	replace
412	[BUG]  [BUGGY]  timeout  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  1  +(monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +  1  +(monthToUse  *  iMax);	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	timeout	9	1	replace
413	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  1  +(monthToUse  *  iMax);  timeout  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1    [CONTEXT]    int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {    [BUGGY]  yearToUse  =  thisYear  +  1  +(monthToUse  *  iMax);  [BUGGY]    monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +  1  +(monthToUse  *  iMax);	  yearToUse    =    thisYear    +    (monthToUse    *    iMax);    timeout    	compilable	timeout	9	1	replace
