bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	timeout	49	1	replace
2	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  timeout  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  iMax)+  1;	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	timeout	49	1	replace
3	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax)-  1;  [timeout]  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax)-  1;  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +  (monthToUse  /  iMax)-  1;	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	non-compiled	[timeout]	49	None	replace
4	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisMonth  +  (monthToUse  /  iMax);	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	49	8	replace
5	[BUG]  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisMonth  +  (monthToUse  /  iMax);  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisMonth  +  (monthToUse  /  iMax);	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	49	8	replace
6	[BUG]  [BUGGY]  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +(monthToUse  /  MIN);	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	timeout	49	1	replace
7	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  timeout  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  MIN);  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  MIN);	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	timeout	49	1	replace
8	[BUG]  [BUGGY]  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	yearToUse  =  thisYear  +  (monthToUse  *  iMax);	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	timeout	49	1	replace
9	[BUG]  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  timeout  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  *  iMax);  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +  (monthToUse  *  iMax);	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	compilable	timeout	49	1	replace
10	[BUG]  [BUGGY]    [CE]  variable  yearToUse  might  not  have  been  initialized  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	  	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	non-compiled	[CE]  variable  yearToUse  might  not  have  been  initialized	49	None	replace
11	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	11	add
12	[BUG]  [BUGGY]    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	11	add
13	[BUG]  [BUGGY]    MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;		non-compiled	[CE]  cannot  find  symbol	50	None	add
14	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	8	add
15	[BUG]  [BUGGY]    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    yearToUse  =  thisYear  +(monthToUse  %  iMax)+  1;		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	8	add
16	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	14	add
17	[BUG]  [BUGGY]    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    monthToUse  =  thisYear  +(monthToUse  %  iMax)+  1;		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	14	add
18	[BUG]  [BUGGY]    Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    Month  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;		non-compiled	[CE]  cannot  find  symbol	50	None	add
19	[BUG]  [BUGGY]    MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [CE]  cannot  find  symbol  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    MonthToUse  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;		non-compiled	[CE]  cannot  find  symbol	50	None	add
20	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	50	None	add
21	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]                  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  monthToUse  =  iChronology.getDayOfMonth(instant,  thisYear);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	50	None	add
22	[BUG]  [BUGGY]    MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);		non-compiled	[CE]  cannot  find  symbol	50	None	add
23	[BUG]  [BUGGY]    MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [CE]  cannot  find  symbol  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    MonthToUse  monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);		non-compiled	[CE]  cannot  find  symbol	50	None	add
24	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	50	None	add
25	[BUG]  [BUGGY]    monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse);  [CE]  cannot  find  symbol  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    monthToUse  =  DateTimeUtils.getMonthOfYear(monthToUse);		non-compiled	[CE]  cannot  find  symbol	50	None	add
26	[BUG]  [BUGGY]    Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [CE]  cannot  find  symbol  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    Month  monthToUse  =  iChronology.getMonthOfYear(instant,  monthToUse);		non-compiled	[CE]  cannot  find  symbol	50	None	add
27	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  Math.abs(monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	    monthToUse  =  Math.abs(monthToUse);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	8	add
28	[BUG]  [BUGGY]    monthToUse  =  Math.abs(monthToUse);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  Math.abs(monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    monthToUse  =  Math.abs(monthToUse);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	8	add
29	[BUG]  [BUGGY]  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	add	    monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	11	add
30	[BUG]  [BUGGY]    monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    monthToUse  =  iChronology.getMonthOfYear(instant,  thisYear);		compilable	  [FE]  org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  	50	11	add
31	[BUG]  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMin);  [CE]  cannot  find  symbol  iMin  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]  yearToUse  =  thisYear  +(monthToUse  /  iMin);  [BUGGY]  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	yearToUse  =  thisYear  +(monthToUse  /  iMin);	yearToUse  =  thisYear  +  (monthToUse  /  iMax);  	non-compiled	[CE]  cannot  find  symbol  iMin	49	None	replace
32	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getYear(instant,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]    org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  thisYear  =  iChronology.getYear(instant,  monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  thisYear  =  iChronology.getYear(instant,  monthToUse);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	50	None	add
33	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]      org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  thisYear  =  iChronology.getMonthOfYear(instant,  monthToUse);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	50	None	add
34	[BUG]  [BUGGY]    int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]        org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  monthToUse  =  thisYear  +(monthToUse  /  iMax)-  1;		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	50	None	add
35	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]          org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	50	None	add
36	[BUG]  [BUGGY]    int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]            org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  monthToUse  =  thisYear  +(monthToUse  /  iMax)+  1;		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	50	None	add
37	[BUG]  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)  [FE]              org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  monthToUse  =  iChronology.getMonthOfYear(instant,  yearToUse);		non-compiled	[CE]  variable  monthToUse  is  already  defined  in  method  add(long,int)	50	None	add
38	[BUG]  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse);  [CE]  variable  thisYear  is  already  defined  in  method  add(long,int)  [FE]                org.joda.time.IllegalFieldValueException:  Value  29  for  dayOfMonth  must  be  in  the  range  [1  [CONTEXT]  int  thisMonth  =  iChronology.getMonthOfYear(instant,  thisYear);      int  yearToUse;  int  monthToUse  =  thisMonth  -  1  +  months;  if  (monthToUse  >=  0)  {  [BUGGY]    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse);  [BUGGY]  yearToUse  =  thisYear  +  (monthToUse  /  iMax);  monthToUse  =  (monthToUse  %  iMax)  +  1;  }  else  {  yearToUse  =  thisYear  +  (monthToUse  /  iMax)  -  1;  monthToUse  =  Math.abs(monthToUse);  int  remMonthToUse  =  monthToUse  %  iMax;  if  (remMonthToUse  ==  0)  {  remMonthToUse  =  iMax;  }  monthToUse  =  iMax  -  remMonthToUse  +  1;  [CLASS]  BasicMonthOfYearDateTimeField  [METHOD]  add  [RETURN_TYPE]  long  long  instant  int  months  [VARIABLES]  boolean  long  datePart  instant  serialVersionUID  timePart  int  MIN  dayToUse  iLeapMonth  iMax  leapMonth  maxDay  monthToUse  months  remMonthToUse  thisMonth  thisYear  yearToUse  BasicChronology  chronology  iChronology  	projects/Time14/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java	0.22360679774997896	114	114	8	replace	    int  thisYear  =  iChronology.getMonthOfYear(instant,  thisMonth,  monthToUse);		non-compiled	[CE]  variable  thisYear  is  already  defined  in  method  add(long,int)	50	None	add
