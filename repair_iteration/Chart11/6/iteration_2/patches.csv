bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int[]  d1  =  new  int[1];  int[]  d1  =  new  int[1];  [CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  int[]  d1  =  new  int[1];  int[]  d1  =  new  int[1];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	int[]  d1  =  new  int[1];  int[]  d1  =  new  int[1];	  double[]    d1    =    new    double[1];    double[]    d1    =    new    double[1];    	non-compiled	[CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	2	None	replace
2	[BUG]  [BUGGY]  Iterator  <  Path>  iterator1  =  p1.getPathIterator(null);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  Iterator  <  Path>  iterator1  =  p1.getPathIterator(null);  [BUGGY]      double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	Iterator  <  Path>  iterator1  =  p1.getPathIterator(null);	  Iterator    <    Path>    iterator1    =    p2.getPathIterator(null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	16	None	replace
3	[BUG]  [BUGGY]  int[]  d1  =  new  int[6];  [CE]  no  suitable  method  found  for  currentSegment(int[])  [FE]            AssertionFailedError      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  int[]  d1  =  new  int[6];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	int[]  d1  =  new  int[6];	  double[]    d1    =    new    double[2];    int[]    d1    =    new    double[2];    	non-compiled	[CE]  no  suitable  method  found  for  currentSegment(int[])	12	None	replace
4	[BUG]  [BUGGY]  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[2];  [CE]  variable  d2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]        AssertionFailedError      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[2];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	double[]  d1  =  new  double[6];  double[]  d2  =  new  double[2];	  double[]    d1    =    new    double[2];    double[]    d2    =    new    double[2];    	non-compiled	[CE]  variable  d2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	19	None	replace
5	[BUG]  [BUGGY]  int  seg1  =  iterator2.currentSegment(d1);  [CE]  cannot  find  symbol  d1  [FE]              AssertionFailedError      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  int  seg1  =  iterator2.currentSegment(d1);  [BUGGY]      double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	int  seg1  =  iterator2.currentSegment(d1);	  int    seg1    =    iterator2.getSegmentCount();    	non-compiled	[CE]  cannot  find  symbol  d1	13	None	replace
6	[BUG]  [BUGGY]  double[]  d1  =  new  double[7];  double[]  d1  =  new  double[7];  [CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]    AssertionFailedError    [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  double[]  d1  =  new  double[7];  double[]  d1  =  new  double[7];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	double[]    d1    =    new    double[7];    double[]  d1  =  new  double[7];	  	non-compiled	[CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	6	None	add
7	[BUG]  [BUGGY]  double[]  d1  =  new  double[7];  Double[]  d1  =  new  double[7];  [CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]      AssertionFailedError    [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  double[]  d1  =  new  double[7];  Double[]  d1  =  new  double[7];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	double[]    d1    =    new    double[7];    Double[]  d1  =  new  double[7];	  	non-compiled	[CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	6	None	add
8	[BUG]  [BUGGY]  Iterator  <  Path>  iterator2  =  p1.getPathIterator(null);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  Iterator  <  Path>  iterator2  =  p1.getPathIterator(null);  [BUGGY]      double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	Iterator  <  Path>  iterator2  =  p1.getPathIterator(null);	  Iterator    <    Path>    iterator2    =    p2.getPathIterator(null);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
9	[BUG]  [BUGGY]  int[]  d1  =  new  int[1];  int[]  d2  =  new  int[6];  [CE]  variable  d2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  int[]  d1  =  new  int[1];  int[]  d2  =  new  int[6];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	int[]  d1  =  new  int[1];  int[]  d2  =  new  int[6];	  double[]    d1    =    new    double[1];    double[]    d2    =    new    double[1];    	non-compiled	[CE]  variable  d2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	4	None	replace
10	[BUG]  [BUGGY]  int[]  d1  =  new  int[2];  int[]  d1  =  new  int[6];  [CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]        AssertionFailedError      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  int[]  d1  =  new  int[2];  int[]  d1  =  new  int[6];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	int[]  d1  =  new  int[2];  int[]  d1  =  new  int[6];	  double[]    d1    =    new    double[2];    double[]    d1    =    new    double[2];    	non-compiled	[CE]  variable  d1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	10	None	replace
11	[BUG]  [BUGGY]  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[1];  [CE]  variable  d2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[1];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	double[]  d1  =  new  double[6];  double[]  d2  =  new  double[1];	  double[]    d1    =    new    double[1];    double[]    d2    =    new    double[1];    	non-compiled	[CE]  variable  d2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	4	None	replace
12	[BUG]  [BUGGY]  int[]  d1  =  new  double[6];  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      return  (p2  ==  null);  }  if  (p2  ==  null)  {  return  false;  }  if  (p1.getWindingRule()  !=  p2.getWindingRule())  {  return  false;  }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);      [BUGGY]  int[]  d1  =  new  double[6];  [BUGGY]      double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	276	276	1	replace	int[]  d1  =  new  double[6];	  double[]    d1    =    new    double[2];    int[]    d1    =    new    double[2];    	non-compiled	[CE]  incompatible  types	12	None	replace
