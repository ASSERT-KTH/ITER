bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator2.next();    iterator2.next();  iterator2.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	add	                iterator2.next();        iterator2.next();    iterator2.next();  iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	9	2	add
2	[BUG]  [BUGGY]          iterator2.next();    iterator2.next();  iterator2.next();  iterator2.next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator2.next();    iterator2.next();  iterator2.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	                iterator2.next();        iterator2.next();    iterator2.next();  iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	9	2	add
3	[BUG]  [BUGGY]          iterator2.next();    iterator2.next();  Iterator2.next();  iterator2.next();  [CE]  cannot  find  symbol  Iterator2  [FE]      AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator2.next();    iterator2.next();  Iterator2.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	                iterator2.next();        iterator2.next();    Iterator2.next();  iterator2.next();	  	non-compiled	[CE]  cannot  find  symbol  Iterator2	9	None	add
4	[BUG]  [BUGGY]          iterator2.next();    iterator2.next();  Iterator2  iterator2.next();  iterator2.next();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator2.next();    iterator2.next();  Iterator2  iterator2.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	                iterator2.next();        iterator2.next();    Iterator2  iterator2.next();  iterator2.next();	  	non-compiled	[CE]  ';'  expected	9	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator1.next();    iterator1.next();  iterator1.next();  iterator1.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	add	                iterator1.next();        iterator1.next();    iterator1.next();  iterator1.next();	  	compilable	  [FE]  AssertionFailedError  	13	2	add
6	[BUG]  [BUGGY]          iterator1.next();    iterator1.next();  iterator1.next();  iterator1.next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator1.next();    iterator1.next();  iterator1.next();  iterator1.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	                iterator1.next();        iterator1.next();    iterator1.next();  iterator1.next();	  	compilable	  [FE]  AssertionFailedError  	13	2	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator1.next();    iterator1.next();  iterator1.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	add	                iterator1.next();        iterator1.next();    iterator1.next();  iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	13	2	add
8	[BUG]  [BUGGY]          iterator1.next();    iterator1.next();  iterator1.next();  iterator2.next();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator1.next();    iterator1.next();  iterator1.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	                iterator1.next();        iterator1.next();    iterator1.next();  iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	13	2	add
9	[BUG]  [BUGGY]          iterator1.next();    iterator1.next();  Iterator1.next();  iterator2.next();  [CE]  cannot  find  symbol  Iterator1  [FE]        AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator1.next();    iterator1.next();  Iterator1.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	                iterator1.next();        iterator1.next();    Iterator1.next();  iterator2.next();	  	non-compiled	[CE]  cannot  find  symbol  Iterator1	13	None	add
10	[BUG]  [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment(d2);  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment(d2);	  Iterator    <    SQRT2>    iterator1    =    iterator1.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	17	None	replace
11	[BUG]  [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d2);  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d2);	  Iterator    <    PathIterator>    iterator1    =    iterator1.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	18	None	replace
12	[BUG]  [BUGGY]  Iterator  iterator2  =  iterator1.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  iterator2  =  iterator1.iterator();  [BUGGY]      done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  iterator2  =  iterator1.iterator();	  Iterator    iterator2.remove();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
13	[BUG]  [BUGGY]  Iterator  <  PathIterator>  iterator2  =  iterator1.currentSegment(seg1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  <  PathIterator>  iterator2  =  iterator1.currentSegment(seg1);  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  <  PathIterator>  iterator2  =  iterator1.currentSegment(seg1);	  Iterator    <    PathIterator>    iterator2    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	19	None	replace
14	[BUG]  [BUGGY]  iterator1.next();  Iterator2.next();  [CE]  cannot  find  symbol  Iterator2  [FE]          AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  iterator1.next();  Iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	iterator1.next();  Iterator2.next();	          iterator2.next();    Iterator2.next();    	non-compiled	[CE]  cannot  find  symbol  Iterator2	11	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  iterator1.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	add	iterator1.next();  iterator2.next();	          iterator2.next();    iterator2.next();    	compilable	  [FE]  AssertionFailedError  	10	2	replace
16	[BUG]  [BUGGY]  iterator1.next();  iterator2.next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  iterator1.next();  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	iterator1.next();  iterator2.next();	          iterator2.next();    iterator2.next();    	compilable	  [FE]  AssertionFailedError  	10	2	replace
17	[BUG]  [BUGGY]  Iterator1  iterator1.next();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator1  iterator1.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator1  iterator1.next();	          iterator1.next();    iterator1.next();    	non-compiled	[CE]  ';'  expected	14	None	replace
18	[BUG]  [BUGGY]  Iterator1.next();  [CE]  cannot  find  symbol  Iterator1  [FE]            AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator1.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator1.next();	          iterator1.next();    Iterator1.next();    	non-compiled	[CE]  cannot  find  symbol  Iterator1	16	None	replace
19	[BUG]  [BUGGY]  Iterator2  iterator2.next();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator2  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator2  iterator2.next();	          iterator2.next();    Iterator2    iterator2.next();    	non-compiled	[CE]  ';'  expected	12	None	replace
20	[BUG]  [BUGGY]  Iterator  <  PathIterator>  iterator2  =  iterator2.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]              AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  <  PathIterator>  iterator2  =  iterator2.currentSegment(d2);  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  <  PathIterator>  iterator2  =  iterator2.currentSegment(d2);	  Iterator    <    PathIterator>    iterator2    =    iterator2.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	22	None	replace
21	[BUG]  [BUGGY]  Iterator  iterator2  =  iterator1.remove();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  iterator2  =  iterator1.remove();  [BUGGY]      done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  iterator2  =  iterator1.remove();	  Iterator    iterator2.remove();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
22	[BUG]  [BUGGY]  Iterator  <  Path>  iterator1  =  iterator1.next();  iterator1.next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  <  Path>  iterator1  =  iterator1.next();  iterator1.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  <  Path>  iterator1  =  iterator1.next();  iterator1.next();	          iterator1.next();    iterator1.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	14	None	replace
23	[BUG]  [BUGGY]  Iterator  <  SQRT2>  iterator2  =  iterator2.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  <  SQRT2>  iterator2  =  iterator2.currentSegment(d2);  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  <  SQRT2>  iterator2  =  iterator2.currentSegment(d2);	  Iterator    <    SQRT2>    iterator2    =    iterator1.currentSegment(d2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
24	[BUG]  [BUGGY]  IteratorIterator  iterator1  =  iterator1.iterator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  IteratorIterator  iterator1  =  iterator1.iterator();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	IteratorIterator  iterator1  =  iterator1.iterator();	  iterator1.remove();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
25	[BUG]  [BUGGY]  Iterator2.next();  [CE]  cannot  find  symbol  Iterator2  [FE]          AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator2.next();	          iterator2.next();    Iterator2.next();    	non-compiled	[CE]  cannot  find  symbol  Iterator2	11	None	replace
26	[BUG]  [BUGGY]  Iterator  <  SQRT2>  iterator2.next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  <  SQRT2>  iterator2.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  <  SQRT2>  iterator2.next();	          iterator2.next();    iterator2.next();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
27	[BUG]  [BUGGY]  Iterator  iterator2  =  iterator2.remove();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]  Iterator  iterator2  =  iterator2.remove();  [BUGGY]      done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	Iterator  iterator2  =  iterator2.remove();	  Iterator    iterator2.remove();    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
28	[BUG]  [BUGGY]          iterator1.next();    iterator1.next();  Iterator1.next();  iterator1.next();  [CE]  cannot  find  symbol  Iterator1  [FE]    AssertionFailedError    [CONTEXT]      }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();      [BUGGY]          iterator1.next();    iterator1.next();  Iterator1.next();  iterator1.next();  [BUGGY]      iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	292	292	1	replace	                iterator1.next();        iterator1.next();    Iterator1.next();  iterator1.next();	  	non-compiled	[CE]  cannot  find  symbol  Iterator1	13	None	add
