bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  PathIterator  iterator1  =  p1.currentSegment(d2);  [CE]  variable  iterator1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]              AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  PathIterator  iterator1  =  p1.currentSegment(d2);  [BUGGY]      done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	PathIterator  iterator1  =  p1.currentSegment(d2);	  PathIterator    iterator1    =    p1.currentSegment(d1);    	non-compiled	[CE]  variable  iterator1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	2	None	replace
2	[BUG]  [BUGGY]  float  done  =  iterator1.isDone()  ||  iterator2.isDone();  [CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]          AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  float  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	float  done  =  iterator1.isDone()  ||  iterator2.isDone();	  done    =    iterator1.isDone()    ||    iterator2.isDone();    float    done    =    iterator1.isDone()    ||    iterator2.isDone();    	non-compiled	[CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	11	None	replace
3	[BUG]  [BUGGY]  double  done  =  iterator1.isDone()  ||  iterator2.isDone();  [CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]            AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  double  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	double  done  =  iterator1.isDone()  ||  iterator2.isDone();	  done    =    iterator1.isDone()    ||    iterator2.isDone();    float    done    =    iterator1.isDone()    ||    iterator2.isDone();    	non-compiled	[CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	11	None	replace
4	[BUG]  [BUGGY]  Iterator  <?>  iterator1  =  iterator1.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  Iterator  <?>  iterator1  =  iterator1.currentSegment(d2);  [BUGGY]      done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	Iterator  <?>  iterator1  =  iterator1.currentSegment(d2);	  Iterator    <?>    iterator1    =    iterator1.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	add	done        =        iterator1.isDone()        ||        iterator2.isDone();        done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	9	1	add
6	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	9	1	add
7	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  float  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]      AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  float  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        done    =    iterator1.isDone()    ||    iterator2.isDone();    float  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	non-compiled	[CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	9	None	add
8	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  Iterator2.isDone();  [CE]  cannot  find  symbol  Iterator2  [FE]        AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  Iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  Iterator2.isDone();	  	non-compiled	[CE]  cannot  find  symbol  Iterator2	9	None	add
9	[BUG]  [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d2);  [BUGGY]      done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d2);	  Iterator    <    PathIterator>    iterator1    =    iterator1.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	3	None	replace
10	[BUG]  [BUGGY]  iterator1.isDone()  ||  iterator2.isDone();  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	iterator1.isDone()  ||  iterator2.isDone();	  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.isDone()    ||    iterator2.isDone();    	non-compiled	[CE]  not  a  statement	14	None	replace
11	[BUG]  [BUGGY]  iterator1.isDone()  &&  iterator2.isDone();  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  iterator1.isDone()  &&  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	iterator1.isDone()  &&  iterator2.isDone();	  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.isDone()    ||    iterator2.isDone();    	non-compiled	[CE]  not  a  statement	14	None	replace
12	[BUG]  [BUGGY]  if(seg1  ==  seg2)  {  done  =  iterator1.isDone()  ||  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  if(seg1  ==  seg2)  {  done  =  iterator1.isDone()  ||  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	if(seg1  ==  seg2)  {  done  =  iterator1.isDone()  ||  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator	  done    =    iterator1.isDone()    ||    iterator2.isDone();    if(done    ==    0)    {    for(PathIterator    iterator1    =    iterator2.currentSegment(d1);    iterator2!=    seg2;    done    =    iterator1.isDone()    ||    iterator2.isDone();    }    	non-compiled	[CE]  ')'  expected	15	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator2.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	add	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator2.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	12	1	add
14	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator2.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator2.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator2.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	12	1	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	add	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	12	2	add
16	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	12	2	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	add	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	12	2	add
18	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator2.isDone();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator2.isDone();	  	compilable	  [FE]  AssertionFailedError  	12	2	add
19	[BUG]  [BUGGY]  done  =  iterator1.isDone()  &&  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator1.isDone()  |  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done  =  iterator1.isDone()  &&  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator1.isDone()  |  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done  =  iterator1.isDone()  &&  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator1.isDone()  |	  done    =    iterator1.isDone()    ||    iterator2.isDone();    if(done    ==    0)    {    for(PathIterator    iterator1    =    iterator2.currentSegment(d1);    iterator2!=    seg2;    done    =    iterator1.isDone()    ||    iterator2.isDone();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
20	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator3.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [CE]  cannot  find  symbol  iterator3  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator3.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator3.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	non-compiled	[CE]  cannot  find  symbol  iterator3	12	None	add
21	[BUG]  [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator2.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator2.currentSegment(d2);  [BUGGY]      done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	Iterator  <  SQRT2>  iterator1  =  iterator2.currentSegment(d2);	  Iterator    <    SQRT2>    iterator1    =    iterator1.currentSegment(d2);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	5	None	replace
22	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator3.isDone()  ||  iterator2.isDone();  [CE]  cannot  find  symbol  iterator3  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator3.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator3.isDone()  ||  iterator2.isDone();	  	non-compiled	[CE]  cannot  find  symbol  iterator3	9	None	add
23	[BUG]  [BUGGY]  done  =  iterator1.isDone()  &&  iterator2.isDone();  iterator1.isDone()  &&  iterator2.isDone();  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done  =  iterator1.isDone()  &&  iterator2.isDone();  iterator1.isDone()  &&  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done  =  iterator1.isDone()  &&  iterator2.isDone();  iterator1.isDone()  &&  iterator2.isDone();	  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.isDone()    ||    iterator2.isDone();    	non-compiled	[CE]  not  a  statement	14	None	replace
24	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  Iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [CE]  cannot  find  symbol  Iterator2  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  Iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  Iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();	  	non-compiled	[CE]  cannot  find  symbol  Iterator2	9	None	add
25	[BUG]  [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator3.isDone()  ||  iterator2.isDone();  [CE]  cannot  find  symbol  iterator3  [FE]    AssertionFailedError    [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done    =    iterator1.isDone()    ||    iterator2.isDone();    iterator1.next();  done  =  iterator1.isDone()  ||  iterator2.isDone();  done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator3.isDone()  ||  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done        =        iterator1.isDone()        ||        iterator2.isDone();        iterator1.next();    done    =    iterator1.isDone()    ||    iterator2.isDone();    done  =  iterator1.isDone()  ||  iterator2.isDone();  iterator1.next();  done  =  iterator3.isDone()  ||  iterator2.isDone();	  	non-compiled	[CE]  cannot  find  symbol  iterator3	12	None	add
26	[BUG]  [BUGGY]  float  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]          AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  float  done  =  iterator1.isDone()  &&  iterator2.isDone();  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	float  done  =  iterator1.isDone()  &&  iterator2.isDone();	  done    =    iterator1.isDone()    ||    iterator2.isDone();    float    done    =    iterator1.isDone()    ||    iterator2.isDone();    	non-compiled	[CE]  variable  done  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	11	None	replace
27	[BUG]  [BUGGY]  if(done  ==  0)  {  done  =  iterator1.isDone()  ||  iterator2.isDone();  }  [CE]  bad  operand  types  for  binary  operator  '=='  [FE]        AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  if(done  ==  0)  {  done  =  iterator1.isDone()  ||  iterator2.isDone();  }  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	if(done  ==  0)  {  done  =  iterator1.isDone()  ||  iterator2.isDone();  }	  done    =    iterator1.isDone()    ||    iterator2.isDone();    if(done    ==    0)    {    for(PathIterator    iterator1    =    iterator2.currentSegment(d1);    iterator2!=    seg2;    done    =    iterator1.isDone()    ||    iterator2.isDone();    }    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '=='	15	None	replace
28	[BUG]  [BUGGY]  done  =  iterator1.isDone()  &&  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator1.isDone()  ||  iterator2.isDone();  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();      [BUGGY]  done  =  iterator1.isDone()  &&  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator1.isDone()  ||  iterator2.isDone();  }  [BUGGY]      }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	293	293	1	replace	done  =  iterator1.isDone()  &&  iterator2.isDone();  if(done  ==  0)  {  for(PathIterator  iterator1  =  iterator2.currentSegment(d1);  iterator2!=  seg2;  done  =  iterator1.isDone()  ||  iterator2.isDone();  }	  done    =    iterator1.isDone()    ||    iterator2.isDone();    if(done    ==    0)    {    for(PathIterator    iterator1    =    iterator2.currentSegment(d1);    iterator2!=    seg2;    done    =    iterator1.isDone()    ||    iterator2.isDone();    }    	non-compiled	[CE]  ')'  expected	15	None	replace
