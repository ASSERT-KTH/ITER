bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iterator1  =  iterator1.next();  iterator2.next();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  iterator1  =  iterator1.next();  iterator2.next();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  iterator1  =  iterator1.next();  iterator2.next();	      iterator1.next();    iterator2.next();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
2	[BUG]  [BUGGY]  Iterator  iterator1  =  iterator1.iterator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  iterator1  =  iterator1.iterator();  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  iterator1  =  iterator1.iterator();	  iterator1.remove();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
3	[BUG]  [BUGGY]  Iterator  <  Path>  iterator1  =  iterator1.currentSegment(seg1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <  Path>  iterator1  =  iterator1.currentSegment(seg1);  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <  Path>  iterator1  =  iterator1.currentSegment(seg1);	      Iterator    <    Path>    iterator1    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Path>  iterator1  =  iterator2.currentSegment(d1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <  Path>  iterator1  =  iterator2.currentSegment(d1);  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <  Path>  iterator1  =  iterator2.currentSegment(d1);	      Iterator    <    Path>    iterator1    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
5	[BUG]  [BUGGY]  Iterator  <?>  iterator1  =  iterator1.currentSegment();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <?>  iterator1  =  iterator1.currentSegment();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <?>  iterator1  =  iterator1.currentSegment();	      Iterator    <?>    iterator1    =    iterator2.currentSegment();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	7	None	replace
6	[BUG]  [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d1);  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(d1);	      Iterator    <    PathIterator>    iterator1    =    iterator2.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	10	None	replace
7	[BUG]  [BUGGY]  Iterator  <?>  iterator1  =  iterator1.currentSegment(d1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <?>  iterator1  =  iterator1.currentSegment(d1);  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <?>  iterator1  =  iterator1.currentSegment(d1);	      Iterator    <?>    iterator1    =    iterator2.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	4	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      iterator1.next();  iterator2.next();  iterator1.next();  iterator2.next();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	add	        iterator1.next();    iterator2.next();    iterator1.next();  iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	5	1	add
9	[BUG]  [BUGGY]      iterator1.next();  iterator2.next();  iterator1.next();  iterator2.next();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      iterator1.next();  iterator2.next();  iterator1.next();  iterator2.next();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        iterator1.next();    iterator2.next();    iterator1.next();  iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	5	1	add
10	[BUG]  [BUGGY]      iterator1.next();  iterator2.next();  Iterator1.next();  iterator2.next();  [CE]  cannot  find  symbol  Iterator1  [FE]      AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      iterator1.next();  iterator2.next();  Iterator1.next();  iterator2.next();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        iterator1.next();    iterator2.next();    Iterator1.next();  iterator2.next();	  	non-compiled	[CE]  cannot  find  symbol  Iterator1	5	None	add
11	[BUG]  [BUGGY]      iterator1.next();  iterator2.next();  Iterator1  iterator1.next();  iterator2.next();  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      iterator1.next();  iterator2.next();  Iterator1  iterator1.next();  iterator2.next();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        iterator1.next();    iterator2.next();    Iterator1  iterator1.next();  iterator2.next();	  	non-compiled	[CE]  ';'  expected	5	None	add
12	[BUG]  [BUGGY]      Iterator  <?>  done  =  iterator1.next();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      Iterator  <?>  done  =  iterator1.next();  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        Iterator  <?>  done  =  iterator1.next();	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	add
13	[BUG]  [BUGGY]      Iterator  iterator2  =  iterator1.iterator();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      Iterator  iterator2  =  iterator1.iterator();  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        Iterator  iterator2  =  iterator1.iterator();	  	non-compiled	[CE]  cannot  find  symbol	2	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      iterator2.next();  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	add	        iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	2	2	add
15	[BUG]  [BUGGY]      iterator2.next();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      iterator2.next();  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        iterator2.next();	  	compilable	  [FE]  AssertionFailedError  	2	2	add
16	[BUG]  [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment(d2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment(d2);  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment(d2);	      Iterator    <    SQRT2>    iterator1    =    iterator1.currentSegment(d1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	12	None	replace
17	[BUG]  [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment();  [CE]  generics  are  not  supported  in  -source  1.4  [FE]            AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <  SQRT2>  iterator1  =  iterator1.currentSegment();	      Iterator    <    SQRT2>    iterator1    =    iterator2.currentSegment();    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	13	None	replace
18	[BUG]  [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(seg1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(seg1);  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <  PathIterator>  iterator1  =  iterator1.currentSegment(seg1);	      Iterator    <    PathIterator>    iterator1    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	8	None	replace
19	[BUG]  [BUGGY]  IteratorIterator  iterator1  =  iterator1.iterator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  IteratorIterator  iterator1  =  iterator1.iterator();  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	IteratorIterator  iterator1  =  iterator1.iterator();	  iterator1.remove();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
20	[BUG]  [BUGGY]      Iterator  <  PathIterator>  iterator2  =  iterator1.currentSegment(seg2);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]    AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      Iterator  <  PathIterator>  iterator2  =  iterator1.currentSegment(seg2);  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        Iterator  <  PathIterator>  iterator2  =  iterator1.currentSegment(seg2);	  	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	2	None	add
21	[BUG]  [BUGGY]      PathIterator  iterator1  =  p2.currentPath();  [CE]  variable  iterator1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]      AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]      PathIterator  iterator1  =  p2.currentPath();  [BUGGY]    iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	        PathIterator  iterator1  =  p2.currentPath();	  	non-compiled	[CE]  variable  iterator1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	2	None	add
22	[BUG]  [BUGGY]  Iterator  <  Path>  iterator1  =  iterator1.currentSegment(d1);  [CE]  generics  are  not  supported  in  -source  1.4  [FE]          AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  Iterator  <  Path>  iterator1  =  iterator1.currentSegment(d1);  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	Iterator  <  Path>  iterator1  =  iterator1.currentSegment(d1);	      Iterator    <    Path>    iterator1    =    iterator2.currentSegment(seg1);    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	9	None	replace
23	[BUG]  [BUGGY]  iterator1.remove();  iterator2.next();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }    [BUGGY]  iterator1.remove();  iterator2.next();  [BUGGY]    iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  }  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	291	291	1	replace	iterator1.remove();  iterator2.next();	      iterator1.next();    iterator2.next();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
