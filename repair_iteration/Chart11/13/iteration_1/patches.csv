bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  seg1  =  iterator2.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  int  seg1  =  iterator2.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  [BUGGY]    if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	int  seg1  =  iterator2.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);	      int    seg1    =    iterator1.currentSegment(d1);    int    seg2    =    iterator2.currentSegment(d2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  int  seg2  =  iterator2.currentSegment(d1,  d2);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  int  seg2  =  iterator2.currentSegment(d1,  d2);  [BUGGY]    if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	int  seg2  =  iterator2.currentSegment(d1,  d2);	      int    seg2    =    iterator2.currentSegment(d1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(seg1!=  seg2  ||  seg1!=  seg2)  {  if(seg1!=  seg2  ||  seg1!=  seg2)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  if(seg1!=  seg2  ||  seg1!=  seg2)  {  if(seg1!=  seg2  ||  seg1!=  seg2)  {  [BUGGY]    return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	if(seg1!=    seg2    ||    seg1!=    seg2)    {    if(seg1!=  seg2  ||  seg1!=  seg2)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
4	[BUG]  [BUGGY]  if(seg1!=  seg2  ||  seg1!=  seg2)  {  if(seg1  >=  seg2  ||  seg1!=  seg2)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  if(seg1!=  seg2  ||  seg1!=  seg2)  {  if(seg1  >=  seg2  ||  seg1!=  seg2)  {  [BUGGY]    return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	if(seg1!=    seg2    ||    seg1!=    seg2)    {    if(seg1  >=  seg2  ||  seg1!=  seg2)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
5	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d2);  int  seg2  =  iterator2.currentSegment(d1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  int  seg1  =  iterator1.currentSegment(d2);  int  seg2  =  iterator2.currentSegment(d1);  [BUGGY]    if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	int  seg1  =  iterator1.currentSegment(d2);  int  seg2  =  iterator2.currentSegment(d1);	      int    seg1    =    iterator1.currentSegment(d1);    int    seg2    =    iterator2.currentSegment(seg2);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  if(seg1!=  seg2  ||  seg1  ==  seg2)  {  [BUGGY]    return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	add	if(seg1!=  seg2  ||  seg1  ==  seg2)  {	  if(seg1!=    seg2    ||    seg1!=    seg2)    {    	compilable	  [FE]  AssertionFailedError  	7	2	replace
7	[BUG]  [BUGGY]  if(seg1!=  seg2  ||  seg1  ==  seg2)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  if(seg1!=  seg2  ||  seg1  ==  seg2)  {  [BUGGY]    return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	if(seg1!=  seg2  ||  seg1  ==  seg2)  {	  if(seg1!=    seg2    ||    seg1!=    seg2)    {    	compilable	  [FE]  AssertionFailedError  	7	2	replace
8	[BUG]  [BUGGY]  int  seg2  =  iterator2.currentSegment(seg2);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  int  seg2  =  iterator2.currentSegment(seg2);  [BUGGY]    return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	int  seg2  =  iterator2.currentSegment(seg2);	      	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  if(seg1!=  seg2  &&  seg1!=  seg2)  {  [BUGGY]    return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	add	if(seg1!=  seg2  &&  seg1!=  seg2)  {	  if(seg1!=    seg2    ||    seg1!=    seg2)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
10	[BUG]  [BUGGY]  if(seg1!=  seg2  &&  seg1!=  seg2)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }  int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);    [BUGGY]  if(seg1!=  seg2  &&  seg1!=  seg2)  {  [BUGGY]    return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  }  return  true;  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	285	285	1	replace	if(seg1!=  seg2  &&  seg1!=  seg2)  {	  if(seg1!=    seg2    ||    seg1!=    seg2)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
