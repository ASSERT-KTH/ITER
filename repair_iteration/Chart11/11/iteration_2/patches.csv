bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  2;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	add	int  seg1  =  iterator1.currentSegment(d1)/  2;	  int    seg1    =    iterator1.currentSegment(d1)+    2;    	compilable	  [FE]  AssertionFailedError  	13	2	replace
2	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  2;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int  seg1  =  iterator1.currentSegment(d1)/  2;	  int    seg1    =    iterator1.currentSegment(d1)+    2;    	compilable	  [FE]  AssertionFailedError  	13	2	replace
3	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  1;  int  seg1  =  iterator1.currentSegment(d1)/  1;  [CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  1;  int  seg1  =  iterator1.currentSegment(d1)/  1;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int    seg1    =    iterator1.currentSegment(d1)/    1;    int  seg1  =  iterator1.currentSegment(d1)/  1;	  	non-compiled	[CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	4	None	add
4	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  1;  Int  seg1  =  iterator1.currentSegment(d1)/  1;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  1;  Int  seg1  =  iterator1.currentSegment(d1)/  1;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int    seg1    =    iterator1.currentSegment(d1)/    1;    Int  seg1  =  iterator1.currentSegment(d1)/  1;	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
5	[BUG]  [BUGGY]  int  seg2  =  iterator1.currentSegment(d1,  d2);  [CE]  no  suitable  method  found  for  currentSegment(double[],double[])  [FE]              AssertionFailedError      [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg2  =  iterator1.currentSegment(d1,  d2);  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int  seg2  =  iterator1.currentSegment(d1,  d2);	  int    seg2    =    iterator1.currentSegment(d1);    	non-compiled	[CE]  no  suitable  method  found  for  currentSegment(double[],double[])	6	None	replace
6	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)+  1;  Int  seg1  =  iterator2.currentSegment(d1)+  1;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)+  1;  Int  seg1  =  iterator2.currentSegment(d1)+  1;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int  seg1  =  iterator1.currentSegment(d1)+  1;  Int  seg1  =  iterator2.currentSegment(d1)+  1;	  int    seg1    =    iterator1.currentSegment(d1)+    1;    Int    seg1    =    iterator1.currentSegment(d1)+    1;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
7	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1);  int  seg1  =  iterator2.currentSegment(d2);  [CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]          AssertionFailedError      [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1);  int  seg1  =  iterator2.currentSegment(d2);  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int  seg1  =  iterator1.currentSegment(d1);  int  seg1  =  iterator2.currentSegment(d2);	  int    seg1    =    iterator2.currentSegment(d1);    int    seg1    =    iterator2.currentSegment(d2);    	non-compiled	[CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	2	None	replace
8	[BUG]  [BUGGY]  float  seg1  =  iterator2.currentSegment(d1);  float  seg1  =  iterator2.currentSegment(d2);  [CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]            AssertionFailedError      [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  float  seg1  =  iterator2.currentSegment(d1);  float  seg1  =  iterator2.currentSegment(d2);  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	float  seg1  =  iterator2.currentSegment(d1);  float  seg1  =  iterator2.currentSegment(d2);	  int    seg1    =    iterator2.currentSegment(d1);    int    seg1    =    iterator2.currentSegment(d2);    	non-compiled	[CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	2	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  4;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	add	int  seg1  =  iterator1.currentSegment(d1)/  4;	  int    seg1    =    iterator1.currentSegment(d1)/    1;    	compilable	  [FE]  AssertionFailedError  	5	2	replace
10	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  4;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int  seg1  =  iterator1.currentSegment(d1)/  4;	  int    seg1    =    iterator1.currentSegment(d1)/    1;    	compilable	  [FE]  AssertionFailedError  	5	2	replace
11	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)+  2;  int  seg1  =  iterator1.currentSegment(d1)+  2;  [CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)+  2;  int  seg1  =  iterator1.currentSegment(d1)+  2;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int    seg1    =    iterator1.currentSegment(d1)+    2;    int  seg1  =  iterator1.currentSegment(d1)+  2;	  	non-compiled	[CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	12	None	add
12	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)+  2;  Int  seg1  =  iterator1.currentSegment(d1)+  2;  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)+  2;  Int  seg1  =  iterator1.currentSegment(d1)+  2;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int    seg1    =    iterator1.currentSegment(d1)+    2;    Int  seg1  =  iterator1.currentSegment(d1)+  2;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
13	[BUG]  [BUGGY]  int  seg2  =  iterator2.currentSegment(d1);  [CE]  variable  seg2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]              AssertionFailedError      [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg2  =  iterator2.currentSegment(d1);  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int  seg2  =  iterator2.currentSegment(d1);	  int    seg2    =    iterator1.currentSegment(d1);    	non-compiled	[CE]  variable  seg2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	6	None	replace
14	[BUG]  [BUGGY]  float  seg1  =  iterator2.currentSegment(d1);  float  seg1  =  iterator2.currentSegment(d1);  [CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]        AssertionFailedError      [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  float  seg1  =  iterator2.currentSegment(d1);  float  seg1  =  iterator2.currentSegment(d1);  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	float  seg1  =  iterator2.currentSegment(d1);  float  seg1  =  iterator2.currentSegment(d1);	  int    seg1    =    iterator2.currentSegment(d1);    int    seg1    =    iterator2.currentSegment(d1);    	non-compiled	[CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	1	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d2)/  2;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	add	int  seg1  =  iterator1.currentSegment(d2)/  2;	  int    seg1    =    iterator1.currentSegment(d1)/    1;    	compilable	  [FE]  AssertionFailedError  	5	2	replace
16	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d2)/  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d2)/  2;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int  seg1  =  iterator1.currentSegment(d2)/  2;	  int    seg1    =    iterator1.currentSegment(d1)/    1;    	compilable	  [FE]  AssertionFailedError  	5	2	replace
17	[BUG]  [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  1;  int  seg1  =  iterator1.currentSegment(d1)/  2;  [CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]    AssertionFailedError    [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  int  seg1  =  iterator1.currentSegment(d1)/  1;  int  seg1  =  iterator1.currentSegment(d1)/  2;  [BUGGY]      int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	int    seg1    =    iterator1.currentSegment(d1)/    1;    int  seg1  =  iterator1.currentSegment(d1)/  2;	  	non-compiled	[CE]  variable  seg1  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	4	None	add
18	[BUG]  [BUGGY]  double  seg1  =  iterator1.currentSegment(d1);  double  seg2  =  iterator2.currentSegment(d2);  [CE]  variable  seg2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)  [FE]                AssertionFailedError      [CONTEXT]      }  PathIterator  iterator1  =  p1.getPathIterator(null);  PathIterator  iterator2  =  p1.getPathIterator(null);  double[]  d1  =  new  double[6];  double[]  d2  =  new  double[6];  boolean  done  =  iterator1.isDone()  &&  iterator2.isDone();  while  (!done)  {  if  (iterator1.isDone()  !=  iterator2.isDone())  {  return  false;  }      [BUGGY]  double  seg1  =  iterator1.currentSegment(d1);  double  seg2  =  iterator2.currentSegment(d2);  [BUGGY]      int  seg1  =  iterator1.currentSegment(d1);  int  seg2  =  iterator2.currentSegment(d2);  if  (seg1  !=  seg2)  {  return  false;  }  if  (!Arrays.equals(d1,  d2))  {  return  false;  }  iterator1.next();  iterator2.next();  done  =  iterator1.isDone()  &&  iterator2.isDone();  [CLASS]  ShapeUtilities  [METHOD]  equal  [RETURN_TYPE]  boolean  GeneralPath  p1  GeneralPath  p2  [VARIABLES]  boolean  done  float  SQRT2  GeneralPath  p1  p2  double[]  d1  d2  PathIterator  iterator1  iterator2  int  seg1  seg2  	projects/Chart11/source/org/jfree/chart/util/ShapeUtilities.java	0.7071067811865475	283	283	1	replace	double  seg1  =  iterator1.currentSegment(d1);  double  seg2  =  iterator2.currentSegment(d2);	  double    d1    =    iterator1.currentSegment(d1);    double    seg2    =    iterator2.currentSegment(d2);    	non-compiled	[CE]  variable  seg2  is  already  defined  in  method  equal(GeneralPath,GeneralPath)	14	None	replace
