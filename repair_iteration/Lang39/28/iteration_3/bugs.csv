bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String[]  searchList  =  this.searchList.toArray(new  String[this.searchList.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  this.searchList.toArray(new  String[this.searchList.size()  ]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  this.searchList.toArray(new  String[this.searchList.size()  ]);	  String[]    searchList    =    searchList.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
2	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.size()  ];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[searchList.size()  ];  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  new  String[searchList.size()  ];	  String[]    searchList    =    searchList.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
3	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  ]);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  ]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  ]);	  String[]    searchList    =    searchList.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
4	[BUG]  [BUGGY]  Math.min(increase,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increase,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  searchList.length()  -  1);	  Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
5	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  searchList.size()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  searchList.size()  -  1);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  searchList.size()  -  1);	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
6	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  3);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  3);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  3);	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
7	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  2);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  2);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  2);	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
8	[BUG]  [BUGGY]  if(this.repeat  >  0  &&  this.searchList.size()  >  0)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  >  0  &&  this.searchList.size()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >  0  &&  this.searchList.size()  >  0)  {	  if(this.repeat    >    0    ||    this.searchList.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
9	[BUG]  [BUGGY]  if(this.repeat  >=  0  ||  this.searchList.size()  >  0)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  >=  0  ||  this.searchList.size()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >=  0  ||  this.searchList.size()  >  0)  {	  if(this.repeat    >    0    ||    this.searchList.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
10	[BUG]  [BUGGY]  if(this.repeat  >  0  ||  this.searchList.size()  ==  0)  {  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  >  0  ||  this.searchList.size()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >  0  ||  this.searchList.size()  ==  0)  {	  if(this.repeat    >    0    ||    this.searchList.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
11	[BUG]  [BUGGY]  if(text.length()  ==  3)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  ==  3)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  ==  3)  {	  if(text.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
12	[BUG]  [BUGGY]  if(text.length()!=  3)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()!=  3)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()!=  3)  {	  if(text.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
13	[BUG]  [BUGGY]  Math.min(searchList.length(),  increase  *  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(searchList.length(),  increase  *  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.length(),  increase  *  5);	  Math.min(searchList.length(),    increase    /    5);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
14	[BUG]  [BUGGY]  Math.min(searchList.length(),  increase  /  2);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(searchList.length(),  increase  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.length(),  increase  /  2);	  Math.min(searchList.length(),    increase    /    5);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
15	[BUG]  [BUGGY]  Math.min(searchList.length(),  increase);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.min(searchList.length(),  increase);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.length(),  increase);	  Math.min(searchList.length(),    increase    /    5);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
16	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(increase,  text.length()  /  5);	  long    timeToLive    =    Math.max(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
17	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(increase,  text.length()  -  1);	  long    timeToLive    =    Math.max(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
18	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ')/  1;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ')/  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf('  ')/  1;	  int    searchListIndex    =    searchList.indexOf('    ')-    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
19	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf('  ')-  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.indexOf('  ')-  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf('  ')-  1;	  int    searchListIndex    =    searchList.indexOf('    ')-    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
20	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.lastIndexOf('  ')-  1;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  searchList.lastIndexOf('  ')-  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.lastIndexOf('  ')-  1;	  int    searchListIndex    =    searchList.indexOf('    ')-    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
21	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  *  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  *  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increase,  text.length()  *  1);	  int    timeToLive    =    Math.max(increase,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
22	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increase,  text.length()  +  1);	  int    timeToLive    =    Math.max(increase,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
23	[BUG]  [BUGGY]  String[]  searchList  =  this.searchList.toString();  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  this.searchList.toString();  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  this.searchList.toString();	  String[]    searchList    =    buf.toString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
24	[BUG]  [BUGGY]  String[]  searchList  =  new  String[size()  ];  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[size()  ];  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  new  String[size()  ];	  String[]    searchList    =    buf.toString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
25	[BUG]  [BUGGY]  String[]  searchList  =  new  String[text.length()  ];  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[text.length()  ];  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  new  String[text.length()  ];	  String[]    searchList    =    buf.toString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
26	[BUG]  [BUGGY]  increase  =  Math.min(increase,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increase,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increase,  text.length());	  increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
27	[BUG]  [BUGGY]  increase  =  Math.min(increase,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increase,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increase,  searchList.length()  /  5);	  increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
28	[BUG]  [BUGGY]  increase  =  Math.max(increase,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increase,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increase,  searchList.length()  /  5);	  increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
29	[BUG]  [BUGGY]  increase  =  Math.max(0,  searchList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(0,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(0,  searchList.length());	  increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
30	[BUG]  [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(replaceEach,  searchList.length()  -  1);	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
31	[BUG]  [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(replaceEach,  searchList.length()  /  2);	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
32	[BUG]  [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(replaceEach,  searchList.length()  -  1);	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
33	[BUG]  [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(replaceEach,  searchList.length()  +  1);	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
34	[BUG]  [BUGGY]  if(repeat  &&  this.searchList.contains(text))  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  &&  this.searchList.contains(text))  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  &&  this.searchList.contains(text))  {	  if(repeat    ||    this.searchList.contains(text))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
35	[BUG]  [BUGGY]  if(this.searchList.contains(text))  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.searchList.contains(text))  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.searchList.contains(text))  {	  if(repeat    ||    this.searchList.contains(text))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
36	[BUG]  [BUGGY]  if(repeat  ||  this.searchList.containsKey(text))  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  this.searchList.containsKey(text))  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  this.searchList.containsKey(text))  {	  if(repeat    ||    this.searchList.contains(text))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
37	[BUG]  [BUGGY]  Math.min(adjust,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.min(adjust,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(adjust,  text.length()  -  1);	  Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
38	[BUG]  [BUGGY]  Math.min(0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  text.length()  -  1);	  Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  4);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  4);	  int    timeToLive    =    Math.max(searchList.length(),    2);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
40	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.repeat  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.repeat  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  this.repeat  +  1);	  int    timeToLive    =    Math.min(searchList.size(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
41	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  this.repeat);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  this.repeat);	  int    timeToLive    =    Math.min(searchList.size(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
42	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(repeat.size(),  this.repeat);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(repeat.size(),  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(repeat.size(),  this.repeat);	  int    timeToLive    =    Math.min(searchList.size(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
43	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.repeat  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.repeat  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  this.repeat  -  1);	  int    timeToLive    =    Math.min(searchList.size(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
44	[BUG]  [BUGGY]  if(repeat  ==  0  ||  result.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ==  0  ||  result.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ==  0  ||  result.length()  ==  0)  {	  if(repeat    >    0    ||    result.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
45	[BUG]  [BUGGY]  if(result.length()  >  0  ||  result.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(result.length()  >  0  ||  result.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(result.length()  >  0  ||  result.length()  ==  0)  {	  if(repeat    >    0    ||    result.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
46	[BUG]  [BUGGY]  if(repeat  >=  0  ||  result.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  >=  0  ||  result.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  >=  0  ||  result.length()  ==  0)  {	  if(repeat    >    0    ||    result.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
47	[BUG]  [BUGGY]  if(text.length()  ==  1)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  ==  1)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  ==  1)  {	  if(text.length()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
48	[BUG]  [BUGGY]  Math.max(0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.max(0,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  text.length()  -  1);	  Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
49	[BUG]  [BUGGY]  Math.max(0,  text.length()  -  3);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.max(0,  text.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  text.length()  -  3);	  Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
50	[BUG]  [BUGGY]  Math.max(0,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.max(0,  text.length()  -  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  text.length()  -  2);	  Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
51	[BUG]  [BUGGY]  Math.max(0,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.max(0,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  text.length()  /  5);	  Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
52	[BUG]  [BUGGY]  String[]  searchList  =  buf.toArray(new  String[buf.length()  ]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  buf.toArray(new  String[buf.length()  ]);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  buf.toArray(new  String[buf.length()  ]);	  String[]    searchList    =    buf.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
53	[BUG]  [BUGGY]  String[]  searchList  =  buf.toArray(new  String[searchList.size()  -  1]);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  buf.toArray(new  String[searchList.size()  -  1]);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  buf.toArray(new  String[searchList.size()  -  1]);	  String[]    searchList    =    buf.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
54	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList,  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList,  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf(searchList,  1);	  int    searchListIndex    =    this.searchList.indexOf(searchList);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
55	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList[0]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList[0]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf(searchList[0]);	  int    searchListIndex    =    this.searchList.indexOf(searchList);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
56	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList.length);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf(searchList.length);	  int    searchListIndex    =    this.searchList.indexOf(searchList);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
57	[BUG]  [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(replaceEach,  searchList.length()  /  2);	  increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
58	[BUG]  [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length()  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length()  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(replaceEach,  searchList.length()  +  1);	  increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
59	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.size()  -  2;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.size()  -  2;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.size()  -  2;	  int    searchListIndex    =    this.searchList.size();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
60	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.size()  +  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.size()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.size()  +  1;	  int    searchListIndex    =    this.searchList.size();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
61	[BUG]  [BUGGY]  int  searchList  =  getSearchList().size()  -  1;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  getSearchList().size()  -  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  getSearchList().size()  -  1;	  int    searchList    =    getSearchList().size();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
62	[BUG]  [BUGGY]  int  searchList  =  getSearchList().size()  +  1;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  getSearchList().size()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  getSearchList().size()  +  1;	  int    searchList    =    getSearchList().size();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
63	[BUG]  [BUGGY]  int  searchList  =  getSearchList().size()  -  2;  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  getSearchList().size()  -  2;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  getSearchList().size()  -  2;	  int    searchList    =    getSearchList().size();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
64	[BUG]  [BUGGY]  if(timeToLive  >=  1)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  >=  1)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  >=  1)  {	  if(timeToLive    >    1)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
65	[BUG]  [BUGGY]  if  (this.repeat!=  0)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if  (this.repeat!=  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if  (this.repeat!=  0)  {	  if    (this.repeat    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
66	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  5);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  5);	  int    timeToLive    =    Math.min(searchList.size(),    3);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
67	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  4);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  4);	  int    timeToLive    =    Math.min(searchList.size(),    3);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
68	[BUG]  [BUGGY]  String[]  searchList  =  replacementList.toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  replacementList.toArray(new  String[replacementList.size()  ]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  replacementList.toArray(new  String[replacementList.size()  ]);	  String[]    searchList    =    searchList.toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
69	[BUG]  [BUGGY]  String[]  searchList  =  new  String[replacementList.size()  ];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[replacementList.size()  ];  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  new  String[replacementList.size()  ];	  String[]    searchList    =    searchList.toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
70	[BUG]  [BUGGY]  String[]  searchList  =  this.searchList.toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  this.searchList.toArray(new  String[replacementList.size()  ]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  this.searchList.toArray(new  String[replacementList.size()  ]);	  String[]    searchList    =    searchList.toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
71	[BUG]  [BUGGY]  String[]  searchList  =  replaceList.toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  replaceList.toArray(new  String[replacementList.size()  ]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  replaceList.toArray(new  String[replacementList.size()  ]);	  String[]    searchList    =    searchList.toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
72	[BUG]  [BUGGY]  if(repeat  ||  timeToLive)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  timeToLive)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  timeToLive)  {	  if(repeat    ||    repeat)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
73	[BUG]  [BUGGY]  if(repeat  ||  this.repeat)  {  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  this.repeat)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  this.repeat)  {	  if(repeat    ||    repeat)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
74	[BUG]  [BUGGY]  if(repeat  ||  repeat  ||  timeToLive)  {  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  repeat  ||  timeToLive)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  repeat  ||  timeToLive)  {	  if(repeat    ||    repeat)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
75	[BUG]  [BUGGY]  if(repeat  &&  repeat)  {  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  &&  repeat)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  &&  repeat)  {	  if(repeat    ||    repeat)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
76	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  size);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  size);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  size);	  int    timeToLive    =    Math.max(searchList.length(),    size);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
77	[BUG]  [BUGGY]  if(text.length()  ==  5)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  ==  5)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  ==  5)  {	  if(text.length()    >    5)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
78	[BUG]  [BUGGY]  if(timeToLive  >=  3)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  >=  3)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  >=  3)  {	  if(timeToLive    >    3)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
79	[BUG]  [BUGGY]  if(timeToLive  ==  3)  {  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  ==  3)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  ==  3)  {	  if(timeToLive    >    3)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
80	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf(':')/  1;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  searchList.indexOf(':')/  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf(':')/  1;	  int    searchListIndex    =    searchList.indexOf(':')-    1;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
81	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(':')-  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(':')-  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf(':')-  1;	  int    searchListIndex    =    searchList.indexOf(':')-    1;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
82	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf(':',  0)-  1;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  searchList.indexOf(':',  0)-  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf(':',  0)-  1;	  int    searchListIndex    =    searchList.indexOf(':')-    1;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
83	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList();  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  getReplacementList();	  String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
84	[BUG]  [BUGGY]  String[]  searchList  =  getReplaceList();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplaceList();  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  getReplaceList();	  String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
85	[BUG]  [BUGGY]  long  searchListIndex  =  this.searchList.size();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  long  searchListIndex  =  this.searchList.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  searchListIndex  =  this.searchList.size();	  int    searchListIndex    =    this.searchList.size()    -    1;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
86	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(text.length(),  increase);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(text.length(),  increase);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(text.length(),  increase);	  int    timeToLive    =    Math.max(text.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
87	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  increase  +  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  increase  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  increase  +  1);	  int    timeToLive    =    Math.max(text.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
88	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  1);	  int    timeToLive    =    Math.max(text.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
89	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(repeat,  text.length());	  int    timeToLive    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
90	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(repeat,  text.length()  -  1);	  int    timeToLive    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
91	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(repeat,  text.length()  -  1);	  int    timeToLive    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
92	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  text.length());	  int    timeToLive    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
93	[BUG]  [BUGGY]  if(!this.repeat)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(!this.repeat)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(!this.repeat)  {	  if(this.repeat)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
94	[BUG]  [BUGGY]  if(this.repeat  ||  this.timeToLive)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  ||  this.timeToLive)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  ||  this.timeToLive)  {	  if(this.repeat)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
95	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  3);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  3);	  int    timeToLive    =    Math.min(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
96	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  increase  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  increase  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  increase  +  1);	  int    timeToLive    =    Math.min(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
97	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  1);	  int    timeToLive    =    Math.min(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.increment);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.increment);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  this.increment);	  int    timeToLive    =    Math.min(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.time  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.time  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  this.time  +  1);	  int    timeToLive    =    Math.min(searchList.size(),    this.time);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
100	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.time  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.time  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  this.time  -  1);	  int    timeToLive    =    Math.min(searchList.size(),    this.time);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
101	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  this.time);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  this.time);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  this.time);	  int    timeToLive    =    Math.min(searchList.size(),    this.time);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
102	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(this.time.size(),  searchList.size());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(this.time.size(),  searchList.size());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(this.time.size(),  searchList.size());	  int    timeToLive    =    Math.min(searchList.size(),    this.time);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
103	[BUG]  [BUGGY]  if(this.repeat  >  0  &&  this.searchList.isEmpty())  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  >  0  &&  this.searchList.isEmpty())  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >  0  &&  this.searchList.isEmpty())  {	  if(this.repeat    >    0    ||    this.searchList.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
104	[BUG]  [BUGGY]  if(this.repeat  >=  0  ||  this.searchList.isEmpty())  {  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  >=  0  ||  this.searchList.isEmpty())  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >=  0  ||  this.searchList.isEmpty())  {	  if(this.repeat    >    0    ||    this.searchList.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
105	[BUG]  [BUGGY]  if(this.repeat  ==  0  ||  this.searchList.isEmpty())  {  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  ==  0  ||  this.searchList.isEmpty())  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  ==  0  ||  this.searchList.isEmpty())  {	  if(this.repeat    >    0    ||    this.searchList.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
106	[BUG]  [BUGGY]  int  searchListIndex  =  this.list.size();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.list.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.list.size();	  int    searchListIndex    =    list.size();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
107	[BUG]  [BUGGY]  int  searchListIndex  =  list.size()  -  1;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  list.size()  -  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  list.size()  -  1;	  int    searchListIndex    =    list.size();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
108	[BUG]  [BUGGY]  int  searchListIndex  =  list.size()  -  2;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  list.size()  -  2;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  list.size()  -  2;	  int    searchListIndex    =    list.size();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
109	[BUG]  [BUGGY]  int  searchList  =  this.replaceList.size()  -  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  this.replaceList.size()  -  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.replaceList.size()  -  1;	  int    searchList    =    this.replaceList.size();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
110	[BUG]  [BUGGY]  int  searchList  =  this.replaceList.size()  -  2;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  this.replaceList.size()  -  2;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.replaceList.size()  -  2;	  int    searchList    =    this.replaceList.size();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
111	[BUG]  [BUGGY]  int  searchList  =  this.replaceList.size()  +  1;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  this.replaceList.size()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.replaceList.size()  +  1;	  int    searchList    =    this.replaceList.size();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
112	[BUG]  [BUGGY]  Math.min(0,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  searchList.length()  -  1);	  Math.min(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
113	[BUG]  [BUGGY]  Math.min(0,  searchList.length()  -  3);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  searchList.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  searchList.length()  -  3);	  Math.min(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
114	[BUG]  [BUGGY]  Math.min(0,  searchList.length()  -  2);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  searchList.length()  -  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  searchList.length()  -  2);	  Math.min(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
115	[BUG]  [BUGGY]  if(repeat  ||  result.length()  >  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  result.length()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  result.length()  >  0)  {	  if(repeat    &&    result.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
116	[BUG]  [BUGGY]  if(repeat  ||  repeat.length()  >  0)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  repeat.length()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  repeat.length()  >  0)  {	  if(repeat    &&    result.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
117	[BUG]  [BUGGY]  if(result.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(result.length()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(result.length()  >  0)  {	  if(repeat    &&    result.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
118	[BUG]  [BUGGY]  if(text.length()  ==  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  ==  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  ==  0  ||  text.charAt(text.length()  -  1)!=  'n')  {	  if(text.length()    >    0    ||    text.charAt(text.length()    -    1)!=    'n')    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
119	[BUG]  [BUGGY]  if(text.length()  >=  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  >=  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >=  0  ||  text.charAt(text.length()  -  1)!=  'n')  {	  if(text.length()    >    0    ||    text.charAt(text.length()    -    1)!=    'n')    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
120	[BUG]  [BUGGY]  if(text.length()!=  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()!=  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()!=  0  ||  text.charAt(text.length()  -  1)!=  'n')  {	  if(text.length()    >    0    ||    text.charAt(text.length()    -    1)!=    'n')    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
121	[BUG]  [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replacement,  searchList.length()  -  1);	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
122	[BUG]  [BUGGY]  Increase  =  Math.min(replacement,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.min(replacement,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.min(replacement,  searchList.length()  -  1);	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
123	[BUG]  [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  +  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replacement,  searchList.length()  +  1);	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
124	[BUG]  [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replacement,  searchList.length()  /  2);	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
125	[BUG]  [BUGGY]  Math.max(increase,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.max(increase,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increase,  text.length()  /  5);	  Math.max(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
126	[BUG]  [BUGGY]  Math.min(increase,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increase,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  text.length()  -  1);	  Math.max(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
127	[BUG]  [BUGGY]  if(this.timeToLive)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.timeToLive)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.timeToLive)  {	  if(timeToLive)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
128	[BUG]  [BUGGY]  if(repete)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(repete)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repete)  {	  if(timeToLive)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
129	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  -  1);	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
130	[BUG]  [BUGGY]  increase  =  Math.max(increment,  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increment,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increment,  text.length());	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
131	[BUG]  [BUGGY]  increase  =  Math.max(increment,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increment,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increment,  searchList.length()  -  1);	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
132	[BUG]  [BUGGY]  increase  =  Math.max(increment,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increment,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increment,  searchList.length()  /  5);	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
133	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length()  /  2);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increase,  text.length()  /  2);	  int    timeToLive    =    Math.max(increase,    text.length()    /    2);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
134	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  *  2);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  *  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increase,  text.length()  *  2);	  int    timeToLive    =    Math.max(increase,    text.length()    /    2);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
135	[BUG]  [BUGGY]  int  searchListIndex  =  _searchList.size()  -  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  _searchList.size()  -  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  _searchList.size()  -  1;	  int    searchListIndex    =    _searchList.size();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
136	[BUG]  [BUGGY]  int  searchListIndex  =  _searchList.size()  +  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  _searchList.size()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  _searchList.size()  +  1;	  int    searchListIndex    =    _searchList.size();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
137	[BUG]  [BUGGY]  int  searchListIndex  =  _searchList.size()  -  2;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  _searchList.size()  -  2;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  _searchList.size()  -  2;	  int    searchListIndex    =    _searchList.size();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
138	[BUG]  [BUGGY]  if(!repeat  &&  result.length()  >  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(!repeat  &&  result.length()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(!repeat  &&  result.length()  >  0)  {	  if(!repeat)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
139	[BUG]  [BUGGY]  if(!repeat  &&  isEmpty())  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(!repeat  &&  isEmpty())  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(!repeat  &&  isEmpty())  {	  if(!repeat)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
140	[BUG]  [BUGGY]  if(!repeat  &&  isEmpty(text))  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(!repeat  &&  isEmpty(text))  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(!repeat  &&  isEmpty(text))  {	  if(!repeat)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
141	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  increase  +  3);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  increase  +  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  increase  +  3);	  int    timeToLive    =    Math.max(searchList.length(),    increase    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
142	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  5);	  int    timeToLive    =    Math.max(searchList.length(),    3);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
143	[BUG]  [BUGGY]  Math.min(increment,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  text.length()  /  5);	  Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
144	[BUG]  [BUGGY]  Math.min(increment,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  text.length()  -  1);	  Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
145	[BUG]  [BUGGY]  Math.min(increment,  text.length()  -  3);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  text.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  text.length()  -  3);	  Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
146	[BUG]  [BUGGY]  Math.min(increment,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  text.length()  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  text.length()  +  1);	  Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
147	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  -  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(0,  text.length()  -  2);	  int    timeToLive    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
148	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(0,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(0,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(0,  text.length());	  int    timeToLive    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
149	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(1,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(1,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(1,  text.length());	  int    timeToLive    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
150	[BUG]  [BUGGY]  Math.max(3  *  increase,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.max(3  *  increase,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(3  *  increase,  text.length());	  Math.max(1    *    increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
151	[BUG]  [BUGGY]  Math.max(1  *  greater,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.max(1  *  greater,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(1  *  greater,  text.length());	  Math.max(1    *    increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
152	[BUG]  [BUGGY]  Math.max(2  *  increase,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.max(2  *  increase,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(2  *  increase,  text.length());	  Math.max(1    *    increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
153	[BUG]  [BUGGY]  increase  =  Math.max(increase,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increase,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increase,  text.length());	  increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
154	[BUG]  [BUGGY]  increase  =  Math.max(increase,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increase,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increase,  searchList.length()  -  1);	  increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
155	[BUG]  [BUGGY]  increase  =  Math.min(increment,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increment,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increment,  searchList.length()  /  5);	  increase    =    Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
156	[BUG]  [BUGGY]  increase  =  Math.min(increment,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increment,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increment,  text.length());	  increase    =    Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
157	[BUG]  [BUGGY]  increase  =  Math.min(increment,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increment,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increment,  searchList.length()  -  1);	  increase    =    Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
158	[BUG]  [BUGGY]  increase  =  Math.max(repeat,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(repeat,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(repeat,  searchList.length()  -  1);	  increase    =    Math.max(repeat,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
159	[BUG]  [BUGGY]  increase  =  Math.min(repeat,  searchList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(repeat,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(repeat,  searchList.length());	  increase    =    Math.max(repeat,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
160	[BUG]  [BUGGY]  increase  =  Math.min(repeat,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(repeat,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(repeat,  searchList.length()  -  1);	  increase    =    Math.max(repeat,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
161	[BUG]  [BUGGY]  if(timeToLive  ==  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  ==  0)  {	  if(repeat    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
162	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(0,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(0,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(0,  text.length());	  long    timeToLive    =    Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
163	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  increment);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  increment);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  increment);	  int    timeToLive    =    Math.max(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
164	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increment,  text.length()  -  1);	  int    timeToLive    =    Math.max(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
165	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increment,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(increment,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increment,  text.length()  -  1);	  int    timeToLive    =    Math.max(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
166	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
167	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }  else  {  increase  =  Math.max(0,  searchList.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }  else  {  increase  =  Math.max(0,  searchList.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }  else  {  increase  =  Math.max(0,  searchList.length()  -  1);  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
168	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
169	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  +  1);  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  +  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  +  1);  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
170	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  text.length());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  text.length());	  int    timeToLive    =    Math.min(searchList.size()    -    1,    text.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
171	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  /  1,  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  /  1,  text.length());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size()  /  1,  text.length());	  int    timeToLive    =    Math.min(searchList.size()    -    1,    text.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
172	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  -  1,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  -  1,  text.length()  -  1);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size()  -  1,  text.length()  -  1);	  int    timeToLive    =    Math.min(searchList.size()    -    1,    text.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
173	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  text.length());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  text.length());	  int    timeToLive    =    Math.min(searchList.size()    -    1,    text.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
174	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  +  1,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  +  1,  searchList.length()  -  1);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length()  +  1,  searchList.length()  -  1);	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
175	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  searchList.length());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  searchList.length());	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
176	[BUG]  [BUGGY]  String  searchList  =  searchList.size();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  searchList  =  searchList.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String  searchList  =  searchList.size();	  char    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
177	[BUG]  [BUGGY]  String  searchList  =  list.size();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  searchList  =  list.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String  searchList  =  list.size();	  char    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
178	[BUG]  [BUGGY]  char  searchList  =  this.searchList.size();  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  char  searchList  =  this.searchList.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	char  searchList  =  this.searchList.size();	  char    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
179	[BUG]  [BUGGY]  Math.min(0,  text.length()  -  3);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  text.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  text.length()  -  3);	  Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
180	[BUG]  [BUGGY]  Math.min(0,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  text.length()  /  5);	  Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
181	[BUG]  [BUGGY]  Math.min(0,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  text.length()  -  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  text.length()  -  2);	  Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
182	[BUG]  [BUGGY]  if(this.timeToLive  >=  0)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.timeToLive  >=  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.timeToLive  >=  0)  {	  if(timeToLive    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
183	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.repeat  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.repeat  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  this.repeat  +  1);	  int    timeToLive    =    Math.max(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
184	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(repeat.length(),  this.repeat);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(repeat.length(),  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(repeat.length(),  this.repeat);	  int    timeToLive    =    Math.max(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
185	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(this.repeat.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(this.repeat.length(),  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(this.repeat.length(),  searchList.length());	  int    timeToLive    =    Math.max(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
186	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(text.length(),  increment);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(text.length(),  increment);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(text.length(),  increment);	  int    timeToLive    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
187	[BUG]  [BUGGY]  Integer  searchListIndex  =  searchList.size();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Integer  searchListIndex  =  searchList.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Integer  searchListIndex  =  searchList.size();	  long    searchListIndex    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
188	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  searchList.size());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  searchList.size());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  searchList.size());	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
189	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  +  1,  searchList.size()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  +  1,  searchList.size()  -  1);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size()  +  1,  searchList.size()  -  1);	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
190	[BUG]  [BUGGY]  if(timeToLive  <  1)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  <  1)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  <  1)  {	  if(timeToLive    <    3)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
191	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.repeat  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.repeat  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  this.repeat  +  1);	  int    timeToLive    =    Math.min(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
192	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(repeat.length(),  this.repeat);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(repeat.length(),  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(repeat.length(),  this.repeat);	  int    timeToLive    =    Math.min(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
193	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  maximum);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  maximum);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  maximum);	  int    timeToLive    =    Math.max(searchList.length(),    maximum);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
194	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(repeat,  searchList.length(),  maximum);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(repeat,  searchList.length(),  maximum);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(repeat,  searchList.length(),  maximum);	  int    timeToLive    =    Math.max(searchList.length(),    maximum);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
195	[BUG]  [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replaceEach,  searchList.length()  -  1);	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
196	[BUG]  [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length()  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length()  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replaceEach,  searchList.length()  +  1);	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
197	[BUG]  [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replaceEach,  searchList.length()  /  2);	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
198	[BUG]  [BUGGY]  Increase  =  Math.min(replaceEach,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.min(replaceEach,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.min(replaceEach,  searchList.length()  -  1);	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
199	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  size  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  size  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  size  -  1);	  int    timeToLive    =    Math.min(searchList.size(),    size);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
200	[BUG]  [BUGGY]  int  searchList  =  this.searchList.size()  -  1;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  this.searchList.size()  -  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.searchList.size()  -  1;	  int    searchList    =    this.searchList.size();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
201	[BUG]  [BUGGY]  int  searchList  =  this.searchList.size()  -  2;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  this.searchList.size()  -  2;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.searchList.size()  -  2;	  int    searchList    =    this.searchList.size();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
202	[BUG]  [BUGGY]  int  searchList  =  this.searchList.size()  +  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  this.searchList.size()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.searchList.size()  +  1;	  int    searchList    =    this.searchList.size();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
203	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
204	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length());	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
205	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  -  1);  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
206	[BUG]  [BUGGY]  Math.max(0,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.max(0,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  searchList.length()  -  1);	  Math.max(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
207	[BUG]  [BUGGY]  Math.max(0,  searchList.length()  -  3);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.max(0,  searchList.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  searchList.length()  -  3);	  Math.max(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
208	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  /  5);	  Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
209	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  -  3);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  -  3);	  Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
210	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  +  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  +  1);	  Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
211	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  searchList.length()  -  1);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  searchList.length()  -  1);	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
212	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  3);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  3);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  3);	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
213	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  2);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  2);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  2);	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
214	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  -  1);  }	  Math.min(increase,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
215	[BUG]  [BUGGY]  Math.min(increase,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increase,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length());	  Math.min(increase,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
216	[BUG]  [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  /  2);  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  /  2);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList.length()  >  0)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  System.arraycopy(searchList,  0,  increase,  text.length()  /  2);  }	  Math.min(increase,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
217	[BUG]  [BUGGY]  if(timeToLive  <  0)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  <  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  <  0)  {	  if(timeToLive    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
218	[BUG]  [BUGGY]  Math.min(increase,  text.length()  -  3);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increase,  text.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  text.length()  -  3);	  Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
219	[BUG]  [BUGGY]  if(text.length()  ==  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  ==  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  ==  0  ||  text.charAt(text.length()  -  1)!=  '/')  {	  if(text.length()    >    0    ||    text.charAt(text.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
220	[BUG]  [BUGGY]  if(text.length()!=  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()!=  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()!=  0  ||  text.charAt(text.length()  -  1)!=  '/')  {	  if(text.length()    >    0    ||    text.charAt(text.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
221	[BUG]  [BUGGY]  if(text.length()  >=  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  >=  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >=  0  ||  text.charAt(text.length()  -  1)!=  '/')  {	  if(text.length()    >    0    ||    text.charAt(text.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
222	[BUG]  [BUGGY]  Math.min(increase,  searchList.length()  -  3);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increase,  searchList.length()  -  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  searchList.length()  -  3);	  Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
223	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  /  5);  increase  =  Math.max(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  /  5);  increase  =  Math.max(increase,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  /  5);  increase  =  Math.max(increase,  searchList.length());	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
224	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  -  1);  increase  =  Math.max(increase,  searchList.length()  -  1);	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
225	[BUG]  [BUGGY]  increase  =  Math.min(searchList.length(),  replaceEach);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(searchList.length(),  replaceEach);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(searchList.length(),  replaceEach);	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
226	[BUG]  [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(replaceEach,  searchList.length()  /  5);	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
227	[BUG]  [BUGGY]  increase  =  Math.min(searchList.length(),  replacementEach);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(searchList.length(),  replacementEach);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(searchList.length(),  replacementEach);	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
228	[BUG]  [BUGGY]  Math.min(increase,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increase,  text.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  text.length()  /  4);	  Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
229	[BUG]  [BUGGY]  if(text.length()  >=  1)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  >=  1)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >=  1)  {	  if(text.length()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
230	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  /  5);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  /  5);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  /  5);  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
231	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  -  1);  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
232	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
233	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  /  10);  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  /  10);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length()  /  10);  }	  Math.min(increase,    searchList.length());    increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
234	[BUG]  [BUGGY]  increase  =  Math.max(searchList.length(),  repeat);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(searchList.length(),  repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(searchList.length(),  repeat);	  increase    =    Math.max(repeat,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
235	[BUG]  [BUGGY]  increase  =  Math.max(repeat,  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(repeat,  searchList.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(repeat,  searchList.length()  /  2);	  increase    =    Math.max(repeat,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
236	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }	  Math.min(increase,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
237	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  /  5);  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  /  5);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  /  5);  }	  Math.min(increase,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
238	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  -  1);  }	  Math.min(increase,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
239	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf(':',  text.length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  searchList.indexOf(':',  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf(':',  text.length()  -  1);	  int    searchListIndex    =    searchList.indexOf(':')-    1;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
240	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increase,  text.length()  /  4);	  int    timeToLive    =    Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
241	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  /  2);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(0,  text.length()  /  2);	  int    timeToLive    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
242	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(0,  text.length()  /  5);	  int    timeToLive    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
243	[BUG]  [BUGGY]  Math.max(0,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.max(0,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  searchList.length()  /  5);	  Math.max(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
244	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  /  2);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  /  2);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  /  2);	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
245	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increase,  text.length()  /  4);	  int    timeToLive    =    Math.max(increase,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
246	[BUG]  [BUGGY]  increase  =  Math.max(searchList.length(),  increase);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(searchList.length(),  increase);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(searchList.length(),  increase);	  increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
247	[BUG]  [BUGGY]  Math.min(searchList.length(),  increase  /  3);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(searchList.length(),  increase  /  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.length(),  increase  /  3);	  Math.min(searchList.length(),    increase    /    5);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
248	[BUG]  [BUGGY]  Math.min(increment,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  text.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  text.length()  /  4);	  Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
249	[BUG]  [BUGGY]  Math.max(increment,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.max(increment,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increment,  text.length()  /  5);	  Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
250	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.repeat  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.repeat  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  this.repeat  -  1);	  int    timeToLive    =    Math.max(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
251	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(searchList.length(),  this.repeat);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(searchList.length(),  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(searchList.length(),  this.repeat);	  int    timeToLive    =    Math.max(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
252	[BUG]  [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[searchList.size()  -  1]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[searchList.size()  -  1]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  searchList.toArray(new  String[searchList.size()  -  1]);	  String[]    searchList    =    searchList.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
253	[BUG]  [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[this.searchList.size()  ]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[this.searchList.size()  ]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  searchList.toArray(new  String[this.searchList.size()  ]);	  String[]    searchList    =    searchList.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
254	[BUG]  [BUGGY]  String[]  searchList  =  new  String[buf.length()  ];  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[buf.length()  ];  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  new  String[buf.length()  ];	  String[]    searchList    =    buf.toString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
255	[BUG]  [BUGGY]  String[]  searchList  =  buf.toString()  +  1;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  buf.toString()  +  1;  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  buf.toString()  +  1;	  String[]    searchList    =    buf.toString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
256	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length()  /  2);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(increase,  text.length()  /  2);	  long    timeToLive    =    Math.max(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	82	None	replace
257	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  size  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  size  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  size  -  1);	  int    timeToLive    =    Math.max(searchList.length(),    size);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
258	[BUG]  [BUGGY]  Math.max(increase,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.max(increase,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increase,  searchList.length()  /  5);	  Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
259	[BUG]  [BUGGY]  Math.max(searchList.length(),  increase);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.max(searchList.length(),  increase);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(searchList.length(),  increase);	  Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
260	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList,  0);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList,  0);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf(searchList,  0);	  int    searchListIndex    =    this.searchList.indexOf(searchList);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
261	[BUG]  [BUGGY]  Math.max(increase,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.max(increase,  text.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increase,  text.length()  /  4);	  Math.max(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
262	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(searchList.size(),  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(searchList.size(),  text.length());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.min(searchList.size(),  text.length());	  int    timeToLive    =    Math.min(searchList.size()    -    1,    text.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
263	[BUG]  [BUGGY]  Increase  =  Math.max(searchList.length(),  replaceEach);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(searchList.length(),  replaceEach);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(searchList.length(),  replaceEach);	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
264	[BUG]  [BUGGY]  Increase  =  Math.max(searchList.length(),  replacementEach);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(searchList.length(),  replacementEach);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(searchList.length(),  replacementEach);	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
265	[BUG]  [BUGGY]  if(repeat  ||  isEachEach())  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  isEachEach())  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  isEachEach())  {	  if(repeat    ||    repeat)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
266	[BUG]  [BUGGY]  String[]  searchList  =  buf.toArray(new  String[buf.size()  ]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  buf.toArray(new  String[buf.size()  ]);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  buf.toArray(new  String[buf.size()  ]);	  String[]    searchList    =    buf.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
267	[BUG]  [BUGGY]  if(timeToLive  ==  1)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  ==  1)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  ==  1)  {	  if(timeToLive    >    1)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
268	[BUG]  [BUGGY]  if(text.length()  >=  5)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  >=  5)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >=  5)  {	  if(text.length()    >    5)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
269	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList(true);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList(true);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  getSearchList(true);	  String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
270	[BUG]  [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replacement,  searchList.length()  /  5);	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
271	[BUG]  [BUGGY]  if(repeat  >  0  &&  result.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  >  0  &&  result.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  >  0  &&  result.length()  ==  0)  {	  if(repeat    >    0    ||    result.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
272	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  /  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(0,  text.length()  /  1);	  int    timeToLive    =    Math.max(0,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
273	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  increase  +  2);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  increase  +  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  increase  +  2);	  int    timeToLive    =    Math.max(searchList.length(),    increase    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
274	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(increase,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(increase,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.min(increase,  text.length()  /  5);	  long    timeToLive    =    Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
275	[BUG]  [BUGGY]  if(this.repeat  ||  this.searchList.contains(text))  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  ||  this.searchList.contains(text))  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  ||  this.searchList.contains(text))  {	  if(repeat    ||    this.searchList.contains(text))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
276	[BUG]  [BUGGY]  increase  =  Math.min(searchList.length(),  increase);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(searchList.length(),  increase);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(searchList.length(),  increase);	  increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
277	[BUG]  [BUGGY]  increase  =  Math.min(increase,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increase,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increase,  searchList.length()  -  1);	  increase    =    Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
278	[BUG]  [BUGGY]  increase  =  Math.min(increment,  searchList.length()  /  4);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increment,  searchList.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increment,  searchList.length()  /  4);	  increase    =    Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
279	[BUG]  [BUGGY]  increase  =  Math.min(increment,  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(increment,  searchList.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increment,  searchList.length()  /  2);	  increase    =    Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
280	[BUG]  [BUGGY]  if(repeat  &&  result.length()  >  3)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  &&  result.length()  >  3)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  &&  result.length()  >  3)  {	  if(repeat    &&    result.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
281	[BUG]  [BUGGY]  if(repeat  &&  result.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  &&  result.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  &&  result.length()  ==  0)  {	  if(repeat    &&    result.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
282	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  /  2);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  /  2);	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
283	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ',  searchList.length)-  1;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ',  searchList.length)-  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf('  ',  searchList.length)-  1;	  int    searchListIndex    =    searchList.indexOf('    ')-    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
284	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  /  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  /  1);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  /  1);	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
285	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size())-  1;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size())-  1;  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.size())-  1;	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
286	[BUG]  [BUGGY]  Math.min(0,  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  searchList.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  searchList.length()  /  5);	  Math.min(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
287	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length()  /  5);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increment,  text.length()  /  5);	  int    timeToLive    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
288	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increment,  text.length()  /  4);	  int    timeToLive    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
289	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(searchList.size(),  this.repeat);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(searchList.size(),  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.min(searchList.size(),  this.repeat);	  int    timeToLive    =    Math.min(searchList.size(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
290	[BUG]  [BUGGY]  Math.min(0,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.min(0,  text.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  text.length()  /  4);	  Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
291	[BUG]  [BUGGY]  Math.min(searchList.length(),  increment);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(searchList.length(),  increment);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.length(),  increment);	  Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
292	[BUG]  [BUGGY]  Math.min(increment,  searchList.length()  /  4);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increment,  searchList.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length()  /  4);	  Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
293	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(searchList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(searchList.length(),  searchList.length());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.min(searchList.length(),  searchList.length());	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
294	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  +  1,  searchList.length());  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  +  1,  searchList.length());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length()  +  1,  searchList.length());	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
295	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.repeat  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.repeat  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  this.repeat  -  1);	  int    timeToLive    =    Math.min(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
296	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(searchList.length(),  this.repeat);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(searchList.length(),  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.min(searchList.length(),  this.repeat);	  int    timeToLive    =    Math.min(searchList.length(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
297	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length()  /  2);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(repeat,  text.length()  /  2);	  int    timeToLive    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
298	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.size()  /  2;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.size()  /  2;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.size()  /  2;	  int    searchListIndex    =    this.searchList.size();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
299	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  2);	  int    timeToLive    =    Math.min(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
300	[BUG]  [BUGGY]  short  searchListIndex  =  searchList.size();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  short  searchListIndex  =  searchList.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	short  searchListIndex  =  searchList.size();	  long    searchListIndex    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
301	[BUG]  [BUGGY]  if(!repeat  &&  result.equals( " "))  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(!repeat  &&  result.equals( " "))  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(!repeat  &&  result.equals( " "))  {	  if(!repeat)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
302	[BUG]  [BUGGY]  if(!repeat  &&  result.length  >  0)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(!repeat  &&  result.length  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(!repeat  &&  result.length  >  0)  {	  if(!repeat)    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
303	[BUG]  [BUGGY]  Math.min(increase,  searchList.length()  /  4);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.min(increase,  searchList.length()  /  4);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  searchList.length()  /  4);	  Math.min(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
304	[BUG]  [BUGGY]  if(this.repeat  >  0  ||  this.searchList.size()  >  1)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  >  0  ||  this.searchList.size()  >  1)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >  0  ||  this.searchList.size()  >  1)  {	  if(this.repeat    >    0    ||    this.searchList.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
305	[BUG]  [BUGGY]  if(this.repeat  ||  this.searchList.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  ||  this.searchList.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  ||  this.searchList.length()  ==  0)  {	  if(this.repeat)    {    	non-compiled	[CE]  <identifier>  expected	30	None	replace
306	[BUG]  [BUGGY]  String  searchList  =  searchingList.size();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  searchList  =  searchingList.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String  searchList  =  searchingList.size();	  char    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
307	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  3);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  3);	  int    timeToLive    =    Math.max(text.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
308	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  size);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  size);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  size);	  int    timeToLive    =    Math.max(text.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
309	[BUG]  [BUGGY]  String[]  searchList  =  replacementList.toArray(new  String[searchList.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  replacementList.toArray(new  String[searchList.size()  ]);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  replacementList.toArray(new  String[searchList.size()  ]);	  String[]    searchList    =    searchList.toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
310	[BUG]  [BUGGY]  increase  =  Math.max(searchList.length(),  replaceEach);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(searchList.length(),  replaceEach);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(searchList.length(),  replaceEach);	  increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
311	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  +  1);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  +  1);	  int    timeToLive    =    Math.min(searchList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
312	[BUG]  [BUGGY]  if(repeated)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(repeated)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeated)  {	  if(timeToLive)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
313	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  -  1,  this.repeat);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  -  1,  this.repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size()  -  1,  this.repeat);	  int    timeToLive    =    Math.min(searchList.size(),    this.repeat);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
314	[BUG]  [BUGGY]  String[]  searchList  =  text.toString();  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  text.toString();  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  text.toString();	  String[]    searchList    =    buf.toString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
315	[BUG]  [BUGGY]  if(this.timeToLive  >  1)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(this.timeToLive  >  1)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.timeToLive  >  1)  {	  if(timeToLive    >    1)    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
316	[BUG]  [BUGGY]  Math.min(searchList.length(),  greater);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.min(searchList.length(),  greater);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.length(),  greater);	  Math.min(searchList.length(),    increase    /    5);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
317	[BUG]  [BUGGY]  Math.max(increase,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.max(increase,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increase,  searchList.length()  -  1);	  Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
318	[BUG]  [BUGGY]  increase  =  Math.min(searchList.length(),  replacementList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(searchList.length(),  replacementList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(searchList.length(),  replacementList.length());	  increase    =    Math.min(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	73	None	replace
319	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(timeToLive,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(timeToLive,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(timeToLive,  text.length());	  long    timeToLive    =    Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
320	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  size);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  size);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  size);	  int    timeToLive    =    Math.min(searchList.size(),    size);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
321	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.length);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.length);	  int    timeToLive    =    Math.min(searchList.size(),    size);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
322	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  timeToLive);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  timeToLive);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  timeToLive);	  int    timeToLive    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
323	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(timeToLive,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(timeToLive,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(timeToLive,  text.length());	  int    timeToLive    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
324	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  increase  =  Math.max(0,  searchList.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  increase  =  Math.max(0,  searchList.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  increase  =  Math.max(0,  searchList.length()  -  1);  }	  Math.min(increase,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
325	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  greater);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  greater);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  greater);	  int    timeToLive    =    Math.min(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
326	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  greater);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  greater);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  greater);	  int    timeToLive    =    Math.min(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
327	[BUG]  [BUGGY]  if(text.length()  >  0  ||  text.charAt(text.length()  -  1)  ==  '/')  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  >  0  ||  text.charAt(text.length()  -  1)  ==  '/')  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >  0  ||  text.charAt(text.length()  -  1)  ==  '/')  {	  if(text.length()    >    0    ||    text.charAt(text.length()    -    1)!=    '/')    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
328	[BUG]  [BUGGY]  Math.max(1,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.max(1,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(1,  text.length());	  Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
329	[BUG]  [BUGGY]  Math.max(1,  searchList.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.max(1,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(1,  searchList.length());	  Math.max(0,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
330	[BUG]  [BUGGY]  if(increase  >=  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(increase  >=  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(increase  >=  0)  {	  if(repeat    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
331	[BUG]  [BUGGY]  if(text.length()  >  4)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(text.length()  >  4)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >  4)  {	  if(text.length()    >    3)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
332	[BUG]  [BUGGY]  increase  =  Math.max(increase,  searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increase,  searchList.length()  /  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increase,  searchList.length()  /  2);	  increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
333	[BUG]  [BUGGY]  if(timeToLive  >  5)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive  >  5)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  >  5)  {	  if(timeToLive    >    3)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
334	[BUG]  [BUGGY]  if(this.repeat  >  0  ||  this.searchList.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(this.repeat  >  0  ||  this.searchList.length()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >  0  ||  this.searchList.length()  >  0)  {	  if(this.repeat    >    0    ||    this.searchList.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
335	[BUG]  [BUGGY]  int  searchList  =  getReplacementList().size();  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  getReplacementList().size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  getReplacementList().size();	  int    searchList    =    getSearchList().size();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
336	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
337	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  increase  =  Math.max(increase,  searchList.length()  /  2);  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  increase  =  Math.max(increase,  searchList.length()  /  2);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  }  else  {  increase  =  Math.max(increase,  searchList.length()  /  2);  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
338	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  +  1);  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  +  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  +  1);  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
339	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length()  -  1);  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increase,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
340	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(searchList.length(),  maximum);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(searchList.length(),  maximum);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(searchList.length(),  maximum);	  int    timeToLive    =    Math.max(searchList.length(),    maximum);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
341	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.replacementList);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.replacementList);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  this.replacementList);	  int    timeToLive    =    Math.max(searchList.length(),    maximum);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
342	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(searchList.size(),  searchList.size());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(searchList.size(),  searchList.size());  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.min(searchList.size(),  searchList.size());	  int    timeToLive    =    Math.min(searchList.size(),    searchList.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
343	[BUG]  [BUGGY]  String  searchList  =  this.searchList.size();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  searchList  =  this.searchList.size();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String  searchList  =  this.searchList.size();	  char    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
344	[BUG]  [BUGGY]  int  searchList  =  this.replaceList.size()  -  3;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  searchList  =  this.replaceList.size()  -  3;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.replaceList.size()  -  3;	  int    searchList    =    this.replaceList.size();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
345	[BUG]  [BUGGY]  Increase  =  Math.max(repeat,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(repeat,  searchList.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(repeat,  searchList.length()  -  1);	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
346	[BUG]  [BUGGY]  Increase  =  Math.min(replaceEach,  searchList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.min(replaceEach,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.min(replaceEach,  searchList.length());	  Increase    =    Math.max(replaceEach,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
347	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  greater  +  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  greater  +  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  greater  +  1);	  int    timeToLive    =    Math.max(searchList.length(),    increase    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
348	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  2);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  2);	  int    timeToLive    =    Math.min(searchList.size(),    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
349	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  3);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList.size(),  3);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.size(),  3);	  int    timeToLive    =    Math.min(searchList.size(),    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
350	[BUG]  [BUGGY]  if(repeat  ||  repeat  ||  result.length()  >  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  repeat  ||  result.length()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  repeat  ||  result.length()  >  0)  {	  if(repeat    &&    result.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
351	[BUG]  [BUGGY]  if(repeat  &&  result.length()  >  5)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  &&  result.length()  >  5)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  &&  result.length()  >  5)  {	  if(repeat    &&    result.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
352	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(')');  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(')');  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf(')');	  int    searchListIndex    =    this.searchList.size()    -    1;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
353	[BUG]  [BUGGY]  Increase  =  Math.max(replacement,  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replacement,  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replacement,  text.length());	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
354	[BUG]  [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  -  2);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.max(replacement,  searchList.length()  -  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replacement,  searchList.length()  -  2);	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
355	[BUG]  [BUGGY]  Increase  =  Math.min(searchList.length(),  replacementList.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Increase  =  Math.min(searchList.length(),  replacementList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.min(searchList.length(),  replacementList.length());	  Increase    =    Math.max(replacement,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	89	None	replace
356	[BUG]  [BUGGY]  if(repeat  ||  isEachable())  {  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  isEachable())  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  isEachable())  {	  if(repeat    ||    repeat)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
357	[BUG]  [BUGGY]  if(repeat  ||  searchList.size()  >  0)  {  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  ||  searchList.size()  >  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  searchList.size()  >  0)  {	  if(repeat    ||    repeat)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
358	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ',  searchList.length  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ',  searchList.length  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf('  ',  searchList.length  -  1);	  int    searchListIndex    =    searchList.indexOf('    ')-    1;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
359	[BUG]  [BUGGY]  increase  =  Math.max(increment,  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(increment,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increment,  searchList.length());	  increase    =    Math.min(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
360	[BUG]  [BUGGY]  if(increase  ==  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(increase  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(increase  ==  0)  {	  if(repeat    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
361	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  2);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  2);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  2);	  int    timeToLive    =    Math.max(text.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
362	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.size()  -  3;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  searchListIndex  =  this.searchList.size()  -  3;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.size()  -  3;	  int    searchListIndex    =    this.searchList.size();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
363	[BUG]  [BUGGY]  Math.min(searchList.size(),  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.min(searchList.size(),  text.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.size(),  text.length());	  Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
364	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length());  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length());  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length());  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
365	[BUG]  [BUGGY]  int  increase  =  Math.max(increment,  searchList.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  increase  =  Math.max(increment,  searchList.length());  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  increase  =  Math.max(increment,  searchList.length());	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
366	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length()  +  1);  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length()  +  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length()  +  1);  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
367	[BUG]  [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length()  -  1);  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length()  -  1);  }  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(searchList!=  null)  {  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length()  -  1);  }	  Math.min(increment,    searchList.length());    increase    =    Math.max(increment,    searchList.length());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
368	[BUG]  [BUGGY]  String[]  searchList  =  buf.toArray(new  String[this.searchList.size()  ]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  buf.toArray(new  String[this.searchList.size()  ]);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  buf.toArray(new  String[this.searchList.size()  ]);	  String[]    searchList    =    buf.toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
369	[BUG]  [BUGGY]  if(repeat  >  0  ||  text.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  >  0  ||  text.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  >  0  ||  text.length()  ==  0)  {	  if(repeat    >    0    ||    result.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
370	[BUG]  [BUGGY]  if(repeat  >  0  ||  searchList.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(repeat  >  0  ||  searchList.length()  ==  0)  {  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  >  0  ||  searchList.length()  ==  0)  {	  if(repeat    >    0    ||    result.length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	81	None	replace
371	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  repeat);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(text.length(),  repeat);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  repeat);	  int    timeToLive    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	98	None	replace
372	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  ]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  ]);  [BUGGY]      increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[size()  ]);	  String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
373	[BUG]  [BUGGY]  Math.max(increase,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.max(increase,  text.length()  -  1);  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increase,  text.length()  -  1);	  Math.max(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	69	None	replace
