bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increase,  text.length());	      int    timeToLive    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(increase,  text.length()  /  1);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increase,  text.length()  /  1);	      int    timeToLive    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.size();  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  searchListIndex  =  this.searchList.size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.size();	      int    searchListIndex    =    searchList.size()    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
4	[BUG]  [BUGGY]  long  searchListIndex  =  searchList.size();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  long  searchListIndex  =  searchList.size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  searchListIndex  =  searchList.size();	      int    searchListIndex    =    searchList.size()    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  Math.min(increase,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increase,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  text.length());	      Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  Math.min(increment,  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increment,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  text.length());	      Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  Math.min(0,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.min(0,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  text.length());	      Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  Math.min(adjust,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.min(adjust,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(adjust,  text.length());	      Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increment,  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(increment,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increment,  text.length());	      int    timeToLive    =    Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(increment,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(increment,  text.length());	      int    timeToLive    =    Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
11	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getSearchList();  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  getSearchList();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
12	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  increase);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  increase);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  increase);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
13	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  3);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  3);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  3);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
14	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  1);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  1);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
15	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  increase  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  increase  +  1);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  increase  +  1);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
16	[BUG]  [BUGGY]  if(timeToLive  >=  0)  {  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(timeToLive  >=  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  >=  0)  {	  if    (timeToLive    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  if(timeToLive  <  =  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(timeToLive  <  =  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  <  =  0)  {	  if    (timeToLive    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  if(timeToLive  >  3)  {  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(timeToLive  >  3)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  >  3)  {	  if    (timeToLive    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  int  searchListIndex  =  list.size();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  searchListIndex  =  list.size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  list.size();	      int    searchListIndex    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  if(text.length()  >  3)  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(text.length()  >  3)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >  3)  {	  if(text.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
21	[BUG]  [BUGGY]  if(text.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(text.length()  ==  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  ==  0)  {	  if(text.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
22	[BUG]  [BUGGY]  if(text.length()  >  1)  {  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(text.length()  >  1)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >  1)  {	  if(text.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
23	[BUG]  [BUGGY]  if(text.length()  >  5)  {  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(text.length()  >  5)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >  5)  {	  if(text.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
24	[BUG]  [BUGGY]  increase  =  Math.max(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(increase,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(increase,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  searchList.length());  increase  =  Math.max(increase,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length());  increase  =  Math.max(increment,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length());  increase  =  Math.max(increase,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
28	[BUG]  [BUGGY]  if(!repeat)  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(!repeat)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(!repeat)  {	  if(repeat)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  if(timeToLive)  {  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(timeToLive)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive)  {	  if(repeat)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  if(this.repeat)  {  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.repeat)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat)  {	  if(repeat)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  if(repeat  ||  repeat)  {  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(repeat  ||  repeat)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  repeat)  {	  if(repeat)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  increase  =  Math.min(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(increase,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increase,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
33	[BUG]  [BUGGY]  Math.min(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increase,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
34	[BUG]  [BUGGY]  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increase,  searchList.length());  increase  =  Math.min(increase,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
35	[BUG]  [BUGGY]  Math.min(increment,  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.min(increment,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(increment,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
36	[BUG]  [BUGGY]  Math.min(0,  searchList.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Math.min(0,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(0,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
37	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  3);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  3);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  3);	      int    timeToLive    =    Math.min(searchList.size(),    increase);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
38	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  1);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  1);	      int    timeToLive    =    Math.min(searchList.size(),    increase);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
39	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  2);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  2);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  2);	      int    timeToLive    =    Math.min(searchList.size(),    increase);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  size);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  size);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  size);	      int    timeToLive    =    Math.min(searchList.size(),    increase);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
41	[BUG]  [BUGGY]  if  (this.repeat  >=  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if  (this.repeat  >=  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if  (this.repeat  >=  0)  {	  if    (this.repeat    >    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
42	[BUG]  [BUGGY]  if  (this.repeat  ==  0)  {  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if  (this.repeat  ==  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if  (this.repeat  ==  0)  {	  if    (this.repeat    >    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
43	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(0,  text.length()  -  1);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(0,  text.length()  -  1);	      int    timeToLive    =    Math.min(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  if(repeat  ==  0)  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(repeat  ==  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ==  0)  {	  if    (repeat    >    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  int  searchList  =  this.searchList.size();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  searchList  =  this.searchList.size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.searchList.size();	      int    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  char  searchList  =  searchList.size();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  char  searchList  =  searchList.size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	char  searchList  =  searchList.size();	      int    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  int  searchList  =  this.replaceList.size();  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  searchList  =  this.replaceList.size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  this.replaceList.size();	      int    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  int  searchList  =  getSearchList().size();  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  searchList  =  getSearchList().size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchList  =  getSearchList().size();	      int    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  /  2);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  /  2);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increase,  text.length()  /  2);	      int    timeToLive    =    Math.max(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  String[]  searchList  =  buf.toArray(new  String[searchList.size()  ]);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  buf.toArray(new  String[searchList.size()  ]);  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  buf.toArray(new  String[searchList.size()  ]);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length());  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  searchList.length());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  String[]  searchList  =  buf.toString();  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  buf.toString();  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  buf.toString();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
53	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  1);  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  searchList.length()  -  1);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[searchList.size()  ]);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[searchList.size()  ]);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  searchList.toArray(new  String[searchList.size()  ]);	      int    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
55	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  searchListIndex  =  this.searchList.indexOf(searchList);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.indexOf(searchList);	      int    searchListIndex    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
56	[BUG]  [BUGGY]  int  searchListIndex  =  this.searchList.size()  -  1;  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  searchListIndex  =  this.searchList.size()  -  1;  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  this.searchList.size()  -  1;	      int    searchListIndex    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
57	[BUG]  [BUGGY]  int  searchListIndex  =  _searchList.size();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  searchListIndex  =  _searchList.size();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  _searchList.size();	      int    searchListIndex    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  if(repeat  >=  0)  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(repeat  >=  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  >=  0)  {	  if    (repeat    >    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(increase,  text.length()  /  1);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(increase,  text.length()  /  1);	      int    timeToLive    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  if(repeat  &&  result.length()  >  0)  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(repeat  &&  result.length()  >  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  &&  result.length()  >  0)  {	  if(repeat)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
61	[BUG]  [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(replaceEach,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(replaceEach,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
62	[BUG]  [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Increase  =  Math.max(replaceEach,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replaceEach,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
63	[BUG]  [BUGGY]  Math.min(searchList.length(),  increase  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.min(searchList.length(),  increase  /  5);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.min(searchList.length(),  increase  /  5);	      Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  Math.max(increase,  searchList.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Math.max(increase,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increase,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
65	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ')-  1;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  searchListIndex  =  searchList.indexOf('  ')-  1;  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf('  ')-  1;	      int    searchListIndex    =    searchList.size()    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
66	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  2);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  2);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  2);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  size);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  size);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  size);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
68	[BUG]  [BUGGY]  Math.max(0,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Math.max(0,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  text.length());	      Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  Math.max(increase,  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.max(increase,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(increase,  text.length());	      Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(0,  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(0,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(0,  text.length());	      int    timeToLive    =    Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(increase,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  long  timeToLive  =  Math.min(increase,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.min(increase,  text.length());	      int    timeToLive    =    Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  if(timeToLive  <  3)  {  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(timeToLive  <  3)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  <  3)  {	  if    (timeToLive    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
73	[BUG]  [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(replaceEach,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(replaceEach,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
74	[BUG]  [BUGGY]  if(text.length()  >  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(text.length()  >  0  ||  text.charAt(text.length()  -  1)!=  '/')  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >  0  ||  text.charAt(text.length()  -  1)!=  '/')  {	  if(text.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
75	[BUG]  [BUGGY]  if(text.length()  >  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(text.length()  >  0  ||  text.charAt(text.length()  -  1)!=  'n')  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(text.length()  >  0  ||  text.charAt(text.length()  -  1)!=  'n')  {	  if(text.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
76	[BUG]  [BUGGY]  increase  =  Math.min(increment,  searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(increment,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.min(increment,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  Math.max(0,  searchList.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.max(0,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(0,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.min(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
78	[BUG]  [BUGGY]  if(timeToLive  >  1)  {  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(timeToLive  >  1)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(timeToLive  >  1)  {	  if    (timeToLive    >    0)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
79	[BUG]  [BUGGY]  if(repeat  ||  this.searchList.contains(text))  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(repeat  ||  this.searchList.contains(text))  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  ||  this.searchList.contains(text))  {	  if(repeat)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
80	[BUG]  [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  searchList.toArray(new  String[replacementList.size()  ]);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	String[]  searchList  =  searchList.toArray(new  String[replacementList.size()  ]);	      int    searchList    =    searchList.size();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
81	[BUG]  [BUGGY]  if(repeat  >  0  ||  result.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(repeat  >  0  ||  result.length()  ==  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(repeat  >  0  ||  result.length()  ==  0)  {	  if    (repeat    >    0)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
82	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  long  timeToLive  =  Math.max(increase,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	long  timeToLive  =  Math.max(increase,  text.length());	      int    timeToLive    =    Math.max(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
83	[BUG]  [BUGGY]  if(this.repeat  >  0  ||  this.searchList.size()  >  0)  {  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(this.repeat  >  0  ||  this.searchList.size()  >  0)  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >  0  ||  this.searchList.size()  >  0)  {	  if    (this.repeat    >    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
84	[BUG]  [BUGGY]  if(this.repeat  >  0  ||  this.searchList.isEmpty())  {  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(this.repeat  >  0  ||  this.searchList.isEmpty())  {  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	if(this.repeat  >  0  ||  this.searchList.isEmpty())  {	  if    (this.repeat    >    0)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
85	[BUG]  [BUGGY]  int  searchListIndex  =  searchList.indexOf(':')-  1;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  searchListIndex  =  searchList.indexOf(':')-  1;  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  searchListIndex  =  searchList.indexOf(':')-  1;	      int    searchListIndex    =    searchList.size()    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
86	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.time);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.time);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  this.time);	      int    timeToLive    =    Math.min(searchList.size(),    increase);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
87	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.repeat);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  this.repeat);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  this.repeat);	      int    timeToLive    =    Math.min(searchList.size(),    increase);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
88	[BUG]  [BUGGY]  increase  =  Math.max(repeat,  searchList.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(repeat,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	increase  =  Math.max(repeat,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
89	[BUG]  [BUGGY]  Increase  =  Math.max(replacement,  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Increase  =  Math.max(replacement,  searchList.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Increase  =  Math.max(replacement,  searchList.length());	      Math.min(increase,    searchList.length()    /    5);    increase    =    Math.max(increase,    searchList.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
90	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  -  1,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size()  -  1,  text.length());  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size()  -  1,  text.length());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
91	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  1);  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.size()  -  1);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
92	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.size(),  searchList.size());  [BUGGY]    increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.size(),  searchList.size());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
93	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(text.length(),  increase);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(text.length(),  increase);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(text.length(),  increase);	      int    timeToLive    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
94	[BUG]  [BUGGY]  Math.max(1  *  increase,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Math.max(1  *  increase,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	Math.max(1  *  increase,  text.length());	      Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
95	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  maximum);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  maximum);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  maximum);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
96	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.repeat);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(searchList.length(),  this.repeat);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(searchList.length(),  this.repeat);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
97	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.repeat);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  this.repeat);  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.min(searchList.length(),  this.repeat);	      int    timeToLive    =    Math.max(searchList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
98	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length());  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3677	3677	1	replace	int  timeToLive  =  Math.max(repeat,  text.length());	      int    timeToLive    =    Math.min(increase,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
