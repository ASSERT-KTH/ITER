projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[searchLength];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[0];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[this.timeToLive];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[repeatIndex];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[noMoreMatchesForReplIndex];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[size];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,replaceIndex,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,replacementList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[replaceIndex]);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Stringtext=getText();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,null);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[searchLength];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[size+1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[size-1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[size()];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[2];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(replaceIndex,newString[searchList.length]);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[replaceIndex],text);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[replaceIndex],searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[replaceIndex],textIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[repeatIndex+1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]replacementList=newboolean[repeatIndex];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]replaceMatchesForReplIndex=newboolean[repeatIndex];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,replaceIndex,searchList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,searchList,replaceIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,replaceIndex,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,replacementIndex,searchList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,textIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(textIndex,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[this.timeToLive];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[size()];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[0];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Stringtext=getText().trim();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Stringtext=getText().toLowerCase();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Stringtext=getText()+"n";
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList().toArray(replacementList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList(replacementIndex,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList(searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList(replacementIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList(replacements);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[noMoreMatchesForReplIndex+1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length-1;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=this.searchList.length;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length-2;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length+1;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,searchList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(this.replacementList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,replaceIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(this,replacementList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,null,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[]{text});
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[]{});
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,null,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchList,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchList,timeToLive);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchList,null);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchList,this);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,text);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,searchList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(searchList,replacementList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacements,text);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[this.timeToLive+1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[this.timeToLive-1];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[this.timeToLive*2];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,searchList,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,searchList[0],searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,searchList[i]);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length()-1;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=this.searchList.length();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length()+1;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=searchList.length()-2;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[replaceIndex],replaceIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,index,tempIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[noMoreMatchesForReplIndex];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(searchList,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(this.replacementList,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(replacementList,searchList,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(this.searchList,null);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(searchList,newString[searchLength]);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Stringtext=getText(searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(searchList,replacementIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchList.length);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(searchList,replaceIndex);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList(null);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(text,replacementList,searchLength);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacements();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(searchList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]repeat=newboolean[repeatIndex];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]noMoreMatchesForReplIndex=newboolean[this.repeatIndex];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635if(replacementList!=null){for(inti=0;i<searchLength;i++){String[]replacementList=getReplacementList();if(replacementList.length>0){returntext;}
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635if(replacementList!=null){for(inti=0;i<searchLength;i++){String[]replacementList[i]=newString[replacementList.length()];System.arraycopy(searchList,0,replacementList,tempIndex,
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635if(replacementList!=null){for(inti=0;i<searchLength;i++){String[]replacementList=newString[replacementList.length()];System.arraycopy(searchList,0,replacementList,tempIndex,
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Stringtext=super.getText();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringreplaceEach=getReplacementEach(replacementIndex,searchList,newString[]{});
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635String[]replacementList=getReplacementList(true);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[size];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]searchList=newboolean[repeatLength];
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(this.replaceList,null);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(this.replaceAll,null);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635Arrays.fill(this.searchList,newString[replaceIndex]);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=this.replaceList.length;
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635intsearchLength=this.replaceList.length();
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635StringUtils.copyCurrentStructure(this.replacementList,replacementList);
projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java3635boolean[]replaceIndex=newboolean[repeatIndex];
