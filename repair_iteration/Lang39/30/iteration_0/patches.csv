bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  1);  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  1);  [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	StringBuilder  buf  =  new  StringBuilder(text.length()  +  1);	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
2	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  *  increase);  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  *  increase);  [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	StringBuilder  buf  =  new  StringBuilder(text.length()  *  increase);	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
3	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  *  2);  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  *  2);  [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	StringBuilder  buf  =  new  StringBuilder(text.length()  *  2);	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
4	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  -  increase);  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  -  increase);  [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	StringBuilder  buf  =  new  StringBuilder(text.length()  -  increase);	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	  	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
6	[BUG]  [BUGGY]    String[]  replacementList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    String[]  replacementList  =  getReplacementList();  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    String[]  replacementList  =  getReplacementList();		non-compiled	[CE]  <identifier>  expected	60	None	add
7	[BUG]  [BUGGY]    String[]  replacementList  =  new  String[size()  ];  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    String[]  replacementList  =  new  String[size()  ];  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    String[]  replacementList  =  new  String[size()  ];		non-compiled	[CE]  <identifier>  expected	60	None	add
8	[BUG]  [BUGGY]    int  timeToLive  =  getTime();  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  getTime();  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    int  timeToLive  =  getTime();		non-compiled	[CE]  <identifier>  expected	60	None	add
9	[BUG]  [BUGGY]    String  replacementList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    String  replacementList  =  getReplacementList();  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    String  replacementList  =  getReplacementList();		non-compiled	[CE]  <identifier>  expected	60	None	add
10	[BUG]  [BUGGY]    String[]  replacementList  =  getReplacements();  [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    String[]  replacementList  =  getReplacements();  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    String[]  replacementList  =  getReplacements();		non-compiled	[CE]  <identifier>  expected	60	None	add
11	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length());  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length());  [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	StringBuilder  buf  =  new  StringBuilder(text.length());	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
12	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  2);  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  2);  [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	StringBuilder  buf  =  new  StringBuilder(text.length()  +  2);	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
13	[BUG]  [BUGGY]    if(repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    if(repeat)  {  return  buf.toString();  }  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    if(repeat)  {  return  buf.toString();  }		non-compiled	[CE]  <identifier>  expected	60	None	add
14	[BUG]  [BUGGY]    String[]  replacementList  =  new  String[size()  -  1];  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    String[]  replacementList  =  new  String[size()  -  1];  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    String[]  replacementList  =  new  String[size()  -  1];		non-compiled	[CE]  <identifier>  expected	60	None	add
15	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  /  increase);  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  /  increase);  [BUGGY]    while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	StringBuilder  buf  =  new  StringBuilder(text.length()  /  increase);	StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  	non-compiled	[CE]  <identifier>  expected	59	None	replace
16	[BUG]  [BUGGY]    int  timeToLive  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  System.currentTimeMillis();  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    int  timeToLive  =  System.currentTimeMillis();		non-compiled	[CE]  <identifier>  expected	60	None	add
17	[BUG]  [BUGGY]    int  timeToLive  =  Math.max(start,  searchList.length);  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.max(start,  searchList.length);  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    int  timeToLive  =  Math.max(start,  searchList.length);		non-compiled	[CE]  <identifier>  expected	60	None	add
18	[BUG]  [BUGGY]    int  timeToLive  =  Math.max(repeat,  Math.min(start,  text.length()  -  1));  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.max(repeat,  Math.min(start,  text.length()  -  1));  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3684	3684	1	replace	    int  timeToLive  =  Math.max(repeat,  Math.min(start,  text.length()  -  1));		non-compiled	[CE]  <identifier>  expected	60	None	add
