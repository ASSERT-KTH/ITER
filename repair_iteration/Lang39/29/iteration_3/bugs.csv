bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  increase  =  Math.min(replacementList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replacementList.length(),  searchList.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(replacementList.length(),  searchList.length());	  increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
2	[BUG]  [BUGGY]  increase  =  Math.min(replacementList.length(),  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replacementList.length(),  text.length()  -  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(replacementList.length(),  text.length()  -  1);	  increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
3	[BUG]  [BUGGY]  increase  =  Math.min(replacementList.length(),  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replacementList.length(),  text.length()  +  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(replacementList.length(),  text.length()  +  1);	  increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
4	[BUG]  [BUGGY]  increase  =  Math.min(replacementList.length()  +  1,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replacementList.length()  +  1,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(replacementList.length()  +  1,  text.length());	  increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
5	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[this.searchList.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[this.searchList.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[this.searchList.size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
6	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[searchList.size()  ]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[searchList.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList().toArray(new  String[searchList.size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
7	[BUG]  [BUGGY]  int  start  =  Math.max(increase,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(increase,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(increase,  text.length());	  int    start    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
8	[BUG]  [BUGGY]  int  start  =  Math.max(increment,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(increment,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(increment,  text.length());	  int    start    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
9	[BUG]  [BUGGY]  int  start  =  Math.max(increase,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(increase,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(increase,  text.length()  /  5);	  int    start    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
10	[BUG]  [BUGGY]  int  start  =  Math.min(increase,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(increase,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(increase,  text.length()  -  1);	  int    start    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
11	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  -  1]);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  -  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  -  1]);	  String[]    replacementList    =    getReplacements().toArray(new    String[replacements.size()    ]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
12	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  +  1]);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  +  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  +  1]);	  String[]    replacementList    =    getReplacements().toArray(new    String[replacements.size()    ]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
13	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  -  2]);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  -  2]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  -  2]);	  String[]    replacementList    =    getReplacements().toArray(new    String[replacements.size()    ]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
14	[BUG]  [BUGGY]  String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(replacementList[i]);  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(replacementList[i]);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(replacementList[i]);  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  long  start  =  System.currentTimeMillis()  -  start;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  start  =  System.currentTimeMillis()  -  start;  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  start  =  System.currentTimeMillis()  -  start;	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
16	[BUG]  [BUGGY]  long  start  =  getStart();  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  start  =  getStart();  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  start  =  getStart();	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
17	[BUG]  [BUGGY]  long  start  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  long  start  =  System.currentTimeMillis()  +  1;  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  start  =  System.currentTimeMillis()  +  1;	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
18	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreEach();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMoreEach();  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMoreEach();	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreException( " ");  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMoreException( " ");  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMoreException( " ");	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(false);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMoreGuaranteed(false);	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  -  1]);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  -  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[size()  -  1]);	  String[]    searchList    =    getSearchList().toArray(new    String[size()    ]);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
22	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList().toArray(new  String[size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[size()    ]);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
23	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  +  1]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  +  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[size()  +  1]);	  String[]    searchList    =    getSearchList().toArray(new    String[size()    ]);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
24	[BUG]  [BUGGY]  increase  =  Math.max(creator,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(creator,  text.length()  -  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(creator,  text.length()  -  1);	  increase    =    Math.max(creator,    text.length());    	non-compiled	[CE]  <identifier>  expected	86	None	replace
25	[BUG]  [BUGGY]  increase  =  Math.max(creator,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(creator,  text.length()  +  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(creator,  text.length()  +  1);	  increase    =    Math.max(creator,    text.length());    	non-compiled	[CE]  <identifier>  expected	86	None	replace
26	[BUG]  [BUGGY]  augment  =  Math.max(adjust,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  augment  =  Math.max(adjust,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	augment  =  Math.max(adjust,  text.length());	  increase    =    Math.max(adjust,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacements.size()  ]);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacements.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[replacements.size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[repeatList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
28	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[repeatList.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[repeatList.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList().toArray(new  String[repeatList.size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[repeatList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.replacementList,  start,  text,  0,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(this.replacementList,  start,  text,  0,  this.replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(this.replacementList,  start,  text,  0,  this.replacementList.length);	  System.arraycopy(text,    start,    replacementList,    0,    this.replacementList.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length  -  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length  -  1);	  System.arraycopy(text,    start,    replacementList,    0,    this.replacementList.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length  +  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length  +  1);	  System.arraycopy(text,    start,    replacementList,    0,    this.replacementList.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
32	[BUG]  [BUGGY]  increase  =  Math.min(0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(0,  text.length()  -  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(0,  text.length()  -  1);	  increase    =    Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
33	[BUG]  [BUGGY]  increase  =  Math.max(0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(0,  text.length()  -  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(0,  text.length()  -  1);	  increase    =    Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
34	[BUG]  [BUGGY]  increase  =  Math.min(0,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(0,  text.length()  +  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(0,  text.length()  +  1);	  increase    =    Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
35	[BUG]  [BUGGY]  increase  =  Math.min(0,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(0,  text.length()  -  2);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(0,  text.length()  -  2);	  increase    =    Math.min(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
36	[BUG]  [BUGGY]  aughtExceptionHandler.handleEach(buf,  increase);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleEach(buf,  increase);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleEach(buf,  increase);	  aughtExceptionHandler.handleEach(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  aughtExceptionHandler.handleEach(buf,  repeat,  timeToLive);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleEach(buf,  repeat,  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleEach(buf,  repeat,  timeToLive);	  aughtExceptionHandler.handleEach(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  aughtExceptionHandler.handleEach(buf,  error);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleEach(buf,  error);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleEach(buf,  error);	  aughtExceptionHandler.handleEach(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  aughtExceptionHandler.handleEach(buf,  result);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleEach(buf,  result);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleEach(buf,  result);	  aughtExceptionHandler.handleEach(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
40	[BUG]  [BUGGY]  augment  =  Math.min(adjust,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  augment  =  Math.min(adjust,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	augment  =  Math.min(adjust,  text.length());	  increase    =    Math.min(adjust,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacementList);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replacementList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacementList);	  String[]    replacementList    =    getReplacementList(searchList);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
42	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacements);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replacements);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacements);	  String[]    replacementList    =    getReplacementList(searchList);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
43	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacementList,  timeToLive);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replacementList,  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacementList,  timeToLive);	  String[]    replacementList    =    getReplacementList(searchList);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
44	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacementList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacementList.length);	  String[]    replacementList    =    getReplacementList(searchList);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
45	[BUG]  [BUGGY]  int  start  =  Math.max(0,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(0,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(0,  text.length()  /  5);	  int    start    =    Math.min(start,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
46	[BUG]  [BUGGY]  int  start  =  Math.min(searchList.length(),  searchList.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(searchList.length(),  searchList.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(searchList.length(),  searchList.length()  /  5);	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
47	[BUG]  [BUGGY]  int  start  =  Math.min(searchList.length(),  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(searchList.length(),  searchList.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(searchList.length(),  searchList.length()  -  1);	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
48	[BUG]  [BUGGY]  int  start  =  Math.max(searchList.length(),  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(searchList.length(),  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(searchList.length(),  text.length()  /  5);	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
49	[BUG]  [BUGGY]  int  start  =  Math.max(searchList.length(),  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(searchList.length(),  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(searchList.length(),  text.length()  -  1);	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
50	[BUG]  [BUGGY]  int  increase  =  Math.min(replacementList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  increase  =  Math.min(replacementList.length(),  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  increase  =  Math.min(replacementList.length(),  text.length());	  long    increase    =    Math.min(replacementList.length(),    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
51	[BUG]  [BUGGY]  long  increase  =  Math.min(replacementList.length()  +  1,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.min(replacementList.length()  +  1,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(replacementList.length()  +  1,  text.length()  /  5);	  long    increase    =    Math.min(replacementList.length(),    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
52	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
53	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
54	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.length()  /  2];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[searchList.length()  /  2];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[searchList.length()  /  2];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
55	[BUG]  [BUGGY]  increase  =  Math.max(1L,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(1L,  text.length()  -  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(1L,  text.length()  -  1);	  increase    =    Math.max(1L,    text.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
56	[BUG]  [BUGGY]  increase  =  Math.max(1L,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(1L,  text.length()  +  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(1L,  text.length()  +  1);	  increase    =    Math.max(1L,    text.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
57	[BUG]  [BUGGY]  increase  =  Math.max(0L,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(0L,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(0L,  text.length());	  increase    =    Math.max(1L,    text.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
58	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  new  Object[]  {  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMalformedException( " ",  new  Object[]  {  }  );	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
59	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( ", ");  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMalformedException( ", ");  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMalformedException( ", ");	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
60	[BUG]  [BUGGY]  int  start  =  Math.min(increment,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(increment,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(increment,  text.length()  /  5);	  int    start    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	103	None	replace
61	[BUG]  [BUGGY]  int  start  =  Math.max(increment,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(increment,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(increment,  text.length()  /  5);	  int    start    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	103	None	replace
62	[BUG]  [BUGGY]  int  start  =  Math.max(0,  text.length()  -  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(0,  text.length()  -  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(0,  text.length()  -  5);	  int    start    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	103	None	replace
63	[BUG]  [BUGGY]  decrease  =  Math.min(creator,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  decrease  =  Math.min(creator,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	decrease  =  Math.min(creator,  text.length());	  increase    =    Math.min(creator,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
64	[BUG]  [BUGGY]  pending  ||  pending.length()  ==  0)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  pending  ||  pending.length()  ==  0)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||  pending.length()  ==  0)  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
65	[BUG]  [BUGGY]  pending  ||  pending)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  pending  ||  pending)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||  pending)  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
66	[BUG]  [BUGGY]  pending  ||  pending.length()!=  0)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  pending  ||  pending.length()!=  0)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||  pending.length()!=  0)  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
67	[BUG]  [BUGGY]  pending.add(buf.toString());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  pending.add(buf.toString());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending.add(buf.toString());	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
68	[BUG]  [BUGGY]  augment  =  Math.min(start,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  augment  =  Math.min(start,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	augment  =  Math.min(start,  text.length());	  increase    =    Math.min(start,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
69	[BUG]  [BUGGY]  int  start  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  System.currentTimeMillis();  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  System.currentTimeMillis();	  long    start    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
70	[BUG]  [BUGGY]  long  start  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  start  =  System.currentTimeMillis()  -  1;  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  start  =  System.currentTimeMillis()  -  1;	  long    start    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
71	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
72	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length()  -  1);	  System.arraycopy(text,    start,    replacementList,    0,    text.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  -  2);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length()  -  2);	  System.arraycopy(text,    start,    replacementList,    0,    text.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length()  +  1);	  System.arraycopy(text,    start,    replacementList,    0,    text.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  text.length());	  System.arraycopy(text,    start,    replacementList,    0,    text.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
77	[BUG]  [BUGGY]  increase  =  Math.max(0,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(0,  text.length()  +  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(0,  text.length()  +  1);	  increase    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
78	[BUG]  [BUGGY]  increase  =  Math.max(1,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(1,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(1,  text.length());	  increase    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
79	[BUG]  [BUGGY]  increase  =  Math.max(0,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(0,  text.length()  -  2);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(0,  text.length()  -  2);	  increase    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	22	None	replace
80	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  *  5];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  *  5];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  *  5];	  String[]    replacementList    =    new    String[size()    %    5];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
81	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replaceList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  replaceList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  replaceList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  replaceList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replaceList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
83	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ",n ");  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ",n ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ",n ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
84	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  /  2];  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  /  2];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  /  2];	  String[]    replacementList    =    new    String[size()    /    5];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
85	[BUG]  [BUGGY]  pending  &&  repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  pending  &&  repeat)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  &&  repeat)  {  return  buf.toString();  }	  pending    ||    repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
86	[BUG]  [BUGGY]  pending  ||  timeToLive)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  pending  ||  timeToLive)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||  timeToLive)  {  return  buf.toString();  }	  pending    ||    repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  ||  repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ||  repeat)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	||  repeat)  {  return  buf.toString();  }	  pending    ||    repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  increase);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  increase);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMissingName(buf,  increase);	  aughtExceptionHandler.handleMissingName(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
89	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  result);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  result);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMissingName(buf,  result);	  aughtExceptionHandler.handleMissingName(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
90	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  error);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  error);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMissingName(buf,  error);	  aughtExceptionHandler.handleMissingName(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
91	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  repeat,  timeToLive);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  repeat,  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMissingName(buf,  repeat,  timeToLive);	  aughtExceptionHandler.handleMissingName(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
92	[BUG]  [BUGGY]  if(error)  {  aughtException.printStackTrace();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(error)  {  aughtException.printStackTrace();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(error)  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
93	[BUG]  [BUGGY]  aughtException.printStackTrace(System.err);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException.printStackTrace(System.err);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtException.printStackTrace(System.err);	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
95	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(start,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(start,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(start,  text.length()  -  1);	  int    timeToLive    =    Math.min(timeToLive,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
96	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(this.timeToLive,  text.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(this.timeToLive,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(this.timeToLive,  text.length());	  int    timeToLive    =    Math.min(timeToLive,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
97	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(repeat,  text.length()  -  1);	  int    timeToLive    =    Math.min(timeToLive,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
98	[BUG]  [BUGGY]  if(replacementList!=  null)  {  safeMultiply(replacementList);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  safeMultiply(replacementList);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replacementList!=  null)  {  safeMultiply(replacementList);  }	  safeMultiply(replacementList);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
99	[BUG]  [BUGGY]  if(replacementList!=  null)  {  safeMultiply(replacementList);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  safeMultiply(replacementList);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replacementList!=  null)  {  safeMultiply(replacementList);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  safeMultiply(replacementList);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
100	[BUG]  [BUGGY]  if(replacementList!=  null)  {  safeMultiply(replacementList);  }  else  {  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  safeMultiply(replacementList);  }  else  {  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replacementList!=  null)  {  safeMultiply(replacementList);  }  else  {  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  safeMultiply(replacementList);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
101	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(false,  false);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(false,  false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(false,  false);	  String[]    replacementList    =    getReplacementList(true);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
102	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(false,  true);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(false,  true);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(false,  true);	  String[]    replacementList    =    getReplacementList(true);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(false,  null);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(false,  null);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(false,  null);	  String[]    replacementList    =    getReplacementList(true);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
104	[BUG]  [BUGGY]  increase  =  Math.min(crement,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(crement,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(crement,  text.length());	  increase    =    Math.min(increment,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length  -  1);	  System.arraycopy(text,    start,    replacementList,    0,    text.length);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length  +  1);	  System.arraycopy(text,    start,    replacementList,    0,    text.length);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  text.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  text.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  text.length);	  System.arraycopy(text,    start,    replacementList,    0,    text.length);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
108	[BUG]  [BUGGY]  increase  =  Math.max(crement,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(crement,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(crement,  text.length());	  increase    =    Math.min(crement,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
109	[BUG]  [BUGGY]  String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(text.charAt(i));  }	  String[]    searchList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
110	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  searchList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
111	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
112	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  searchList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
113	[BUG]  [BUGGY]  long  increase  =  Math.max(replacementList.length(),  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.max(replacementList.length(),  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.max(replacementList.length(),  text.length()  /  5);	  long    increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
114	[BUG]  [BUGGY]  int  increase  =  Math.max(replacementList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  increase  =  Math.max(replacementList.length(),  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  increase  =  Math.max(replacementList.length(),  text.length());	  long    increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
115	[BUG]  [BUGGY]  result  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.min(repeat,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.min(repeat,  text.length());	  result    =    Math.min(repeat,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
116	[BUG]  [BUGGY]  result  =  Math.max(repeat,  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.max(repeat,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.max(repeat,  text.length());	  result    =    Math.min(repeat,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
117	[BUG]  [BUGGY]  Result  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Result  =  Math.min(repeat,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	Result  =  Math.min(repeat,  text.length());	  result    =    Math.min(repeat,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
118	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacements,  searchList);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacements,  searchList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(replacements,  searchList);	  String[]    replacementList    =    getReplacements().toArray(replacements);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
119	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(start,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(start,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(start,  text.length());	  int    timeToLive    =    Math.min(timeToLive,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
120	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(0,  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(0,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.max(0,  text.length());	  int    timeToLive    =    Math.min(timeToLive,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
121	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(1,  text.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(1,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.max(1,  text.length());	  int    timeToLive    =    Math.min(timeToLive,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
122	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(timeToLive,  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(timeToLive,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  timeToLive  =  Math.min(timeToLive,  text.length());	  int    timeToLive    =    Math.min(timeToLive,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
123	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
124	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  text,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  text,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  text,  0,  replacementList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
125	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
126	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[replacementList.length()  ];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[replacementList.length()  ];	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
127	[BUG]  [BUGGY]  safeMultiply(replacementList,  true));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(replacementList,  true));  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(replacementList,  true));	  safeMultiply(replacementList,    false));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
128	[BUG]  [BUGGY]  safeMultiply(searchList,  false));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(searchList,  false));  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(searchList,  false));	  safeMultiply(replacementList,    false));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
129	[BUG]  [BUGGY]  safe(replacementList,  true));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safe(replacementList,  true));  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safe(replacementList,  true));	  safeMultiply(replacementList,    false));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
130	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList(replacementIndex);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList(replacementIndex);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList(replacementIndex);	  String[]    searchList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
131	[BUG]  [BUGGY]  int  start  =  Math.max(start,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(start,  text.length()  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(start,  text.length()  +  1);	  int    start    =    Math.max(start,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
132	[BUG]  [BUGGY]  int  start  =  Math.max(start,  text.length()  *  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(start,  text.length()  *  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(start,  text.length()  *  1);	  int    start    =    Math.max(start,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(searchList,  start,  text,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  start,  text,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  start,  text,  0,  searchList.length);	  System.arraycopy(text,    start,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  searchList.length);	  System.arraycopy(text,    start,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  searchList.length  -  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  searchList.length  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  searchList.length  -  1);	  System.arraycopy(text,    start,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
136	[BUG]  [BUGGY]  int  increase  =  Math.min(replacementList.length(),  timeToLive);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  increase  =  Math.min(replacementList.length(),  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  increase  =  Math.min(replacementList.length(),  timeToLive);	  long    increase    =    Math.min(replacementList.length(),    timeToLive);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
137	[BUG]  [BUGGY]  int  increase  =  Math.max(replacementList.length(),  timeToLive);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  increase  =  Math.max(replacementList.length(),  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  increase  =  Math.max(replacementList.length(),  timeToLive);	  long    increase    =    Math.min(replacementList.length(),    timeToLive);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
138	[BUG]  [BUGGY]  long  increase  =  Math.min(replacementList.length()  /  5);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.min(replacementList.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(replacementList.length()  /  5);	  long    increase    =    Math.min(replacementList.length(),    timeToLive);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
139	[BUG]  [BUGGY]  long  increase  =  Math.max(replacementList.length(),  5);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.max(replacementList.length(),  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.max(replacementList.length(),  5);	  long    increase    =    Math.min(replacementList.length(),    timeToLive);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
140	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(repeat,  text.length());	  int    timeToLive    =    Math.min(repeat,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
141	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(repeat,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.max(repeat,  text.length());	  int    timeToLive    =    Math.min(repeat,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
142	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  this.repeat);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  this.repeat);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  this.repeat);	  System.arraycopy(text,    start,    searchList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  itemCount);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  itemCount);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  itemCount);	  System.arraycopy(text,    start,    searchList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
144	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  result);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  result);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  result);	  System.arraycopy(text,    start,    searchList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
145	[BUG]  [BUGGY]  int  start  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(repeat,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(repeat,  text.length());	  int    start    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
146	[BUG]  [BUGGY]  int  start  =  Math.max(repeat,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(repeat,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(repeat,  text.length()  -  1);	  int    start    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
147	[BUG]  [BUGGY]  int  start  =  Math.max(repeat,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(repeat,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(repeat,  text.length()  /  5);	  int    start    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
148	[BUG]  [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
149	[BUG]  [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-'  ||  text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-'  ||  text.charAt(i)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-'  ||  text.charAt(i)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
150	[BUG]  [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
151	[BUG]  [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-'  ||  text.charAt(i)!=  '+')  {  return;  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-'  ||  text.charAt(i)!=  '+')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	Annotation[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-'  ||  text.charAt(i)!=  '+')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
152	[BUG]  [BUGGY]  result  =  Math.max(result,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.max(result,  text.length()  -  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.max(result,  text.length()  -  1);	  increase    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
153	[BUG]  [BUGGY]  increase  =  Math.max(repeat,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(repeat,  text.length()  +  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(repeat,  text.length()  +  1);	  increase    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
154	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(null,  null);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(null,  null);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(null,  null);	  String[]    replacementList    =    getReplacementList(null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
155	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(this);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(this);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(this);	  String[]    replacementList    =    getReplacementList(null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
156	[BUG]  [BUGGY]  int  start  =  Math.min(increase,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(increase,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(increase,  text.length()  /  5);	  int    start    =    Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
157	[BUG]  [BUGGY]  String[]  increase  =  new  String[size()  ];  System.arraycopy(searchList,  0,  increase,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  increase  =  new  String[size()  ];  System.arraycopy(searchList,  0,  increase,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  increase  =  new  String[size()  ];  System.arraycopy(searchList,  0,  increase,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
159	[BUG]  [BUGGY]  String[]  increase  =  new  String[size()  ];  System.arraycopy(searchList,  0,  increase,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  String[]  increase  =  new  String[size()  ];  System.arraycopy(searchList,  0,  increase,  0,  replacementList.length);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  increase  =  new  String[size()  ];  System.arraycopy(searchList,  0,  increase,  0,  replacementList.length);	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
160	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  itemCount  -  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  itemCount  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  itemCount  -  1);	  System.arraycopy(text,    start,    replacementList,    0,    itemCount);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  itemCount  +  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  itemCount  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  itemCount  +  1);	  System.arraycopy(text,    start,    replacementList,    0,    itemCount);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
162	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacementList.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(new  String[replacementList.size()  ]);	  String[]    replacementList    =    getReplacements().toArray(replacementList);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
163	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacementList,  searchList);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacementList,  searchList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(replacementList,  searchList);	  String[]    replacementList    =    getReplacements().toArray(replacementList);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
164	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacementList,  false);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacementList,  false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(replacementList,  false);	  String[]    replacementList    =    getReplacements().toArray(replacementList);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
165	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  error);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  error);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  error);	  aughtExceptionHandler.handleMatcher(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
166	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  timeToLive);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  timeToLive);	  aughtExceptionHandler.handleMatcher(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
167	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  repeat,  timeToLive);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  repeat,  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  repeat,  timeToLive);	  aughtExceptionHandler.handleMatcher(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
168	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  result);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  result);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  result);	  aughtExceptionHandler.handleMatcher(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
169	[BUG]  [BUGGY]  result  =  Math.min(result,  text.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.min(result,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.min(result,  text.length());	  result    =    Math.min(result,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
170	[BUG]  [BUGGY]  Result  =  Math.min(result,  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Result  =  Math.min(result,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	Result  =  Math.min(result,  text.length());	  result    =    Math.min(result,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);	  System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);	  System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  new  String[replacementList.length],  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  new  String[replacementList.length],  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  new  String[replacementList.length],  0,  replacementList.length);	  System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
174	[BUG]  [BUGGY]  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
175	[BUG]  [BUGGY]  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
176	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  new  String[size()  ];  System.arraycopy(replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  new  String[size()  ];  System.arraycopy(replacementList,  0,  replacementList.length);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  new  String[size()  ];  System.arraycopy(replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
177	[BUG]  [BUGGY]  String[]  searchList  =  new  String[size()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[size()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[size()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
178	[BUG]  [BUGGY]  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
179	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  text.length());	  System.arraycopy(text,    start,    searchList,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
180	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  timeToLive);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  timeToLive);	  System.arraycopy(text,    start,    searchList,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
181	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  this.timeToLive);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  this.timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  this.timeToLive);	  System.arraycopy(text,    start,    searchList,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  itemCount);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  itemCount);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  itemCount);	  System.arraycopy(text,    start,    searchList,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
183	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }	  String[]    searchList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
184	[BUG]  [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append('n');    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
185	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('#');  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('#');  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('#');  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append('n');    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
186	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
187	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
188	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  /  1];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  /  1];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  /  1];	  String[]    replacementList    =    new    String[size()    +    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
189	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  1];  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  1];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  1];	  String[]    replacementList    =    new    String[size()    -    1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
190	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  |  1];  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  |  1];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  |  1];	  String[]    replacementList    =    new    String[size()    -    1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
191	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[replacementList.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList().toArray(new  String[replacementList.size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
192	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  -  1]);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  -  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  -  1]);	  String[]    searchList    =    getSearchList().toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
193	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  +  1]);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  +  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  +  1]);	  String[]    searchList    =    getSearchList().toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
194	[BUG]  [BUGGY]  safeMultiply(replacementList,  true);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(replacementList,  true);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(replacementList,  true);	  safeMultiply(replacementList,    false);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
195	[BUG]  [BUGGY]  safeMultiply(searchList,  false);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(searchList,  false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(searchList,  false);	  safeMultiply(replacementList,    false);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
196	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacementIndex  +  1);	  String[]    replacementList    =    getReplacementList(replacementIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
197	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex,  searchList);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex,  searchList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacementIndex,  searchList);	  String[]    replacementList    =    getReplacementList(replacementIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
198	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replaceIndex  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replaceIndex  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replaceIndex  +  1);	  String[]    replacementList    =    getReplacementList(replacementIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
199	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replaceIndex,  searchList);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replaceIndex,  searchList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replaceIndex,  searchList);	  String[]    replacementList    =    getReplacementList(replacementIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
200	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  repeat  }  );  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  repeat  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   " ",  repeat  }  );	  safeMultiply(buf,    new    String[]    {       "   "    }    );    	non-compiled	[CE]  <identifier>  expected	61	None	replace
201	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   "n "  }  );  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   "n "  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   "n "  }  );	  safeMultiply(buf,    new    String[]    {       "   "    }    );    	non-compiled	[CE]  <identifier>  expected	61	None	replace
202	[BUG]  [BUGGY]  result  =  Math.max(result,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.max(result,  text.length()  +  1);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.max(result,  text.length()  +  1);	  result    =    Math.max(result,    text.length());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
203	[BUG]  [BUGGY]  result  =  Math.max(result,  searchList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.max(result,  searchList.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.max(result,  searchList.length());	  result    =    Math.max(result,    text.length());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
204	[BUG]  [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
205	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
206	[BUG]  [BUGGY]  String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(searchList[i]);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(searchList[i]);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replaceList  =  getReplacementList();  for(int  i  =  start;  i  <  replaceList.length;  i++)  {  buf.append(searchList[i]);  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
207	[BUG]  [BUGGY]  int  start  =  Math.max(1,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(1,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(1,  text.length()  -  1);	  int    start    =    Math.max(1,    text.length());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
208	[BUG]  [BUGGY]  int  start  =  Math.max(1,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(1,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(1,  text.length()  /  5);	  int    start    =    Math.max(1,    text.length());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
209	[BUG]  [BUGGY]  int  start  =  Math.max(1,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(1,  text.length()  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(1,  text.length()  +  1);	  int    start    =    Math.max(1,    text.length());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
210	[BUG]  [BUGGY]  int  start  =  Math.max(0,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(0,  text.length()  /  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(0,  text.length()  /  1);	  int    start    =    Math.max(0,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
211	[BUG]  [BUGGY]  int  start  =  Math.min(0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(0,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(0,  text.length()  -  1);	  int    start    =    Math.max(0,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
212	[BUG]  [BUGGY]  String[]  searchList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  String[]    searchList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    searchList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
213	[BUG]  [BUGGY]  String[]  searchList  =  new  String[replacements.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[replacements.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[replacements.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	  String[]    searchList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    searchList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
214	[BUG]  [BUGGY]  String[]  searchList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[replacementList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
215	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[replacementList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
216	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(timeToLive,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(timeToLive,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.max(timeToLive,  text.length());	  int    timeToLive    =    Math.min(timeToLive,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
217	[BUG]  [BUGGY]  int  start  =  Math.max(0,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(0,  text.length()  -  2);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(0,  text.length()  -  2);	  int    start    =    Math.max(0,    text.length());    	non-compiled	[CE]  <identifier>  expected	47	None	replace
218	[BUG]  [BUGGY]  if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
219	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   "   ",  true)  }  );  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   "   ",  true)  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   "   ",  true)  }  );	  safeMultiply(buf,    new    String[]    {       "   ",    false)    }    );    	non-compiled	[CE]  <identifier>  expected	60	None	replace
220	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   " "  },  false)  }  );  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   " "  },  false)  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   " "  },  false)  }  );	  safeMultiply(buf,    new    String[]    {       "   ",    false)    }    );    	non-compiled	[CE]  <identifier>  expected	60	None	replace
221	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  true,  false)  }  );  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  true,  false)  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   " ",  true,  false)  }  );	  safeMultiply(buf,    new    String[]    {       "   ",    false)    }    );    	non-compiled	[CE]  <identifier>  expected	60	None	replace
222	[BUG]  [BUGGY]  if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ", ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ", ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
223	[BUG]  [BUGGY]  if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i  +  1));  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i  +  1));  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replacementList!=  null)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i  +  1));  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
224	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(start);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(start);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(start);	  String[]    replacementList    =    getReplacementList(replacementIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
225	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacementIndex  -  1);	  String[]    replacementList    =    getReplacementList(replacementIndex);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
226	[BUG]  [BUGGY]  increases  =  Math.min(creator,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increases  =  Math.min(creator,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increases  =  Math.min(creator,  text.length());	  increase    =    Math.min(creator,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
227	[BUG]  [BUGGY]  if(timeToLive)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(timeToLive)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(timeToLive)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append('n');    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
228	[BUG]  [BUGGY]  long  increase  =  Math.min(replacementList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.min(replacementList.length(),  searchList.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(replacementList.length(),  searchList.length());	  long    increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
229	[BUG]  [BUGGY]  short  increase  =  Math.min(replacementList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  short  increase  =  Math.min(replacementList.length(),  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	short  increase  =  Math.min(replacementList.length(),  text.length());	  long    increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
230	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  start);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  start);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  start);	  aughtExceptionHandler.handleMatcher(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
231	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  0,  repeat);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  0,  repeat);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  0,  repeat);	  aughtExceptionHandler.handleMatcher(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
232	[BUG]  [BUGGY]  if(replace)  {  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(replace)  {  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replace)  {  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }	  String[]    searchList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
233	[BUG]  [BUGGY]  if(replace)  {  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(replace)  {  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replace)  {  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }	  String[]    searchList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
234	[BUG]  [BUGGY]  increase  =  Math.max(start,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(start,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(start,  text.length());	  increase    =    Math.max(creator,    text.length());    	non-compiled	[CE]  <identifier>  expected	86	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  +  1];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  +  1];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  +  1];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
237	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  2];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
238	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[replacements.size()  ]);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList().toArray(new  String[replacements.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList().toArray(new  String[replacements.size()  ]);	  String[]    searchList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
239	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacements,  false);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacements,  false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(replacements,  false);	  String[]    replacementList    =    getReplacements().toArray(replacements);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
240	[BUG]  [BUGGY]  String[]  replaceList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replaceList  =  getReplacementList();  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replaceList  =  getReplacementList();	  String[]    searchList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
241	[BUG]  [BUGGY]  increase  =  Math.max(replacementList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(replacementList.length(),  searchList.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(replacementList.length(),  searchList.length());	  increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
242	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }	  String[]    searchList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
243	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }	  String[]    searchList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
244	[BUG]  [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	MutableString[]  increase  =  new  MutableString[size()  ];	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
245	[BUG]  [BUGGY]  MutableString[]  increase  =  new  MutableString[replacementList.size()  ];  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  increase  =  new  MutableString[replacementList.size()  ];  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	MutableString[]  increase  =  new  MutableString[replacementList.size()  ];	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[replacementList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
247	[BUG]  [BUGGY]  decrease  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  decrease  =  Math.min(repeat,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	decrease  =  Math.min(repeat,  text.length());	  increase    =    Math.min(repeat,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
248	[BUG]  [BUGGY]  long  increase  =  Math.min(replacementList.length(),  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.min(replacementList.length(),  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(replacementList.length(),  5);	  long    increase    =    Math.min(replacementList.length(),    timeToLive);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
249	[BUG]  [BUGGY]  decrease  =  Math.min(adjust,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  decrease  =  Math.min(adjust,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	decrease  =  Math.min(adjust,  text.length());	  increase    =    Math.min(adjust,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
250	[BUG]  [BUGGY]  aughtExceptionHandler.handleEach(buf,  start);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleEach(buf,  start);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleEach(buf,  start);	  aughtExceptionHandler.handleEach(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
251	[BUG]  [BUGGY]  safeMultiply(true);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(true);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(true);	  safeMultiply(replacementList,    false);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
252	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(searchList,  false);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(searchList,  false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(searchList,  false);	  String[]    replacementList    =    getReplacementList(searchList);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
253	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  start);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  start);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMissingName(buf,  start);	  aughtExceptionHandler.handleMissingName(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
254	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length()  /  5);	  System.arraycopy(text,    start,    replacementList,    0,    text.length());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
255	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  this.replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  this.replacementList.length);	  System.arraycopy(text,    start,    searchList,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
256	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  0);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  0);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  0);	  System.arraycopy(text,    start,    searchList,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
257	[BUG]  [BUGGY]  increases  =  Math.min(start,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increases  =  Math.min(start,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increases  =  Math.min(start,  text.length());	  increase    =    Math.min(start,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
258	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  -  1]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  -  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  -  1]);	  String[]    searchList    =    getSearchList().toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
259	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  /  5]);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  /  5]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[size()  /  5]);	  String[]    searchList    =    getSearchList().toArray(new    String[size()    ]);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
260	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[this.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[this.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[this.size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[size()    ]);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
261	[BUG]  [BUGGY]  pending  ||  this.repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  pending  ||  this.repeat)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||  this.repeat)  {  return  buf.toString();  }	  pending    ||    repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
262	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  identifier);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMalformedException( " ",  identifier);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMalformedException( " ",  identifier);	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	104	None	replace
263	[BUG]  [BUGGY]  increase  =  Math.max(alternate,  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(alternate,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(alternate,  text.length());	  increase    =    Math.max(repeat,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
264	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  this.searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  this.searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  this.searchList,  0,  replacementList.length);	  System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
265	[BUG]  [BUGGY]  int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
266	[BUG]  [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
267	[BUG]  [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
268	[BUG]  [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i  +  1);  if(text.charAt(i  +  1)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i  +  1);  if(text.charAt(i  +  1)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i  +  1);  if(text.charAt(i  +  1)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
269	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  return  buf.toString();  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
270	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(!repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(!repeat)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(!repeat)  {  return  buf.toString();  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
271	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  buf.append( ", ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  buf.append( ", ");  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  continue;  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  continue;  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
273	[BUG]  [BUGGY]  last())  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  last())  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	last())  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
274	[BUG]  [BUGGY]  pending  ||  pending  >  0)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  pending  ||  pending  >  0)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||  pending  >  0)  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
275	[BUG]  [BUGGY]  pending  ||(timeToLive  >  0  &&  replaceList.length()  >  0))  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  pending  ||(timeToLive  >  0  &&  replaceList.length()  >  0))  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||(timeToLive  >  0  &&  replaceList.length()  >  0))  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
276	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreIdentifier();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMoreIdentifier();  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMoreIdentifier();	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
277	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replaceList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
278	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replaceList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
279	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length;  i++)  {	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  searchList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  new  String[size()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  new  String[size()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  new  String[size()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
282	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length()  /  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(timeToLive,  text.length()  /  1);	  int    timeToLive    =    Math.min(timeToLive,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
283	[BUG]  [BUGGY]  if(replacementList!=  null)  {  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(replacementList!=  null)  {  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  }	  String[]    searchList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    searchList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
285	[BUG]  [BUGGY]  increase  =  Math.min(replacement,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(replacement,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(replacement,  text.length());	  increase    =    Math.min(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
286	[BUG]  [BUGGY]  long  increase  =  Math.max(replacementList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.max(replacementList.length(),  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.max(replacementList.length(),  text.length());	  long    increase    =    Math.min(replacementList.length(),    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
287	[BUG]  [BUGGY]  increase  =  Math.max(relativeError,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(relativeError,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(relativeError,  text.length());	  increase    =    Math.max(adjust,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
288	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   "n ",  null  }  );  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   "n ",  null  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   "n ",  null  }  );	  safeMultiply(buf,    new    String[]    {       "   ",    null    }    );    	non-compiled	[CE]  <identifier>  expected	59	None	replace
289	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   "n ", "n "  }  );  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   "n ", "n "  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   "n ", "n "  }  );	  safeMultiply(buf,    new    String[]    {       "   ",    null    }    );    	non-compiled	[CE]  <identifier>  expected	59	None	replace
290	[BUG]  [BUGGY]  increases  =  Math.min(adjust,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  increases  =  Math.min(adjust,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increases  =  Math.min(adjust,  text.length());	  increase    =    Math.min(adjust,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
291	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
292	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(timeToLive,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(timeToLive,  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.max(timeToLive,  text.length()  /  5);	  int    timeToLive    =    Math.min(timeToLive,    text.length());    	non-compiled	[CE]  <identifier>  expected	94	None	replace
293	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[repeatList.size()  -  1]);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[repeatList.size()  -  1]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[repeatList.size()  -  1]);	  String[]    searchList    =    getSearchList().toArray(new    String[repeatList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
294	[BUG]  [BUGGY]  int  start  =  Math.max(start,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(start,  text.length()  /  4);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(start,  text.length()  /  4);	  int    start    =    Math.max(start,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
295	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   "- "  }  );  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   "- "  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   "- "  }  );	  safeMultiply(buf,    new    String[]    {       "   "    }    );    	non-compiled	[CE]  <identifier>  expected	61	None	replace
296	[BUG]  [BUGGY]  int  start  =  Math.min(start,  text.length()  /  4);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(start,  text.length()  /  4);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(start,  text.length()  /  4);	  int    start    =    Math.min(start,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
297	[BUG]  [BUGGY]  System.arraycopy(searchList,  start,  searchList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  start,  searchList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  start,  searchList,  0,  searchList.length);	  System.arraycopy(text,    start,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
298	[BUG]  [BUGGY]  System.arraycopy(searchList,  start,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  start,  replacementList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  start,  replacementList,  0,  searchList.length);	  System.arraycopy(text,    start,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
299	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  replaceList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  replaceList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  replaceList.length);	  System.arraycopy(text,    start,    searchList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
300	[BUG]  [BUGGY]  if(aughtException!=  null)  {  aughtException.printStackTrace();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(aughtException!=  null)  {  aughtException.printStackTrace();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(aughtException!=  null)  {  aughtException.printStackTrace();  }	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
301	[BUG]  [BUGGY]  aughtException.printStackTrace(System.out);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtException.printStackTrace(System.out);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtException.printStackTrace(System.out);	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
302	[BUG]  [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
303	[BUG]  [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "   ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
304	[BUG]  [BUGGY]  int  start  =  Math.max(searchList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(searchList.length(),  searchList.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(searchList.length(),  searchList.length());	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
305	[BUG]  [BUGGY]  int  start  =  Math.min(searchList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(searchList.length(),  searchList.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(searchList.length(),  searchList.length());	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
306	[BUG]  [BUGGY]  increases  =  Math.max(adjust,  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  increases  =  Math.max(adjust,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increases  =  Math.max(adjust,  text.length());	  increase    =    Math.max(adjust,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
307	[BUG]  [BUGGY]  safeMultiply(searchList);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(searchList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(searchList);	  safeMultiply(replacementList);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
308	[BUG]  [BUGGY]  increases  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  increases  =  Math.min(repeat,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increases  =  Math.min(repeat,  text.length());	  increase    =    Math.min(repeat,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
309	[BUG]  [BUGGY]  int  start  =  Math.min(searchList.length(),  repeat);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(searchList.length(),  repeat);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(searchList.length(),  repeat);	  int    start    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
310	[BUG]  [BUGGY]  safeMultiply(true));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(true));  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(true));	  safeMultiply(replacementList,    false));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
311	[BUG]  [BUGGY]  int  start  =  Math.min(start,  text.length()  /  2);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(start,  text.length()  /  2);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(start,  text.length()  /  2);	  int    start    =    Math.min(start,    text.length()    /    5);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
312	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  start;  i++)  {  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  start;  i++)  {  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  0;  i  <  start;  i++)  {  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  }	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
313	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  timeToLive;  i++)  {  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  timeToLive;  i++)  {  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  timeToLive;  i++)  {  String[]  searchList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  }	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
314	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  0;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  timeToLive;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                                NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  timeToLive;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  timeToLive;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
316	[BUG]  [BUGGY]  result  =  Math.max(result,  increase);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.max(result,  increase);  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.max(result,  increase);	  result    =    Math.max(result,    text.length());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
317	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   "n ",  false)  }  );  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  safeMultiply(buf,  new  String[]  {   "n ",  false)  }  );  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   "n ",  false)  }  );	  safeMultiply(buf,    new    String[]    {       "   ",    false)    }    );    	non-compiled	[CE]  <identifier>  expected	60	None	replace
318	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  /  4];  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  /  4];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  /  4];	  String[]    replacementList    =    new    String[size()    /    5];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
319	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  /  3];  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  /  3];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  /  3];	  String[]    replacementList    =    new    String[size()    /    5];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
320	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(false,  0);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(false,  0);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(false,  0);	  String[]    replacementList    =    getReplacementList(true);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
321	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  this.replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  this.replacementList.length);	  System.arraycopy(text,    start,    replacementList,    0,    this.replacementList.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
322	[BUG]  [BUGGY]  System.arraycopy(this.replacementList,  start,  replacementList,  0,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(this.replacementList,  start,  replacementList,  0,  this.replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(this.replacementList,  start,  replacementList,  0,  this.replacementList.length);	  System.arraycopy(text,    start,    replacementList,    0,    this.replacementList.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
323	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
324	[BUG]  [BUGGY]  decrease  =  Math.min(crement,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  decrease  =  Math.min(crement,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	decrease  =  Math.min(crement,  text.length());	  increase    =    Math.min(crement,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
325	[BUG]  [BUGGY]  augment  =  Math.min(crement,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  augment  =  Math.min(crement,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	augment  =  Math.min(crement,  text.length());	  increase    =    Math.min(crement,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
326	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.size();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.size();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.size();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
327	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.toArray(new  String[replacementList.size()  ]);  System.arraycopy(replacementList,  0,  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.toArray(new  String[replacementList.size()  ]);  System.arraycopy(replacementList,  0,  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.toArray(new  String[replacementList.size()  ]);  System.arraycopy(replacementList,  0,	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
328	[BUG]  [BUGGY]  while(repeat)  {  return  buf.toString();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(repeat)  {  return  buf.toString();  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	while(repeat)  {  return  buf.toString();	  pending    ||    repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
329	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  searchList.length;  i++)  {  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  searchList.length;  i++)  {  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  0;  i  <  searchList.length;  i++)  {	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
330	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  start  +  replacementList.length;  i++)  {  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  start  +  replacementList.length;  i++)  {  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  0;  i  <  start  +  replacementList.length;  i++)  {	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    for(int    i    =    start;    i    <    start    +    replacementList.length;    i++)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
331	[BUG]  [BUGGY]  AugmentationResult  result  =  Math.min(adjust,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  AugmentationResult  result  =  Math.min(adjust,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	AugmentationResult  result  =  Math.min(adjust,  text.length());	  increase    =    Math.min(adjust,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
332	[BUG]  [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(repeat)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    searchList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
333	[BUG]  [BUGGY]  aughtExceptionHandler.handleEach(buf,  repeat,  false);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleEach(buf,  repeat,  false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleEach(buf,  repeat,  false);	  aughtExceptionHandler.handleEach(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
334	[BUG]  [BUGGY]  AugmentationResult  result  =  Math.max(adjust,  text.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  AugmentationResult  result  =  Math.max(adjust,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	AugmentationResult  result  =  Math.max(adjust,  text.length());	  increase    =    Math.max(adjust,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
335	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  searchList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
336	[BUG]  [BUGGY]  int  start  =  Math.max(Integer.MIN_VALUE,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(Integer.MIN_VALUE,  text.length()  -  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(Integer.MIN_VALUE,  text.length()  -  1);	  int    start    =    Math.max(increase,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
337	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '0')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '0')  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '0')  {  return  buf.toString();  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
338	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return  buf.toString();  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
339	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '0')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '0')  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '0')  {  return  buf.toString();  }	  [Delete]    	non-compiled	[CE]  <identifier>  expected	73	None	replace
340	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[segmentList.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[segmentList.size()  ]);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[segmentList.size()  ]);	  String[]    searchList    =    getSearchList().toArray(new    String[searchList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
341	[BUG]  [BUGGY]  int  start  =  Math.max(searchList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(searchList.length(),  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(searchList.length(),  text.length());	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
342	[BUG]  [BUGGY]  int  start  =  Math.min(searchList.length(),  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(searchList.length(),  text.length()  /  5);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(searchList.length(),  text.length()  /  5);	  int    start    =    Math.min(searchList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
343	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  this.replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  this.replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  this.replacementList,  0,  replacementList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
344	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  searchList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  searchList.length);	  String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
345	[BUG]  [BUGGY]  increase  =  Math.max(2  *  increase,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(2  *  increase,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(2  *  increase,  text.length());	  increase    =    Math.max(1L,    text.length());    	non-compiled	[CE]  <identifier>  expected	96	None	replace
346	[BUG]  [BUGGY]  int  start  =  Math.max(10.0,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(10.0,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(10.0,  text.length());	  int    start    =    Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
347	[BUG]  [BUGGY]  AugmentationResult  result  =  Math.min(creator,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  AugmentationResult  result  =  Math.min(creator,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	AugmentationResult  result  =  Math.min(creator,  text.length());	  increase    =    Math.min(creator,    text.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
348	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  [5];  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  [5];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  [5];	  String[]    replacementList    =    new    String[size()    -    1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
349	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  replacementList.length);	  System.arraycopy(text,    start,    searchList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
350	[BUG]  [BUGGY]  int  start  =  Math.min(searchList.length,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(searchList.length,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(searchList.length,  text.length());	  int    start    =    Math.min(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
351	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( " ");  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( " ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( " ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "       ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
352	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(null,  searchList);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(null,  searchList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(null,  searchList);	  String[]    replacementList    =    getReplacementList(null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
353	[BUG]  [BUGGY]  System.arraycopy(searchList,  start,  text,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  start,  text,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  start,  text,  0,  replacementList.length);	  System.arraycopy(text,    start,    replacementList,    0,    searchList.length);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
354	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(new  NullPointerException());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed(new  NullPointerException());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMoreGuaranteed(new  NullPointerException());	  aughtExceptionHandler.handleMoreGuaranteed();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
355	[BUG]  [BUGGY]  result  =  Math.max(relativeError,  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  result  =  Math.max(relativeError,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.max(relativeError,  text.length());	  result    =    Math.max(result,    text.length());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
356	[BUG]  [BUGGY]  while(!repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(!repeat)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	while(!repeat)  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
357	[BUG]  [BUGGY]  while(!repeated)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(!repeated)  {  return  buf.toString();  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	while(!repeated)  {  return  buf.toString();  }	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
358	[BUG]  [BUGGY]  int  start  =  Math.min(start,  text.length()  -  start);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.min(start,  text.length()  -  start);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(start,  text.length()  -  start);	  pending)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
359	[BUG]  [BUGGY]  increase  =  Math.min(repair,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.min(repair,  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(repair,  text.length());	  increase    =    Math.min(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
360	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  repeat,  false);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  repeat,  false);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMissingName(buf,  repeat,  false);	  aughtExceptionHandler.handleMissingName(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
361	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
362	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
363	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  this.replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(searchList,  0,  this.replacementList,  0,  replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  this.replacementList,  0,  replacementList.length);	  System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
364	[BUG]  [BUGGY]  long  increase  =  Math.min(searchList.length(),  timeToLive);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.min(searchList.length(),  timeToLive);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(searchList.length(),  timeToLive);	  long    increase    =    Math.min(replacementList.length(),    timeToLive);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
365	[BUG]  [BUGGY]  long  increase  =  Math.max(searchList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  increase  =  Math.max(searchList.length(),  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.max(searchList.length(),  text.length());	  long    increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	99	None	replace
366	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    start;    i++)    {    String[]    replacementList    =    new    String[size()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
367	[BUG]  [BUGGY]  int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
368	[BUG]  [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
369	[BUG]  [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return  buf.toString();  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  timeToLive;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return  buf.toString();  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
370	[BUG]  [BUGGY]  int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i  +  1);  if(text.charAt(i  +  1)!=  '-')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i  +  1);  if(text.charAt(i  +  1)!=  '-')  {  return  buf.toString();  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i  +  1);  if(text.charAt(i  +  1)!=  '-')  {  return  buf.toString();  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
371	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(replacements);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(replacements);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList().toArray(replacements);	  String[]    replacementList    =    getReplacements().toArray(replacements);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
372	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( ", ");  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
373	[BUG]  [BUGGY]  int  start  =  Math.max(searchList.length,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(searchList.length,  text.length());  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(searchList.length,  text.length());	  int    start    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
374	[BUG]  [BUGGY]  int  start  =  Math.max(repeat,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(repeat,  text.length()  +  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(repeat,  text.length()  +  1);	  int    start    =    Math.max(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
375	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }	  String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
376	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  text.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  text.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  text.length);	  System.arraycopy(text,    start,    replacementList,    0,    text.length);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
377	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  repeat,  0);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  repeat,  0);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  repeat,  0);	  aughtExceptionHandler.handleMatcher(buf,    repeat);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
378	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  3];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  3];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  3];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(replacementList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
379	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  5];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  5];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  /  5];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	  for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    +    1];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
380	[BUG]  [BUGGY]  increase  =  Math.max(replacementList.length(),  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  increase  =  Math.max(replacementList.length(),  text.length());  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(replacementList.length(),  text.length());	  increase    =    Math.min(replacementList.length(),    text.length());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
381	[BUG]  [BUGGY]  System.arraycopy(text,  start,  this.replacementList,  0,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  System.arraycopy(text,  start,  this.replacementList,  0,  this.replacementList.length);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  this.replacementList,  0,  this.replacementList.length);	  System.arraycopy(text,    start,    replacementList,    0,    this.replacementList.length);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
382	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  +  5];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  new  String[size()  +  5];  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  +  5];	  String[]    replacementList    =    new    String[size()    %    5];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
383	[BUG]  [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
384	[BUG]  [BUGGY]  MutableString[]  increase  =  new  MutableString[text.length()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  increase  =  new  MutableString[text.length()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	MutableString[]  increase  =  new  MutableString[text.length()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
385	[BUG]  [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increment;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increment;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increment;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
386	[BUG]  [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }  [BUGGY]        StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	MutableString[]  increase  =  new  MutableString[size()  ];  for(int  i  =  start;  i  <  increase;  i++)  {  text.charAt(i);  if(text.charAt(i)  ==  '-')  {  return;  }	  for(int    i    =    start;    i    <    start;    i++)    {    text.charAt(i);    if(text.charAt(i)!=    '-')    {    return;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
387	[BUG]  [BUGGY]  int  start  =  Math.max(increase,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(increase,  text.length()  /  1);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(increase,  text.length()  /  1);	  int    start    =    Math.max(start,    text.length()    /    1);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
388	[BUG]  [BUGGY]  if(error)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  if(error)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(error)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
389	[BUG]  [BUGGY]  if(error)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  if(error)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	if(error)  {  aughtException.printStackTrace();  }  else  {  throw  new  IllegalStateException( " ");  }	  aughtException.printStackTrace();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
390	[BUG]  [BUGGY]  int  start  =  Math.max(1,  text.length()  -  2);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  Math.max(1,  text.length()  -  2);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(1,  text.length()  -  2);	  int    start    =    Math.max(1,    text.length());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
391	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(this.searchList);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(this.searchList);  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(this.searchList);	  String[]    replacementList    =    getReplacementList(searchList);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
392	[BUG]  [BUGGY]  String[]  searchList  =  getSelectedReplacementList();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  searchList  =  getSelectedReplacementList();  [BUGGY]      increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSelectedReplacementList();	  String[]    searchList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
