bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  +  1];  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  new  String[size()  +  1];  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  +  1];	      String[]    replacementList    =    new    String[size()    ];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  -  1];  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  new  String[size()  -  1];  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  -  1];	      String[]    replacementList    =    new    String[size()    ];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  /  5];  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  new  String[size()  /  5];  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  /  5];	      String[]    replacementList    =    new    String[size()    ];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
4	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(true);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(true);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(true);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(null);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(null);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(null);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(replacementIndex);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(replacementIndex);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
7	[BUG]  [BUGGY]  increase  =  Math.min(adjust,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(adjust,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(adjust,  text.length()  -  1);	  increase    =    Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
8	[BUG]  [BUGGY]  increase  =  Math.min(adjust,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(adjust,  text.length()  +  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(adjust,  text.length()  +  1);	  increase    =    Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
9	[BUG]  [BUGGY]  increase  =  Math.max(adjust,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(adjust,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(adjust,  text.length()  -  1);	  increase    =    Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
10	[BUG]  [BUGGY]  increase  =  Math.max(adjust,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(adjust,  text.length()  +  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(adjust,  text.length()  +  1);	  increase    =    Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
11	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(replacementList[i]);  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(replacementList[i]);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(replacementList[i]);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(replacementList[i]);  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(replacementList[i]);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(replacementList[i]);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(searchList[i]);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  pending  ||  repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  pending  ||  repeat)  {  return  buf.toString();  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending  ||  repeat)  {  return  buf.toString();  }	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMoreGuaranteed();  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMoreGuaranteed();	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler.handleEach(buf,  repeat);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleEach(buf,  repeat);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleEach(buf,  repeat);	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
17	[BUG]  [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  repeat);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMatcher(buf,  repeat);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMatcher(buf,  repeat);	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
18	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  searchList,  0,  replacementList.length);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
21	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  searchList.length);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  searchList.length);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
22	[BUG]  [BUGGY]  increase  =  Math.max(0,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(0,  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(0,  text.length());	  increase    =    Math.min(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
23	[BUG]  [BUGGY]  increase  =  Math.min(start,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(start,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(start,  text.length()  -  1);	  increase    =    Math.min(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
24	[BUG]  [BUGGY]  increase  =  Math.min(crement,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(crement,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(crement,  text.length()  -  1);	  increase    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  increase  =  Math.min(repeat,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(repeat,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(repeat,  text.length()  -  1);	  increase    =    Math.min(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  increase  =  Math.max(repeat,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(repeat,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(repeat,  text.length()  -  1);	  increase    =    Math.min(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  result  =  Math.min(result,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  result  =  Math.min(result,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.min(result,  text.length()  -  1);	  increase    =    Math.min(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  increase  =  Math.min(repeat,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(repeat,  text.length()  +  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(repeat,  text.length()  +  1);	  increase    =    Math.min(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "   ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "   ");  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "   ");  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ", ");  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( ", ");  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "n ");  }  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "n ");  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "n ");  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append(text.charAt(i));  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length());	      System.arraycopy(text,    start,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  searchList.length);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  searchList.length);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  searchList.length);	      System.arraycopy(text,    start,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  this.replacementList.length);	      System.arraycopy(text,    start,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  itemCount);  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  itemCount);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  itemCount);	      System.arraycopy(text,    start,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
39	[BUG]  [BUGGY]  int  start  =  Math.min(start,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.min(start,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(start,  text.length());	      int    start    =    Math.min(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
40	[BUG]  [BUGGY]  int  start  =  Math.max(0,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.max(0,  text.length()  -  1);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(0,  text.length()  -  1);	      int    start    =    Math.min(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
41	[BUG]  [BUGGY]  int  start  =  Math.max(1,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.max(1,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(1,  text.length());	      int    start    =    Math.min(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
42	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  ]);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(new  String[replacements.size()  ]);	      String[]    replacementList    =    getReplacements();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
43	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacementList);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacementList);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(replacementList);	      String[]    replacementList    =    getReplacements();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
44	[BUG]  [BUGGY]  increase  =  Math.min(creator,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(creator,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(creator,  text.length()  -  1);	  increase    =    Math.min(creator,    text.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  increase  =  Math.min(creator,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(creator,  text.length()  +  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(creator,  text.length()  +  1);	  increase    =    Math.min(creator,    text.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
46	[BUG]  [BUGGY]  int  start  =  Math.min(increase,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.min(increase,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(increase,  text.length());	      int    start    =    Math.max(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  int  start  =  Math.max(0,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.max(0,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(0,  text.length());	      int    start    =    Math.max(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  increase  =  Math.min(0,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(0,  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(0,  text.length());	  increase    =    Math.min(increase,    text.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
49	[BUG]  [BUGGY]  int  start  =  Math.max(start,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.max(start,  text.length()  /  1);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(start,  text.length()  /  1);	      int    start    =    Math.max(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
50	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append( "n ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
51	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  searchList.length;  i++)  {  buf.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
52	[BUG]  [BUGGY]  String[]  searchList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getReplacementList();  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getReplacementList();	      String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  ]);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  ]);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[searchList.size()  ]);	      String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
54	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  ]);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[replacementList.size()  ]);	      String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  repeat);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(text,  start,  searchList,  0,  repeat);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  0,  repeat);	      System.arraycopy(text,    start,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
56	[BUG]  [BUGGY]  int  start  =  Math.min(start,  text.length()  /  1);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.min(start,  text.length()  /  1);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(start,  text.length()  /  1);	      int    start    =    Math.min(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
57	[BUG]  [BUGGY]  int  start  =  Math.min(start,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.min(start,  text.length()  /  5);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(start,  text.length()  /  5);	      int    start    =    Math.min(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
58	[BUG]  [BUGGY]  String[]  replacementList  =  new  String[size()  %  5];  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  new  String[size()  %  5];  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  new  String[size()  %  5];	      String[]    replacementList    =    new    String[size()    ];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  null  }  );  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  null  }  );  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   " ",  null  }  );	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  false)  }  );  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(buf,  new  String[]  {   " ",  false)  }  );  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   " ",  false)  }  );	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  safeMultiply(buf,  new  String[]  {   " "  }  );  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(buf,  new  String[]  {   " "  }  );  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(buf,  new  String[]  {   " "  }  );	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(replacementList[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(searchList);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(searchList);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(searchList);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
63	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(false);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(false);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacementList(false);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
64	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[repeatList.size()  ]);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[repeatList.size()  ]);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[repeatList.size()  ]);	      String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
65	[BUG]  [BUGGY]  safeMultiply(replacementList,  false));  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(replacementList,  false));  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(replacementList,  false));	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  safeMultiply(replacementList,  false);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(replacementList,  false);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(replacementList,  false);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
67	[BUG]  [BUGGY]  safeMultiply(replacementList);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(replacementList);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	safeMultiply(replacementList);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[replacementList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replaceList  =  new  String[searchList.length()  ];  System.arraycopy(replacementList,  0,  replacementList,  0,  replacementList.length);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  pending)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  pending)  {  return  buf.toString();  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	pending)  {  return  buf.toString();  }	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
73	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  [Delete]  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	[Delete]	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
74	[BUG]  [BUGGY]  aughtException.printStackTrace();  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  aughtException.printStackTrace();  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtException.printStackTrace();	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
75	[BUG]  [BUGGY]  result  =  Math.min(repeat,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  result  =  Math.min(repeat,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.min(repeat,  text.length()  -  1);	  increase    =    Math.min(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
76	[BUG]  [BUGGY]  increase  =  Math.max(repeat,  text.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(repeat,  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(repeat,  text.length());	  increase    =    Math.min(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
77	[BUG]  [BUGGY]  increase  =  Math.min(increment,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(increment,  text.length()  -  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(increment,  text.length()  -  1);	  increase    =    Math.min(increment,    text.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
78	[BUG]  [BUGGY]  increase  =  Math.min(replacementList.length(),  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(replacementList.length(),  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(replacementList.length(),  text.length());	  increase    =    Math.min(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
79	[BUG]  [BUGGY]  increase  =  Math.min(start,  text.length()  +  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.min(start,  text.length()  +  1);  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(start,  text.length()  +  1);	  increase    =    Math.min(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
80	[BUG]  [BUGGY]  int  start  =  Math.min(searchList.length(),  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.min(searchList.length(),  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(searchList.length(),  text.length());	      int    start    =    Math.max(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
81	[BUG]  [BUGGY]  int  start  =  Math.max(start,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.max(start,  text.length()  /  5);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(start,  text.length()  /  5);	      int    start    =    Math.max(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
82	[BUG]  [BUGGY]  long  start  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  long  start  =  System.currentTimeMillis();  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  start  =  System.currentTimeMillis();	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  +  1];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    new    String[searchList.length()    ];    System.arraycopy(searchList,    0,    replacementList,    0,    replacementList.length);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
84	[BUG]  [BUGGY]  int  start  =  Math.max(increase,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.max(increase,  text.length()  -  1);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(increase,  text.length()  -  1);	      int    start    =    Math.max(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
85	[BUG]  [BUGGY]  int  start  =  Math.max(repeat,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.max(repeat,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.max(repeat,  text.length());	      int    start    =    Math.max(start,    text.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
86	[BUG]  [BUGGY]  increase  =  Math.max(creator,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(creator,  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(creator,  text.length());	  increase    =    Math.min(creator,    text.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return  buf.toString();  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
88	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  start;  i++)  {  text.charAt(i);  if(text.charAt(i)!=  '-')  {  return;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  for(int  i  =  start;  i  <  start  +  replacementList.length;  i++)  {	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
90	[BUG]  [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  start;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	for(int  i  =  start;  i  <  start;  i++)  {  String[]  replacementList  =  new  String[size()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  repeat);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(text,  start,  searchList,  replacementList,  0,  repeat);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  searchList,  replacementList,  0,  repeat);	      System.arraycopy(text,    start,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(text,  start,  replacementList,  0,  text.length);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	System.arraycopy(text,  start,  replacementList,  0,  text.length);	      System.arraycopy(text,    start,    replacementList,    0,    repeat);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length()  /  5);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(timeToLive,  text.length()  /  5);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
94	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(timeToLive,  text.length());	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(timeToLive,  text.length()  -  1);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(timeToLive,  text.length()  -  1);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(searchList[i]);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
96	[BUG]  [BUGGY]  increase  =  Math.max(1L,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(1L,  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(1L,  text.length());	  increase    =    Math.min(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
97	[BUG]  [BUGGY]  long  increase  =  Math.min(replacementList.length(),  timeToLive);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  long  increase  =  Math.min(replacementList.length(),  timeToLive);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(replacementList.length(),  timeToLive);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
98	[BUG]  [BUGGY]  long  increase  =  Math.min(replacementList.length(),  text.length()  /  5);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  long  increase  =  Math.min(replacementList.length(),  text.length()  /  5);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(replacementList.length(),  text.length()  /  5);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
99	[BUG]  [BUGGY]  long  increase  =  Math.min(replacementList.length(),  text.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  long  increase  =  Math.min(replacementList.length(),  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	long  increase  =  Math.min(replacementList.length(),  text.length());	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
100	[BUG]  [BUGGY]  increase  =  Math.max(adjust,  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  increase  =  Math.max(adjust,  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.max(adjust,  text.length());	  increase    =    Math.min(adjust,    text.length());    	non-compiled	[CE]  <identifier>  expected	21	None	replace
101	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length()  /  5);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(repeat,  text.length()  /  5);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  timeToLive  =  Math.min(repeat,  text.length()  /  5);	      for(int    i    =    start;    i    <    searchList.length();    i++)    {    String[]    replacementList    =    getReplacementList();    for(int    i    =    start;    i    <    replacementList.length;    i++)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
102	[BUG]  [BUGGY]  result  =  Math.max(result,  text.length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  result  =  Math.max(result,  text.length());  [BUGGY]      StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	result  =  Math.max(result,  text.length());	  increase    =    Math.min(repeat,    text.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  int  start  =  Math.min(increment,  text.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  Math.min(increment,  text.length());  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	int  start  =  Math.min(increment,  text.length());	      int    start    =    Math.max(start,    text.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
104	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMalformedException( " ");	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
105	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  repeat);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingName(buf,  repeat);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	aughtExceptionHandler.handleMissingName(buf,  repeat);	      if(repeat)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
106	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacements);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacements().toArray(replacements);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  replacementList  =  getReplacements().toArray(replacements);	      String[]    replacementList    =    getReplacements();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
107	[BUG]  [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  ]);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  searchList  =  getSearchList().toArray(new  String[size()  ]);  [BUGGY]    increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	String[]  searchList  =  getSearchList().toArray(new  String[size()  ]);	      String[]    searchList    =    getSearchList();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
