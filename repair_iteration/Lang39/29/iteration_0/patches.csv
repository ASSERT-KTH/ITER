bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  increase  =  Math.min(increase,  text.length());  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  increase  =  Math.min(increase,  text.length());  [BUGGY]    StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(increase,  text.length());	increase  =  Math.min(increase,  text.length()  /  5);  	non-compiled	[CE]  <identifier>  expected	57	None	replace
2	[BUG]  [BUGGY]  increase  =  Math.min(increment,  text.length());  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  increase  =  Math.min(increment,  text.length());  [BUGGY]    StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(increment,  text.length());	increase  =  Math.min(increase,  text.length()  /  5);  	non-compiled	[CE]  <identifier>  expected	57	None	replace
3	[BUG]  [BUGGY]  increase  =  Math.min(creator,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  increase  =  Math.min(creator,  text.length());  [BUGGY]    StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(creator,  text.length());	increase  =  Math.min(increase,  text.length()  /  5);  	non-compiled	[CE]  <identifier>  expected	57	None	replace
4	[BUG]  [BUGGY]  increase  =  Math.min(repeat,  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  increase  =  Math.min(repeat,  text.length());  [BUGGY]    StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(repeat,  text.length());	increase  =  Math.min(increase,  text.length()  /  5);  	non-compiled	[CE]  <identifier>  expected	57	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]    StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	  	increase  =  Math.min(increase,  text.length()  /  5);  	non-compiled	[CE]  <identifier>  expected	57	None	replace
6	[BUG]  [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(text.charAt(i));  }		non-compiled	[CE]  <identifier>  expected	58	None	add
7	[BUG]  [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(replacementList[i]);  }  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(replacementList[i]);  }  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(replacementList[i]);  }		non-compiled	[CE]  <identifier>  expected	58	None	add
8	[BUG]  [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append(searchList[i]);  }		non-compiled	[CE]  <identifier>  expected	58	None	add
9	[BUG]  [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "n ");  }  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "n ");  }  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  getReplacementList();  for(int  i  =  start;  i  <  replacementList.length;  i++)  {  buf.append( "n ");  }		non-compiled	[CE]  <identifier>  expected	58	None	add
10	[BUG]  [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    for(int  i  =  start;  i  <  searchList.length();  i++)  {  String[]  replacementList  =  new  String[searchList.length()  ];  System.arraycopy(searchList,  0,  replacementList,  0,  replacementList.length);  }		non-compiled	[CE]  <identifier>  expected	58	None	add
11	[BUG]  [BUGGY]    String[]  replacementList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    String[]  replacementList  =  getReplacementList();  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    String[]  replacementList  =  getReplacementList();		non-compiled	[CE]  <identifier>  expected	58	None	add
12	[BUG]  [BUGGY]    String[]  searchList  =  getSearchList();  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    String[]  searchList  =  getSearchList();  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    String[]  searchList  =  getSearchList();		non-compiled	[CE]  <identifier>  expected	58	None	add
13	[BUG]  [BUGGY]    if(repeat)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    if(repeat)  {  return  buf.toString();  }  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    if(repeat)  {  return  buf.toString();  }		non-compiled	[CE]  <identifier>  expected	58	None	add
14	[BUG]  [BUGGY]    String[]  replacementList  =  new  String[size()  ];  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    String[]  replacementList  =  new  String[size()  ];  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    String[]  replacementList  =  new  String[size()  ];		non-compiled	[CE]  <identifier>  expected	58	None	add
15	[BUG]  [BUGGY]    String[]  replacementList  =  getReplacements();  [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    String[]  replacementList  =  getReplacements();  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    String[]  replacementList  =  getReplacements();		non-compiled	[CE]  <identifier>  expected	58	None	add
16	[BUG]  [BUGGY]    int  start  =  Math.min(start,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int  start  =  Math.min(start,  text.length()  -  1);  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    int  start  =  Math.min(start,  text.length()  -  1);		non-compiled	[CE]  <identifier>  expected	58	None	add
17	[BUG]  [BUGGY]    int  start  =  Math.max(start,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    int  start  =  Math.max(start,  text.length()  -  1);  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    int  start  =  Math.max(start,  text.length()  -  1);		non-compiled	[CE]  <identifier>  expected	58	None	add
18	[BUG]  [BUGGY]    int  start  =  Math.max(start,  text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int  start  =  Math.max(start,  text.length());  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    int  start  =  Math.max(start,  text.length());		non-compiled	[CE]  <identifier>  expected	58	None	add
19	[BUG]  [BUGGY]    System.arraycopy(text,  start,  replacementList,  0,  repeat);  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    System.arraycopy(text,  start,  replacementList,  0,  repeat);  [BUGGY]  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	    System.arraycopy(text,  start,  replacementList,  0,  repeat);		non-compiled	[CE]  <identifier>  expected	58	None	add
20	[BUG]  [BUGGY]  increase  =  Math.min(start,  text.length());  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  increase  =  Math.min(start,  text.length());  [BUGGY]    StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(start,  text.length());	increase  =  Math.min(increase,  text.length()  /  5);  	non-compiled	[CE]  <identifier>  expected	57	None	replace
21	[BUG]  [BUGGY]  increase  =  Math.min(adjust,  text.length());  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  increase  =  Math.min(adjust,  text.length());  [BUGGY]    StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  for  (int  i  =  start;  i  <  textIndex;  i++)  {  buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3682	3682	1	replace	increase  =  Math.min(adjust,  text.length());	increase  =  Math.min(increase,  text.length()  /  5);  	non-compiled	[CE]  <identifier>  expected	57	None	replace
