bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length());  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length());		non-compiled	[CE]  <identifier>  expected	54	None	add
2	[BUG]  [BUGGY]    int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length());  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length());		non-compiled	[CE]  <identifier>  expected	54	None	add
3	[BUG]  [BUGGY]    int  timeToLive  =  Math.max(replacementList.length(),  increase);  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.max(replacementList.length(),  increase);  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  timeToLive  =  Math.max(replacementList.length(),  increase);		non-compiled	[CE]  <identifier>  expected	54	None	add
4	[BUG]  [BUGGY]    int  timeToLive  =  Math.min(replacementList.length(),  increase);  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.min(replacementList.length(),  increase);  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  timeToLive  =  Math.min(replacementList.length(),  increase);		non-compiled	[CE]  <identifier>  expected	54	None	add
5	[BUG]  [BUGGY]    int  timeToLive  =  Math.max(replacementList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.max(replacementList[i].length()  -  1);  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  timeToLive  =  Math.max(replacementList[i].length()  -  1);		non-compiled	[CE]  <identifier>  expected	54	None	add
6	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  replacementList[i].length();  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  int  greater  =  searchList[i].length()  -  replacementList[i].length();  [BUGGY]  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  replacementList[i].length();	int  greater  =  replacementList[i].length()  -  searchList[i].length();  	non-compiled	[CE]  <identifier>  expected	53	None	replace
7	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  replaceList[i].length();  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  int  greater  =  searchList[i].length()  -  replaceList[i].length();  [BUGGY]  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  replaceList[i].length();	int  greater  =  replacementList[i].length()  -  searchList[i].length();  	non-compiled	[CE]  <identifier>  expected	53	None	replace
8	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  originalList[i].length();  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  int  greater  =  searchList[i].length()  -  originalList[i].length();  [BUGGY]  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  originalList[i].length();	int  greater  =  replacementList[i].length()  -  searchList[i].length();  	non-compiled	[CE]  <identifier>  expected	53	None	replace
9	[BUG]  [BUGGY]    if(replacementList!=  null)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    if(replacementList!=  null)  {  return  buf.toString();  }  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    if(replacementList!=  null)  {  return  buf.toString();  }		non-compiled	[CE]  <identifier>  expected	54	None	add
10	[BUG]  [BUGGY]    StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  searchList[i].length());  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  searchList[i].length());		non-compiled	[CE]  <identifier>  expected	54	None	add
11	[BUG]  [BUGGY]    StringBuffer  buf  =  new  StringBuffer(replacementList.length());  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    StringBuffer  buf  =  new  StringBuffer(replacementList.length());  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    StringBuffer  buf  =  new  StringBuffer(replacementList.length());		non-compiled	[CE]  <identifier>  expected	54	None	add
12	[BUG]  [BUGGY]    int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length());  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length());		non-compiled	[CE]  <identifier>  expected	54	None	add
13	[BUG]  [BUGGY]    int  timeToLive  =  Math.min(replacementList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    int  timeToLive  =  Math.min(replacementList.length(),  searchList.length());  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  timeToLive  =  Math.min(replacementList.length(),  searchList.length());		non-compiled	[CE]  <identifier>  expected	54	None	add
14	[BUG]  [BUGGY]    int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));		non-compiled	[CE]  <identifier>  expected	54	None	add
15	[BUG]  [BUGGY]    int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r'));  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r'));  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r'));		non-compiled	[CE]  <identifier>  expected	54	None	add
16	[BUG]  [BUGGY]    int  textIndex  =  searchList[i].lastIndexOf('.');  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int  textIndex  =  searchList[i].lastIndexOf('.');  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  textIndex  =  searchList[i].lastIndexOf('.');		non-compiled	[CE]  <identifier>  expected	54	None	add
17	[BUG]  [BUGGY]    int  textIndex  =  searchList[i].indexOf('.')+  1);  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    int  textIndex  =  searchList[i].indexOf('.')+  1);  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  textIndex  =  searchList[i].indexOf('.')+  1);		non-compiled	[CE]  <identifier>  expected	54	None	add
18	[BUG]  [BUGGY]    int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  1;  [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  1;  [BUGGY]  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	    int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  1;		non-compiled	[CE]  <identifier>  expected	54	None	add
19	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  -  searchList[i].length();  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  int  greater  =  this.replacementList[i].length()  -  searchList[i].length();  [BUGGY]  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  -  searchList[i].length();	int  greater  =  replacementList[i].length()  -  searchList[i].length();  	non-compiled	[CE]  <identifier>  expected	53	None	replace
