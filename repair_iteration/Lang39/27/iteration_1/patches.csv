bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  replaceList[i].length();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  +  replaceList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  replaceList[i].length();	  int    greater    =    searchList[i].length()    -    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
2	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  replaceList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  *  replaceList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  replaceList[i].length();	  int    greater    =    searchList[i].length()    -    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList.length()  -  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList.length()  -  1);	      int    timeToLive    =    Math.min(replacementList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList.length()  -  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList.length()  -  1);	      int    timeToLive    =    Math.min(replacementList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length());	      int    timeToLive    =    Math.min(replacementList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])-  1;  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])-  1;  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])-  1;	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
7	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  1;  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  1;	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
8	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  2;  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  2;  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  2;	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
9	[BUG]  [BUGGY]  int  greater  =  originalList[i].length()  -  searchList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  originalList[i].length()  -  searchList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  originalList[i].length()  -  searchList[i].length();	  int    greater    =    searchList[i].length()    -    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  originalList[i].length();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  *  originalList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  originalList[i].length();	  int    greater    =    searchList[i].length()    -    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  originalList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  +  originalList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  originalList[i].length();	  int    greater    =    searchList[i].length()    -    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')+  1;  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')+  1;  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.')+  1;	      int    textIndex    =    searchList[i].indexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.')+  1);	      int    textIndex    =    searchList[i].indexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
14	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.')+  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.')+  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('.')+  1);	      int    textIndex    =    searchList[i].indexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
15	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  0));  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  0));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  0));	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
16	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive));  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive));	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
17	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r'));  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r'));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r'));	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  repeat));  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  repeat));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  repeat));	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length());	      int    timeToLive    =    Math.max(replacementList[i].length()    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList[i].length());	      int    timeToLive    =    Math.max(replacementList[i].length()    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  replacementList[i].length();  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  +  replacementList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  replacementList[i].length();	  int    greater    =    searchList[i].length()    -    replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  replacementList[i].length();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  *  replacementList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  replacementList[i].length();	  int    greater    =    searchList[i].length()    -    replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length());	      int    timeToLive    =    Math.max(replacementList[i].length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  +  searchList[i].length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  +  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  +  searchList[i].length());	      int    timeToLive    =    Math.max(replacementList[i].length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length()  +  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length()  +  1);	      int    timeToLive    =    Math.max(replacementList[i].length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length()  -  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length()  -  1);	      int    timeToLive    =    Math.max(replacementList[i].length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length());	      int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length());	      int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  -  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  -  1);	      int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  +  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  +  1);	      int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  3);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  3);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  3);	      int    timeToLive    =    Math.min(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  1);	      int    timeToLive    =    Math.min(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  2);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  2);	      int    timeToLive    =    Math.min(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  3);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  3);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  3);	      int    timeToLive    =    Math.max(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  1);	      int    timeToLive    =    Math.max(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  2);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  2);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  2);	      int    timeToLive    =    Math.max(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
37	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));	      int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
38	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive));  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive));	      int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  1);	      int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  0));  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  0));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  0));	      int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
41	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.');  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.');  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.');	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
42	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  1);	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
43	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  3);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  3);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  3);	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
44	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  0);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  0);	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
45	[BUG]  [BUGGY]  return  buf.toString();  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return  buf.toString();  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  buf.toString();	      if(replacementList!=    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
46	[BUG]  [BUGGY]  if(replacementList  ==  null)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(replacementList  ==  null)  {  return  buf.toString();  }  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList  ==  null)  {  return  buf.toString();  }	      if(replacementList!=    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  if(searchList!=  null)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(searchList!=  null)  {  return  buf.toString();  }  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(searchList!=  null)  {  return  buf.toString();  }	      if(replacementList!=    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length());	      StringBuffer    buf    =    new    StringBuffer(replacementList.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  1);	      StringBuffer    buf    =    new    StringBuffer(replacementList.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  1);	      StringBuffer    buf    =    new    StringBuffer(replacementList.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  2);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  2);	      StringBuffer    buf    =    new    StringBuffer(replacementList.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
52	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  this.replacementList[i].length();  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  -  this.replacementList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  this.replacementList[i].length();	  int    greater    =    this.replacementList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
53	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  -  searchList[i].length()  +  1;  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  this.replacementList[i].length()  -  searchList[i].length()  +  1;  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  -  searchList[i].length()  +  1;	  int    greater    =    this.replacementList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
54	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  *  searchList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  this.replacementList[i].length()  *  searchList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  *  searchList[i].length();	  int    greater    =    this.replacementList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
55	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  -  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  -  1);	      int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
56	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  +  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  +  1);	      int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  replacementList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  replacementList[i].length());	      int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
58	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  -  2);  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  -  2);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length()  -  2);	      int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
59	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length());	      StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
60	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length());	      StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
61	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  -  replacementList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  -  replacementList[i].length());	      StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  replacementList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  replacementList[i].length());	      StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  searchList[i].length();  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  -  searchList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  searchList[i].length();	  int    greater    =    searchList[i].length()    -    replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList.length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList.length());	      int    timeToLive    =    Math.max(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
65	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  this.replaceList[i].length();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  -  this.replaceList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  this.replaceList[i].length();	  int    greater    =    searchList[i].length()    -    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  int  greater  =  replaceList[i].length()  -  searchList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  replaceList[i].length()  -  searchList[i].length();  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  replaceList[i].length()  -  searchList[i].length();	  int    greater    =    searchList[i].length()    -    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  /  2);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  /  2);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  -  searchList[i].length()  /  2);	      int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
68	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  1);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  1);	      int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
69	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].lastIndexOf('-')+  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].lastIndexOf('-')+  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  searchList[i].lastIndexOf('-')+  1);	      int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
70	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  searchList[i].length()  +  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  searchList[i].length()  +  1);	      StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList.length);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList.length);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList.length);	      int    timeToLive    =    Math.min(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length());  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length());	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
73	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.');  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('.');  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.');	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
74	[BUG]  [BUGGY]  if(replacementList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(replacementList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }	      StringBuffer    buf    =    new    StringBuffer(replacementList.length());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
75	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  replacementList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  replacementList.length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList.length(),  replacementList.length());	      int    timeToLive    =    Math.min(replacementList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
76	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  replacementList.length());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  replacementList.length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  replacementList.length());	      int    timeToLive    =    Math.min(replacementList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
77	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList[i].length(),  replacementList[i].length());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.min(searchList[i].length(),  replacementList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList[i].length(),  replacementList[i].length());	      int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
78	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  1);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  1);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  1);	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
79	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  0;  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  0;  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])+  0;	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
80	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r'));  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r'));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r'));	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
81	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('-'));  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('-'));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('-'));	      int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
82	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  1;  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  1;  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  1;	      int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    1;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
83	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  replacementList[i].length()  +  1;  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  greater  =  searchList[i].length()  -  replacementList[i].length()  +  1;  [BUGGY]    if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  replacementList[i].length()  +  1;	  int    greater    =    searchList[i].length()    -    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length());	      int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
85	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.')+  1;  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.')+  1;  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('.')+  1;	      int    textIndex    =    searchList[i].indexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
86	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList.length);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList.length);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList.length);	      int    timeToLive    =    Math.max(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
87	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i]);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i]);  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList[i]);	      int    timeToLive    =    Math.max(replacementList.length(),    increase);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
88	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':'));  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':'));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':'));	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
89	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/'));  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/'));  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/'));	      int    textIndex    =    searchList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	16	None	replace
90	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList.length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList.length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  replacementList.length());	      int    timeToLive    =    Math.min(replacementList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
91	[BUG]  [BUGGY]  if(replacementList!=  null)  {  return  replacementList.toString();  }  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  if(replacementList!=  null)  {  return  replacementList.toString();  }  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList!=  null)  {  return  replacementList.toString();  }	      if(replacementList!=    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
92	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length());  [BUGGY]    int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.max(replacementList[i].length());	      int    timeToLive    =    Math.max(replacementList[i].length()    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
