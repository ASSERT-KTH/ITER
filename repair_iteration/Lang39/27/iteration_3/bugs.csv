bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  searchList.toString();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return  searchList.toString();  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  searchList.toString();	  return    buf.toString();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
2	[BUG]  [BUGGY]  return  this.searchList.toString();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return  this.searchList.toString();  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  this.searchList.toString();	  return    buf.toString();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
3	[BUG]  [BUGGY]  return  text.toString();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  text.toString();  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  text.toString();	  return    buf.toString();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
4	[BUG]  [BUGGY]  return  result.toString();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  return  result.toString();  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  result.toString();	  return    buf.toString();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
5	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  /  originalList[i].length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  /  originalList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  /  originalList[i].length();	  int    greater    =    searchList[i].length()    *    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  int  greater  =  originalList[i].length()  *  searchList[i].length();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  originalList[i].length()  *  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  originalList[i].length()  *  searchList[i].length();	  int    greater    =    searchList[i].length()    *    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  int  greater  =  this.replaceList[i].length()  -  searchList[i].length();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replaceList[i].length()  -  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replaceList[i].length()  -  searchList[i].length();	  int    greater    =    searchList[i].length()    -    this.replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
8	[BUG]  [BUGGY]  int  greater  =  this.searchList[i].length()  -  this.replaceList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.searchList[i].length()  -  this.replaceList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.searchList[i].length()  -  this.replaceList[i].length();	  int    greater    =    searchList[i].length()    -    this.replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
9	[BUG]  [BUGGY]  int  greater  =  this.replaceList[i].length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replaceList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replaceList[i].length();	  int    greater    =    searchList[i].length()    -    this.replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
10	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.',  searchList[i].lastIndexOf('-')+  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.',  searchList[i].lastIndexOf('-')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('.',  searchList[i].lastIndexOf('-')+  1);	  int    textIndex    =    searchList[i].indexOf('.',    searchList[i].lastIndexOf('-')+    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
11	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf('-')+  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf('-')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf('-')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].indexOf('-')+    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
12	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].indexOf('-')+    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
13	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  1);	  StringBuffer    buf    =    new    StringBuffer(searchList.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
14	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  1);	  StringBuffer    buf    =    new    StringBuffer(searchList.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
15	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  2);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  2);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  2);	  StringBuffer    buf    =    new    StringBuffer(searchList.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
16	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuilder(searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StringBuilder  buf  =  new  StringBuilder(searchList.length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuilder  buf  =  new  StringBuilder(searchList.length()  -  1);	  StringBuffer    buf    =    new    StringBuffer(searchList.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
17	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive)+  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive)+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive)+  1);	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    timeToLive));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
18	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive  +  1));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive  +  1));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive  +  1));	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    timeToLive));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
19	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  repeat));  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  repeat));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  repeat));	  int    textIndex    =    searchList[i].lastIndexOf('.',    replacementList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
20	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  2;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  2;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  2;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])/    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])/  1;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])/  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])/  1;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])/    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  3;  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  3;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  3;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])/    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  4;  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  4;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  4;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])/    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  4);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  4);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  4);	  int    timeToLive    =    Math.max(replacementList.length(),    3);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
25	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  /  2);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  /  2);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  /  2);	  int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length()    /    2);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
26	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length()  /  2);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length()  /  2);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length()  /  2);	  int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length()    /    2);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
27	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length()  -  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList[i].length()  -  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length()    /    2);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
28	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])+  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])+  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])+  1;	  int    textIndex    =    replacementList[i].indexOf('n',    searchList[i])+    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
29	[BUG]  [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('n',  searchList[i])+  1;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('n',  searchList[i])+  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  this.replacementList[i].indexOf('n',  searchList[i])+  1;	  int    textIndex    =    replacementList[i].indexOf('n',    searchList[i])+    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
30	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])-  2;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])-  2;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])-  2;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  2;  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  2;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  2;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])-  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])-  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])-  1;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])-    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  /  searchList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replacementList[i].length()  /  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  /  searchList[i].length();	  int    greater    =    this.replacementList[i].length()    *    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
34	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  this.replacementList[i].length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  *  this.replacementList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  this.replacementList[i].length();	  int    greater    =    this.replacementList[i].length()    *    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
35	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  +  searchList[i].length();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replacementList[i].length()  +  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  +  searchList[i].length();	  int    greater    =    this.replacementList[i].length()    *    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
36	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  *  searchList[i].length()  +  1;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replacementList[i].length()  *  searchList[i].length()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  *  searchList[i].length()  +  1;	  int    greater    =    this.replacementList[i].length()    *    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
37	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  +  1,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  +  1,  searchList.length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  +  1,  searchList.length()  -  1);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  0);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  0);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  0);	  int    textIndex    =    searchList[i].lastIndexOf('.',    0);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
39	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  2);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  2);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  2);	  int    textIndex    =    searchList[i].lastIndexOf('.',    0);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
40	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i].indexOf('r'));  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i].indexOf('r'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  replacementList[i].indexOf('r'));	  int    textIndex    =    replacementList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
41	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  0));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  0));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  0));	  int    textIndex    =    replacementList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
42	[BUG]  [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('n',  searchList[i].indexOf('r'));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('n',  searchList[i].indexOf('r'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  this.replacementList[i].indexOf('n',  searchList[i].indexOf('r'));	  int    textIndex    =    replacementList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
43	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive));	  int    textIndex    =    replacementList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
44	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  searchList[i].length()  -  1);	  int    timeToLive    =    Math.min(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
45	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  /  searchList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  /  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  /  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
46	[BUG]  [BUGGY]  return  replacementList.toString();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return  replacementList.toString();  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  replacementList.toString();	  if(replacementList!=    null)    {    return    replacementList.toString();    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
47	[BUG]  [BUGGY]  return  replacementList!=  null?  null  :  replacementList.toString();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  return  replacementList!=  null?  null  :  replacementList.toString();  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  replacementList!=  null?  null  :  replacementList.toString();	  if(replacementList!=    null)    {    return    replacementList.toString();    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
48	[BUG]  [BUGGY]  if(replacementList  ==  null)  {  return  replacementList.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList  ==  null)  {  return  replacementList.toString();  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList  ==  null)  {  return  replacementList.toString();  }	  if(replacementList!=    null)    {    return    replacementList.toString();    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
49	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive));  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive));	  int    textIndex    =    replacementList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
50	[BUG]  [BUGGY]  int  textIndex  =  this.replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  this.replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  this.replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-'));	  int    textIndex    =    replacementList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
51	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  0));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  0));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  0));	  int    textIndex    =    replacementList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
52	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  repeat));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  repeat));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r',  repeat));	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    repeat));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
53	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  repeat));  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  repeat));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  repeat));	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    repeat));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
54	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  /  replacementList[i].length();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  /  replacementList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  /  replacementList[i].length();	  int    greater    =    searchList[i].length()    *    replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
55	[BUG]  [BUGGY]  int  greater  =  replacementList[i].length()  *  searchList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  replacementList[i].length()  *  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  replacementList[i].length()  *  searchList[i].length();	  int    greater    =    searchList[i].length()    *    replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
56	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length()  +  1);	  int    timeToLive    =    Math.max(replacementList[i].length()    -    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
57	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  -  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  -  replacementList[i].length());	  int    timeToLive    =    Math.max(replacementList[i].length()    -    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':'));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':'));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf(':'));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
59	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  0));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  0));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  0));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf(':'));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
60	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  repeat));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  repeat));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  repeat));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf(':'));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
61	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  timeToLive));  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  timeToLive));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  timeToLive));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf(':'));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
62	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.');  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('.');  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('.');	  int    textIndex    =    searchList[i].indexOf('.');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
63	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  1);	  int    textIndex    =    searchList[i].indexOf('.');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
64	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  3);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  3);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  3);	  int    textIndex    =    searchList[i].indexOf('.');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
65	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length()  +  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
66	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].length()  -  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
67	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].length());	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
68	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length(),  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList[i].length(),  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList.length(),    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
69	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList.length(),    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
70	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length()  +  1);	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
71	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  -  replacementList[i].length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
72	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  0;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  0;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])+  0;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    0;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
73	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-')+    1);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
74	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList[i].length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length()    -    2);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
75	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  searchList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  +  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  searchList[i].length();	  int    greater    =    searchList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
76	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  searchList[i].length()  +  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  -  searchList[i].length()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  searchList[i].length()  +  1;	  int    greater    =    searchList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
77	[BUG]  [BUGGY]  int  greater  =  searchList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length();	  int    greater    =    searchList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
78	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length()  -  1);	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
79	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList[i].length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
80	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  searchList[i].length()  +  1);	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
81	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  replacementList[i].length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
82	[BUG]  [BUGGY]  StringBuilder  buf  =  new  StringBuffer(replacementList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StringBuilder  buf  =  new  StringBuffer(replacementList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuilder  buf  =  new  StringBuffer(replacementList.length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
83	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(ReplacementList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(ReplacementList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(ReplacementList.length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
84	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  -  1);	  int    timeToLive    =    Math.min(replacementList.length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
85	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  *  searchList[i].length()  +  1);	  int    timeToLive    =    Math.min(replacementList.length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
86	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList[i].length()  -  1);	  int    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
87	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  +  1);	  int    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
88	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  0)+  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  0)+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  0)+  1);	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    0));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
89	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  1));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  1));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  1));	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    0));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
90	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replacementList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length();	  int    greater    =    searchList[i].length()    -    this.replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
91	[BUG]  [BUGGY]  int  greater  =  this.searchList[i].length()  -  this.replacementList[i].length();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.searchList[i].length()  -  this.replacementList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.searchList[i].length()  -  this.replacementList[i].length();	  int    greater    =    searchList[i].length()    -    this.replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
92	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList[i],  searchList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList[i],  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList[i],  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
93	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  /  searchList[i].length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  /  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  /  searchList[i].length());	  int    timeToLive    =    Math.max(replacementList[i].length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
94	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  *  searchList[i].length()  -  1);	  int    timeToLive    =    Math.max(replacementList[i].length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
95	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  timeToLive));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  timeToLive));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  timeToLive));	  int    textIndex    =    searchList[i].lastIndexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
96	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  0));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  0));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r',  0));	  int    textIndex    =    searchList[i].lastIndexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
97	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('n',  searchList[i].indexOf('r'));  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('n',  searchList[i].indexOf('r'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('n',  searchList[i].indexOf('r'));	  int    textIndex    =    searchList[i].lastIndexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  int  textIndex  =  this.replacementList[i].lastIndexOf('.');  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  this.replacementList[i].lastIndexOf('.');  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  this.replacementList[i].lastIndexOf('.');	  int    textIndex    =    replacementList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
99	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  -  1);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
100	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  +  1);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
101	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  replacementList[i].length());	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
102	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length()  -  1);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
103	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  4);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  4);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  4);	  int    timeToLive    =    Math.min(replacementList.length(),    3);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
104	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.max(replacementList[i].length()  -  1);	  long    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
105	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.max(replacementList[i].length()  +  1);	  long    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
106	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    1);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
107	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive  +  1));  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive  +  1));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive  +  1));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-',    timeToLive));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
108	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive)+  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive)+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive)+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-',    timeToLive));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
109	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  +  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  +  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  +  replacementList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList[i].length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
110	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList[i].length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList[i].length()  -  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList[i].length()  -  searchList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList[i].length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
111	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  *  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  *  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  *  replacementList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList[i].length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
112	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  -  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  -  searchList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList[i].length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
113	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.')+  1;	  int    textIndex    =    searchList[i].lastIndexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
114	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.')+  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
115	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  2;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  2;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.')+  2;	  int    textIndex    =    searchList[i].lastIndexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
116	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList[i].length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList[i].length(),  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList[i].length(),  searchList[i].length());	  int    timeToLive    =    Math.min(searchList[i].length(),    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
117	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacements[i].length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacements[i].length(),  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacements[i].length(),  searchList[i].length());	  int    timeToLive    =    Math.min(searchList[i].length(),    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
118	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  *  searchList[i].length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  *  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  *  searchList[i].length());	  int    timeToLive    =    Math.max(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
119	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length()  -  1);	  int    timeToLive    =    Math.max(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
120	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length()  +  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  -  searchList[i].length()  +  1);	  int    timeToLive    =    Math.max(replacementList.length()    -    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
121	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  +  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length()  +  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length()  +  searchList[i].length()  -  1);	  int    timeToLive    =    Math.max(replacementList[i].length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
122	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[0].length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[0].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList[0].length());	  int    timeToLive    =    Math.max(replacementList.length(),    searchList.length());    	non-compiled	[CE]  <identifier>  expected	64	None	replace
123	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList.length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList.length()  -  1);	  int    timeToLive    =    Math.min(replacementList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
124	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  this.replacementList[i].length()  +  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  -  this.replacementList[i].length()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  this.replacementList[i].length()  +  1;	  int    greater    =    this.replacementList[i].length()    -    searchList[i].length()    +    1;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
125	[BUG]  [BUGGY]  char  textIndex  =  replacementList[i].indexOf('.')+  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  textIndex  =  replacementList[i].indexOf('.')+  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	char  textIndex  =  replacementList[i].indexOf('.')+  1;	  int    textIndex    =    replacementList[i].indexOf('.')+    1;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
126	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/'));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/'));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('/'));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
127	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/',  timeToLive));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/',  timeToLive));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/',  timeToLive));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('/'));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
128	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/')+  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('/'));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
129	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/',  0));  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/',  0));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('/',  0));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('/'));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
130	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')+  2;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')+  2;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.')+  2;	  int    textIndex    =    searchList[i].indexOf('.')+    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
131	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  replacementList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  replacementList.length);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  replacementList.length);	  int    timeToLive    =    Math.min(replacementList.length(),    searchList.length);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
132	[BUG]  [BUGGY]  int  greater  =  this.searchList[i].length()  -  originalList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.searchList[i].length()  -  originalList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.searchList[i].length()  -  originalList[i].length();	  int    greater    =    originalList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
133	[BUG]  [BUGGY]  int  greater  =  originalList[i].length()  -  searchList[i].length()  +  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  originalList[i].length()  -  searchList[i].length()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  originalList[i].length()  -  searchList[i].length()  +  1;	  int    greater    =    originalList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
134	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  /  replaceList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  /  replaceList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  /  replaceList[i].length();	  int    greater    =    searchList[i].length()    *    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
135	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  text.length();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  +  text.length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  text.length();	  int    greater    =    searchList[i].length()    +    replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
136	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  this.replacementList[i].length();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  +  this.replacementList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  this.replacementList[i].length();	  int    greater    =    searchList[i].length()    +    replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
137	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacements.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacements.length(),  searchList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacements.length(),  searchList.length());	  int    timeToLive    =    Math.min(searchList.length(),    replacementList.length());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
138	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  searchList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList.length(),  searchList.length());	  int    timeToLive    =    Math.min(searchList.length(),    replacementList.length());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
139	[BUG]  [BUGGY]  if(replacementList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  1);  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  1);  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  +  1);  }	  if(replacementList!=    null)    {    StringBuffer    buf    =    new    StringBuffer(replacementList.length());    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
140	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  1));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  1));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  1));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-',    0));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
141	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].lastIndexOf('-',  0));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].lastIndexOf('-',  0));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  searchList[i].lastIndexOf('-',  0));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-',    0));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
142	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList[i].length()  -  1);	  int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length()    -    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
143	[BUG]  [BUGGY]  int  greater  =  originalList[i].length()  +  searchList[i].length();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  originalList[i].length()  +  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  originalList[i].length()  +  searchList[i].length();	  int    greater    =    searchList[i].length()    +    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
144	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  0);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  0);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  0);	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r')+    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
145	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r')+  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i].indexOf('r')+  1);	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r')+    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
146	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  2);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')+  2);	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r')+    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
147	[BUG]  [BUGGY]  if(searchList  ==  null)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(searchList  ==  null)  {  return  buf.toString();  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(searchList  ==  null)  {  return  buf.toString();  }	  if(searchList!=    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
148	[BUG]  [BUGGY]  while(searchList!=  null)  {  return  buf.toString();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(searchList!=  null)  {  return  buf.toString();  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	while(searchList!=  null)  {  return  buf.toString();	  if(searchList!=    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
149	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  replacementList[i].length()  +  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  *  replacementList[i].length()  +  1;  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  replacementList[i].length()  +  1;	  int    greater    =    searchList[i].length()    -    replacementList[i].length()    +    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
150	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  /  searchList[i].length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  /  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  /  searchList[i].length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
151	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length()  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList.length()  *  searchList[i].length()  -  1);	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
152	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  +  1,  replacementList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  +  1,  replacementList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  +  1,  replacementList.length());	  int    timeToLive    =    Math.max(replacementList.length(),    replacementList.length());    	non-compiled	[CE]  <identifier>  expected	90	None	replace
153	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  *  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  *  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  *  replacementList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList.length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
154	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(replacementList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList.length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
155	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i]);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i]);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i]);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
156	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i]);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[i]);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList[i]);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i]);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
157	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.max(replacementList[i].length()  -  searchList[i].length());	  long    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
158	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(replacementList[i],  searchList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(replacementList[i],  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.max(replacementList[i],  searchList[i].length());	  long    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
159	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  1  -  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.')+  1  -  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.')+  1  -  1;	  int    textIndex    =    searchList[i].lastIndexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
160	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  0);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  0);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-')+  0);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].indexOf('-')+    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
161	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList.length  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList.length  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList.length  -  1);	  int    timeToLive    =    Math.min(replacementList.length(),    searchList.length);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
162	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  replacementList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  replacementList.length);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList.length(),  replacementList.length);	  int    timeToLive    =    Math.min(replacementList.length(),    searchList.length);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
163	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList[i],  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList[i],  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList[i],  searchList[i].length());	  int    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
164	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList.length);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList.length);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  replacementList.length);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList.length);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
165	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  *  textList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replacementList[i].length()  *  textList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  *  textList[i].length();	  int    greater    =    this.replacementList[i].length()    *    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
166	[BUG]  [BUGGY]  int  greater  =  this.replacementList[i].length()  *  this.searchList[i].length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.replacementList[i].length()  *  this.searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.replacementList[i].length()  *  this.searchList[i].length();	  int    greater    =    this.replacementList[i].length()    *    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
167	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList.length()  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList.length()  -  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  searchList.length()  -  1);	  int    timeToLive    =    Math.min(replacementList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
168	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.min(replacementList.length(),  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList.length(),    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
169	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  replaceList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  replaceList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  replaceList[i].length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	60	None	replace
170	[BUG]  [BUGGY]  if(replacementList!=  null)  {  return  searchList.toString();  }  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  return  searchList.toString();  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList!=  null)  {  return  searchList.toString();  }	  if(replacementList!=    null)    {    return    replacementList.toString();    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
171	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length(),  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList.length(),  replacementList[i].length());	  int    timeToLive    =    Math.min(replacementList.length(),    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
172	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  +  searchList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  +  searchList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  +  searchList.length());	  int    timeToLive    =    Math.max(replacementList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
173	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  3);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.',  3);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.',  3);	  int    textIndex    =    searchList[i].lastIndexOf('.',    3);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
174	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  this.replaceList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  *  this.replaceList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  this.replaceList[i].length();	  int    greater    =    searchList[i].length()    *    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
175	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  textList[i].length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  *  textList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  textList[i].length();	  int    greater    =    searchList[i].length()    *    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
176	[BUG]  [BUGGY]  char  textIndex  =  replacementList[i].lastIndexOf('.');  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  textIndex  =  replacementList[i].lastIndexOf('.');  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	char  textIndex  =  replacementList[i].lastIndexOf('.');	  int    textIndex    =    replacementList[i].lastIndexOf('.');    	non-compiled	[CE]  <identifier>  expected	41	None	replace
177	[BUG]  [BUGGY]  if(searchList!=  null  ||  searchList.length()  ==  0)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null  ||  searchList.length()  ==  0)  {  return  buf.toString();  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(searchList!=  null  ||  searchList.length()  ==  0)  {  return  buf.toString();  }	  if(searchList!=    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
178	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  text.length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  *  text.length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  text.length();	  int    greater    =    searchList[i].length()    *    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
179	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[0].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  searchList[0].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  searchList[0].length());	  int    timeToLive    =    Math.min(replacementList.length(),    replacementList.length());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
180	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[0]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[0]);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList[0]);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i]);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
181	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')-  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')-  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r')-  1);	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r')+    1);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
182	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  -  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList.length()  -  replacementList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
183	[BUG]  [BUGGY]  return  buf.toString()  +  1;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  return  buf.toString()  +  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	return  buf.toString()  +  1;	  return    buf.toString();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
184	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':')+  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf(':'));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
185	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  replacementList[i].length()));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  replacementList[i].length()));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf(':',  replacementList[i].length()));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf(':'));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
186	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  replaceList[i].length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  replaceList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  replaceList[i].length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    -    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
187	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList[i].length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList[i].length()  -  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList[i].length()  -  replacementList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length()    -    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
188	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf(')')+  1;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf(')')+  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf(')')+  1;	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
189	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(searchList[i].length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(searchList[i].length()  -  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(searchList[i].length()  -  replacementList[i].length());	  int    timeToLive    =    Math.max(replacementList[i].length()    -    searchList[i].length()    -    1);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
190	[BUG]  [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('.')+  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('.')+  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  this.replacementList[i].indexOf('.')+  1;	  int    textIndex    =    replacementList[i].indexOf('.')+    1;    	non-compiled	[CE]  <identifier>  expected	85	None	replace
191	[BUG]  [BUGGY]  long  greater  =  searchList[i].length()  -  originalList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  long  greater  =  searchList[i].length()  -  originalList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  greater  =  searchList[i].length()  -  originalList[i].length();	  int    greater    =    originalList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
192	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  -  initialList[i].length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  -  initialList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  -  initialList[i].length();	  int    greater    =    originalList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
193	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  *  replacementList[i].length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  *  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList.length()  *  replacementList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
194	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  -1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  -1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  -1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    0);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
195	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  /  2);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  /  2);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  /  2);	  StringBuffer    buf    =    new    StringBuffer(searchList.length());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
196	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  +  replacementList[i].length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(searchList.length()  +  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(searchList.length()  +  replacementList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    +    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
197	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive)+  1));  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive)+  1));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive)+  1));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-',    timeToLive));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
198	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive  -  1));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive  -  1));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-',  timeToLive  -  1));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-',    timeToLive));    	non-compiled	[CE]  <identifier>  expected	38	None	replace
199	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  *  replaceList[i].length());  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  *  replaceList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  *  replaceList[i].length());	  StringBuffer    buf    =    new    StringBuffer(replacementList.length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
200	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-',  0));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-',  0));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('-',  0));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-',    0));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
201	[BUG]  [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('.')+  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  this.replacementList[i].indexOf('.')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  this.replacementList[i].indexOf('.')+  1);	  int    textIndex    =    replacementList[i].indexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
202	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive  -  1));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive  -  1));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  timeToLive  -  1));	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    timeToLive));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
203	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  +  searchList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  +  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList[i].length()  +  searchList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList[i].length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
204	[BUG]  [BUGGY]  char  greater  =  searchList[i].length()  -  replaceList[i].length();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  char  greater  =  searchList[i].length()  -  replaceList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	char  greater  =  searchList[i].length()  -  replaceList[i].length();	  int    greater    =    replaceList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
205	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  searchList[i].length());	  int    textIndex    =    searchList[i].indexOf('.');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
206	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  0);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  0);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  0);	  int    textIndex    =    searchList[i].indexOf('.');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
207	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  0);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  0);	  int    timeToLive    =    Math.max(replacementList.length(),    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
208	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  -  2);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  -  2);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  searchList[i].length()  -  2);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
209	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i])-  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i])-  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('n',  searchList[i])-  1;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])-    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
210	[BUG]  [BUGGY]  if(replacementList  ==  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList  ==  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList  ==  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }	  if(replacementList!=    null)    {    StringBuffer    buf    =    new    StringBuffer(replacementList.length());    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
211	[BUG]  [BUGGY]  if(searchList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(searchList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(searchList!=  null)  {  StringBuffer  buf  =  new  StringBuffer(replacementList.length());  }	  if(replacementList!=    null)    {    StringBuffer    buf    =    new    StringBuffer(replacementList.length());    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
212	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  searchList[i].length()));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  searchList[i].length()));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  searchList[i].length()));	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    repeat));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
213	[BUG]  [BUGGY]  long  timeToLive  =  Math.min(searchList[i].length(),  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.min(searchList[i].length(),  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.min(searchList[i].length(),  replacementList[i].length());	  int    timeToLive    =    Math.min(searchList[i].length(),    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	77	None	replace
214	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  0);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  0);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')+  0);	  int    textIndex    =    searchList[i].lastIndexOf('.',    replacementList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
215	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  -  searchList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList.length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
216	[BUG]  [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  searchList[i].length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	StringBuffer  buf  =  new  StringBuffer(searchList.length()  +  searchList[i].length());	  StringBuffer    buf    =    new    StringBuffer(searchList.length()    -    replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
217	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')-  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')-  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.')-  1;	  int    textIndex    =    searchList[i].indexOf('.')+    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
218	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].indexOf('-'));  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].indexOf('-'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].indexOf('-'));	  int    textIndex    =    replacementList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
219	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('/')+  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('/')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].indexOf('/')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('/'));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
220	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  replacementList[i].lastIndexOf('-'));  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  replacementList[i].lastIndexOf('-'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  replacementList[i].lastIndexOf('-'));	  int    textIndex    =    replacementList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
221	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')/  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.')/  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.')/  1;	  int    textIndex    =    searchList[i].indexOf('.')+    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
222	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])-  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])-  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])-  1;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])-    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
223	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  -  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  -  replacementList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    -    searchList[i].length()    +    1);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
224	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('-')+  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('-')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('-')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    replacementList[i].lastIndexOf('-'));    	non-compiled	[CE]  <identifier>  expected	81	None	replace
225	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf(':')+  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf(':')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf(':')+  1);	  int    textIndex    =    searchList[i].indexOf('.');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
226	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf(':'));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf(':'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  searchList[i].indexOf(':'));	  int    textIndex    =    searchList[i].indexOf('.');    	non-compiled	[CE]  <identifier>  expected	73	None	replace
227	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  /  searchList[i].length());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length()  /  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length()  /  searchList[i].length());	  int    timeToLive    =    Math.min(replacementList.length()    *    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
228	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  replacementList[i].lastIndexOf('-')+  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('.',  replacementList[i].lastIndexOf('-')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('.',  replacementList[i].lastIndexOf('-')+  1);	  int    textIndex    =    searchList[i].indexOf('.',    searchList[i].lastIndexOf('-')+    1);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
229	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('/'));  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('/'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf('/'));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('/'));    	non-compiled	[CE]  <identifier>  expected	89	None	replace
230	[BUG]  [BUGGY]  if(replacementList  ==  null  ||  searchList.length()  ==  0)  {  return  buf.toString();  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList  ==  null  ||  searchList.length()  ==  0)  {  return  buf.toString();  }  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	if(replacementList  ==  null  ||  searchList.length()  ==  0)  {  return  buf.toString();  }	  if(replacementList    ==    null)    {    return    buf.toString();    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
231	[BUG]  [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList[i]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.max(replacementList.length(),  replacementList[i]);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.max(replacementList.length(),  replacementList[i]);	  int    timeToLive    =    Math.max(replacementList.length(),    searchList[i]);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
232	[BUG]  [BUGGY]  int  greater  =  this.searchList[i].length()  -  searchList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.searchList[i].length()  -  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.searchList[i].length()  -  searchList[i].length();	  int    greater    =    searchList[i].length()    -    this.replacementList[i].length();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
233	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  this.originalList[i].length();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  +  this.originalList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  this.originalList[i].length();	  int    greater    =    searchList[i].length()    +    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
234	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')/  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')/  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('-')/  1);	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf('-')+    1);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
235	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])/  2;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])/  2;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i])/  2;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])/    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
236	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])/  2;  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])/  2;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  replacementList[i])/  2;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])/    1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
237	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf(':'));  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf(':'));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].lastIndexOf(':'));	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].lastIndexOf(':'));    	non-compiled	[CE]  <identifier>  expected	88	None	replace
238	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r')+  1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].indexOf('n',  searchList[i].indexOf('r')+  1);	  int    textIndex    =    replacementList[i].indexOf('n',    searchList[i].indexOf('r'));    	non-compiled	[CE]  <identifier>  expected	80	None	replace
239	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  match));  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  match));  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  match));	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    repeat));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
240	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  repeat)+  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  repeat)+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i].indexOf('r',  repeat)+  1);	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i].indexOf('r',    repeat));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
241	[BUG]  [BUGGY]  int  greater  =  this.searchList[i].length()  *  originalList[i].length();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  this.searchList[i].length()  *  originalList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  this.searchList[i].length()  *  originalList[i].length();	  int    greater    =    searchList[i].length()    *    originalList[i].length();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
242	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].length());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  replacementList[i].length());	  int    textIndex    =    searchList[i].lastIndexOf('.',    searchList[i].length());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
243	[BUG]  [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.')+  1;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  replacementList[i].lastIndexOf('.')+  1;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  replacementList[i].lastIndexOf('.')+  1;	  int    textIndex    =    searchList[i].lastIndexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
244	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('.')+  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('.')+  1);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].lastIndexOf('.',  searchList[i].lastIndexOf('.')+  1);	  int    textIndex    =    searchList[i].lastIndexOf('.')+    1);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
245	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  *  searchList[i].length();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  *  searchList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  *  searchList[i].length();	  int    greater    =    searchList[i].length()    -    searchList[i].length();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
246	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  0);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length(),  0);  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length(),  0);	  int    timeToLive    =    Math.min(replacementList.length(),    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
247	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacements.length,  searchList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacements.length,  searchList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacements.length,  searchList.length());	  int    timeToLive    =    Math.min(searchList.length(),    replacementList.length());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
248	[BUG]  [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  0;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  0;  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  textIndex  =  searchList[i].indexOf('n',  searchList[i])/  0;	  int    textIndex    =    searchList[i].indexOf('n',    searchList[i])+    0;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
249	[BUG]  [BUGGY]  int  greater  =  searchList[i].length()  +  this.replaceList[i].length();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  greater  =  searchList[i].length()  +  this.replaceList[i].length();  [BUGGY]      if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  greater  =  searchList[i].length()  +  this.replaceList[i].length();	  int    greater    =    searchList[i].length()    +    replaceList[i].length();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
250	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList.length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  searchList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  searchList.length());	  int    timeToLive    =    Math.min(replacementList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
251	[BUG]  [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList.length());  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList.length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	int  timeToLive  =  Math.min(replacementList.length()  +  1,  searchList.length());	  int    timeToLive    =    Math.min(replacementList.length(),    searchList.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
252	[BUG]  [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length());  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  long  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length());  [BUGGY]      int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  }  increase  =  Math.min(increase,  text.length()  /  5);  StringBuilder  buf  =  new  StringBuilder(text.length()  +  increase);  while  (textIndex  !=  -1)  {  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3676	3676	1	replace	long  timeToLive  =  Math.max(replacementList[i].length(),  searchList[i].length());	  long    timeToLive    =    Math.max(replacementList[i].length());    	non-compiled	[CE]  <identifier>  expected	92	None	replace
