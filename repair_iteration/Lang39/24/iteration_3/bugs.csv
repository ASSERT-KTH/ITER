bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length  -  1;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length  -  1;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length  -  1;	  int    start    =    1    <    <    searchList.length;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
2	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length  +  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length  +  1;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length  +  1;	  int    start    =    1    <    <    searchList.length;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
3	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length  -  2;  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length  -  2;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length  -  2;	  int    start    =    1    <    <    searchList.length;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
4	[BUG]  [BUGGY]  int  start  =  2  <  <  searchList.length;  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  2  <  <  searchList.length;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  2  <  <  searchList.length;	  int    start    =    1    <    <    searchList.length;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
5	[BUG]  [BUGGY]  int  start  =  0  +  searchList.length  /  2;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  0  +  searchList.length  /  2;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  0  +  searchList.length  /  2;	  int    start    =    0    +    searchList.length    -    2;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
6	[BUG]  [BUGGY]  FieldUtils.checkState(replacementList[i]  ==  null);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(replacementList[i]  ==  null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(replacementList[i]  ==  null);	  FieldUtils.checkState(replacementList[i]!=    null);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
7	[BUG]  [BUGGY]  FieldUtils.checkState(searchList[i]!=  null);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList[i]!=  null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList[i]!=  null);	  FieldUtils.checkState(replacementList[i]!=    null);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
8	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList[i]!=  null);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList[i]!=  null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList[i]!=  null);	  FieldUtils.checkState(replacementList[i]!=    null);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
9	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  -  1]);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  -  1]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  -  1]);	  String[]    replacementList    =    getReplacementList().toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
10	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  +  1]);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  +  1]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  +  1]);	  String[]    replacementList    =    getReplacementList().toArray(new    String[replacementList.size()    ]);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
11	[BUG]  [BUGGY]  Integer  start  =  0L;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Integer  start  =  0L;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Integer  start  =  0L;	  short    start    =    0L;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
12	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  2);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  2);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  2);	  String    text    =(String)replacementList[i].substring(start,    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  1  +  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  1  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  1  +  1);	  String    text    =(String)replacementList[i].substring(start,    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].substring(start,  timeToLive  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].substring(start,  timeToLive  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].substring(start,  timeToLive  +  1);	  String    text    =(String)replacementList[0].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
15	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].substring(start,  timeToLive  -  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].substring(start,  timeToLive  -  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].substring(start,  timeToLive  -  1);	  String    text    =(String)replacementList[0].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
16	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].substring(start,  1);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].substring(start,  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].substring(start,  1);	  String    text    =(String)replacementList[0].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
17	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].substring(start,  start  +  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].substring(start,  start  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].substring(start,  start  +  1);	  String    text    =(String)replacementList[0].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
18	[BUG]  [BUGGY]  int  start  =  1  +  searchList.length  -  1;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  +  searchList.length  -  1;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  +  searchList.length  -  1;	  int    start    =    0    +    searchList.length    -    1;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
19	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.size()  +  1];  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.size()  +  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[searchList.size()  +  1];	  MutableString[]    replacementList    =    new    MutableString[searchList.size()    ];    	non-compiled	[CE]  <identifier>  expected	40	None	replace
20	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.size()  -  1];  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.size()  -  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[searchList.size()  -  1];	  MutableString[]    replacementList    =    new    MutableString[searchList.size()    ];    	non-compiled	[CE]  <identifier>  expected	40	None	replace
21	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(0);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(0);	  String    text    =(String)this.replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
22	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(i  +  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(i  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(i  +  1);	  String    text    =(String)this.replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
23	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(i  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(i  -  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(i  -  1);	  String    text    =(String)this.replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
24	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(searchList.length);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(searchList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(searchList.length);	  String    text    =(String)replacementList.get(searchList.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
25	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(searchList.length  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(searchList.length  -  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(searchList.length  -  1);	  String    text    =(String)replacementList.get(searchList.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
26	[BUG]  [BUGGY]  String  text  =(String)super.replacementList.get(searchList.length);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)super.replacementList.get(searchList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)super.replacementList.get(searchList.length);	  String    text    =(String)replacementList.get(searchList.length);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
27	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[i].toLowerCase();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[i].toLowerCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[i].toLowerCase();	  String    text    =(String)this.replacementList[i].trim();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
28	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[i].trim()  + "n ";  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[i].trim()  + "n ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[i].trim()  + "n ";	  String    text    =(String)this.replacementList[i].trim();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
29	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(true);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(true);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList(true);	  String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
30	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(null);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList(null);	  String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
31	[BUG]  [BUGGY]  String[]  replacementList  =  super.replacementList();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  super.replacementList();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  super.replacementList();	  String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
32	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(i  -  1  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(i  -  1  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(i  -  1  +  1);	  String    text    =(String)replacementList.get(i    -    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
33	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length?  2  :  0;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length?  2  :  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length?  2  :  0;	  int    start    =    1    <    <    searchList.length?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
34	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList  ==  null);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList  ==  null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList  ==  null);	  FieldUtils.checkState(this.replacementList!=    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
35	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList!=  null,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList!=  null,  this.replacementList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList!=  null,  this.replacementList.length);	  FieldUtils.checkState(this.replacementList!=    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
36	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList  ==  null,  this.replacementList.length);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList  ==  null,  this.replacementList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList  ==  null,  this.replacementList.length);	  FieldUtils.checkState(this.replacementList!=    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
37	[BUG]  [BUGGY]  String  text  =  super.replaceEach();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceEach();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceEach();	  String    text    =    super.removeText();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
38	[BUG]  [BUGGY]  String  text  =  super.replaceText( ", ");  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceText( ", ");  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceText( ", ");	  String    text    =    super.removeText();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
39	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].toString();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].toString();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].toString();	  String    text    =(String)replacementList[i].toString();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
40	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].getValue();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].getValue();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].getValue();	  String    text    =(String)replacementList[i].toString();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
41	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length?  searchList.length  -  1  :  0;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length?  searchList.length  -  1  :  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length?  searchList.length  -  1  :  0;	  int    start    =    1    <    <    searchList.length?    searchList.length    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
42	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length?  this.searchList.length  :  0;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length?  this.searchList.length  :  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length?  this.searchList.length  :  0;	  int    start    =    1    <    <    searchList.length?    searchList.length    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
43	[BUG]  [BUGGY]  int  start  =  -2;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  -2;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  -2;	  int    start    =    -1L;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
44	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(replacementList.size());  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(replacementList.size());  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(replacementList.size());	  String    text    =(String)replacementList.get(replacementList.size());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
45	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  -  2);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  -  2);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.size()  -  2);	  String    text    =(String)replacementList.get(replacementList.size());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
46	[BUG]  [BUGGY]  String  text  =(String)replacementList[1].getText();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[1].getText();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[1].getText();	  String    text    =(String)replacementList[0].getText();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[0].getText();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[0].getText();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[0].getText();	  String    text    =(String)replacementList[0].getText();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(0,  1);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(0,  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(0,  1);	  String    text    =(String)replacementList[i].substring(start,    0);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
49	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  -  1  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  -  1  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  timeToLive  -  1  +  1);	  String    text    =(String)replacementList[i].substring(start,    timeToLive    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  -  2);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  -  2);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  timeToLive  -  2);	  String    text    =(String)replacementList[i].substring(start,    timeToLive    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase(Locale.ENGLISH);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].trim().toLowerCase(Locale.ENGLISH);	  String    text    =(String)replacementList[i].trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
52	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].trim().toLowerCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].trim().toLowerCase();	  String    text    =(String)replacementList[i].trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
53	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase(Locale.US);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase(Locale.US);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].trim().toLowerCase(Locale.US);	  String    text    =(String)replacementList[i].trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
54	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(replacementList.length);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(replacementList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(replacementList.length);	  String    text    =(String)replacementList.get(replacementList.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
55	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.length  -  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(replacementList.length  -  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.length  -  1);	  String    text    =(String)replacementList.get(replacementList.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.length  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(replacementList.length  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.length  +  1);	  String    text    =(String)replacementList.get(replacementList.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
57	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length  -  1];  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length  -  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.length  -  1];	  MutableString[]    replacementList    =    new    MutableString[replacementList.length];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
58	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length  +  1];  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length  +  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.length  +  1];	  MutableString[]    replacementList    =    new    MutableString[replacementList.length];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
59	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.replacementList.length];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.replacementList.length];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[this.replacementList.length];	  MutableString[]    replacementList    =    new    MutableString[replacementList.length];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
60	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length];  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[searchList.length];	  MutableString[]    replacementList    =    new    MutableString[replacementList.length];    	non-compiled	[CE]  <identifier>  expected	58	None	replace
61	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList.length  ==  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList.length  ==  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList.length  ==  0);	  FieldUtils.checkState(this.replacementList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
62	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList.length  <  =  0);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList.length  <  =  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList.length  <  =  0);	  FieldUtils.checkState(this.replacementList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
63	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList.length  >=  0);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList.length  >=  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList.length  >=  0);	  FieldUtils.checkState(this.replacementList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
64	[BUG]  [BUGGY]  FieldUtils.checkNotNull(replacementList,  text);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkNotNull(replacementList,  text);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(replacementList,  text);	  FieldUtils.checkNotNull(replacementList);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
65	[BUG]  [BUGGY]  FieldUtils.checkNotNull(replacementList[0]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkNotNull(replacementList[0]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(replacementList[0]);	  FieldUtils.checkNotNull(replacementList);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
66	[BUG]  [BUGGY]  FieldUtils.checkState(replacementList.length  ==  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(replacementList.length  ==  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(replacementList.length  ==  0);	  FieldUtils.checkNotNull(replacementList);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
67	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  +  1];  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  +  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[size()  +  1];	  MutableString[]    replacementList    =    new    MutableString[size()    ];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
68	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  -  1];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  -  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[size()  -  1];	  MutableString[]    replacementList    =    new    MutableString[size()    ];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
69	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  *  2];  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  *  2];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[size()  *  2];	  MutableString[]    replacementList    =    new    MutableString[size()    ];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
70	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  *  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  *  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  timeToLive  *  1);	  String    text    =(String)replacementList[i].substring(start,    timeToLive    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
71	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  start  +  1);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  start  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  start  +  1);	  String    text    =(String)replacementList[i].substring(start,    timeToLive    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  String  text  =  super.replaceEach( ", ");  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceEach( ", ");  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceEach( ", ");	  String    text    =    super.getText();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
73	[BUG]  [BUGGY]  String  text  =  super.replaceEach(this,  true);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceEach(this,  true);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceEach(this,  true);	  String    text    =    super.getText();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
74	[BUG]  [BUGGY]  int  start  =  1  +  text.length;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  +  text.length;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  +  text.length;	  int    start    =    1    +    searchList.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  int  start  =  1  +  searchList.length  -  2;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  +  searchList.length  -  2;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  +  searchList.length  -  2;	  int    start    =    1    +    searchList.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  String  text  =(String)replacementList[1].trim();  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[1].trim();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[1].trim();	  String    text    =(String)replacementList[0].trim();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
77	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].toLowerCase();  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].toLowerCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].toLowerCase();	  String    text    =(String)replacementList[0].trim();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
78	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].toLowerCase(Locale.ENGLISH);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].toLowerCase(Locale.ENGLISH);	  String    text    =(String)replacementList[i].toLowerCase();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
79	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].toUpperCase();  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].toUpperCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].toUpperCase();	  String    text    =(String)replacementList[i].toLowerCase();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
80	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].getText().toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].getText().toLowerCase(Locale.ENGLISH);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].getText().toLowerCase(Locale.ENGLISH);	  String    text    =(String)replacementList[i].getText().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].getText().toUpperCase();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].getText().toUpperCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].getText().toUpperCase();	  String    text    =(String)replacementList[i].getText().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
82	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].getText().toLowerCase();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[0].getText().toLowerCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].getText().toLowerCase();	  String    text    =(String)replacementList[i].getText().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
83	[BUG]  [BUGGY]  float  start  =  0;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  float  start  =  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	float  start  =  0;	  float    start    =    0L;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
84	[BUG]  [BUGGY]  double  start  =  0L;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  double  start  =  0L;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	double  start  =  0L;	  float    start    =    0L;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
85	[BUG]  [BUGGY]  double  start  =  0;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  double  start  =  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	double  start  =  0;	  float    start    =    0L;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
86	[BUG]  [BUGGY]  String  text  =(String)super.replacementList.get(0);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)super.replacementList.get(0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)super.replacementList.get(0);	  String    text    =(String)replacementList.get(0);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
87	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(1);	  String    text    =(String)replacementList.get(0);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
88	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[i].getText()  + "n ";  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[i].getText()  + "n ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[i].getText()  + "n ";	  String    text    =(String)this.replacementList[i].getText();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
89	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[i].getText()  + ";n ";  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[i].getText()  + ";n ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[i].getText()  + ";n ";	  String    text    =(String)this.replacementList[i].getText();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
90	[BUG]  [BUGGY]  FieldUtils.checkNotNull(replacementList[i],  text);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkNotNull(replacementList[i],  text);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(replacementList[i],  text);	  FieldUtils.checkNotNull(replacementList[i]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.size()  +  1);	  String    text    =(String)replacementList.get(replacementList.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
92	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacementList.size());  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacementList.size());  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet(replacementList.size());	  Set    <    String>    replacementList    =    Sets.newHashSet(replacementList);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
93	[BUG]  [BUGGY]  ArrayList  <  String>  replacementList  =  Sets.newHashSet(replacementList);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  ArrayList  <  String>  replacementList  =  Sets.newHashSet(replacementList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	ArrayList  <  String>  replacementList  =  Sets.newHashSet(replacementList);	  Set    <    String>    replacementList    =    Sets.newHashSet(replacementList);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
94	[BUG]  [BUGGY]  List  <  String>  replacementList  =  Sets.newHashSet(replacementList);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  List  <  String>  replacementList  =  Sets.newHashSet(replacementList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	List  <  String>  replacementList  =  Sets.newHashSet(replacementList);	  Set    <    String>    replacementList    =    Sets.newHashSet(replacementList);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
95	[BUG]  [BUGGY]  List  <  String>  replacementList  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  List  <  String>  replacementList  =  Sets.newHashSet();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	List  <  String>  replacementList  =  Sets.newHashSet();	  Set    <    String>    replacementList    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
96	[BUG]  [BUGGY]  List  <  String>  replacementList  =  Sets.newArrayList();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  List  <  String>  replacementList  =  Sets.newArrayList();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	List  <  String>  replacementList  =  Sets.newArrayList();	  Set    <    String>    replacementList    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
97	[BUG]  [BUGGY]  Collection  <  String>  replacementList  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Collection  <  String>  replacementList  =  Sets.newHashSet();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Collection  <  String>  replacementList  =  Sets.newHashSet();	  Set    <    String>    replacementList    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
98	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.size()  +  1];  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.size()  +  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.size()  +  1];	  MutableString[]    replacementList    =    new    MutableString[replacementList.size()    ];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
99	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.size()  -  1];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.size()  -  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.size()  -  1];	  MutableString[]    replacementList    =    new    MutableString[replacementList.size()    ];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
100	[BUG]  [BUGGY]  MutableString[]  replacementList  =  getReplacementList(true);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  getReplacementList(true);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  getReplacementList(true);	  MutableString[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
101	[BUG]  [BUGGY]  MutableString[]  replacementList  =  getReplacementList(null);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  getReplacementList(null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  getReplacementList(null);	  MutableString[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
102	[BUG]  [BUGGY]  MutableString[]  replacementList  =  getReplacementList(text);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  getReplacementList(text);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  getReplacementList(text);	  MutableString[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
103	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  -  1]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  -  1]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  -  1]);	  String[]    replacementList    =    getReplacementList().toArray(new    String[replacements.size()    ]);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
104	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  +  1]);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  +  1]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  +  1]);	  String[]    replacementList    =    getReplacementList().toArray(new    String[replacements.size()    ]);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
105	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(searchList.length);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(searchList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet(searchList.length);	  Set    <    String>    replacementList    =    Sets.newHashSet(searchList);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
106	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(searchList.size());  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(searchList.size());  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet(searchList.size());	  Set    <    String>    replacementList    =    Sets.newHashSet(searchList);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
107	[BUG]  [BUGGY]  List  <  String>  replacementList  =  Sets.newHashSet(searchList);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  List  <  String>  replacementList  =  Sets.newHashSet(searchList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	List  <  String>  replacementList  =  Sets.newHashSet(searchList);	  Set    <    String>    replacementList    =    Sets.newHashSet(searchList);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
108	[BUG]  [BUGGY]  ArrayList  <  String>  replacementList  =  Sets.newHashSet(searchList);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  ArrayList  <  String>  replacementList  =  Sets.newHashSet(searchList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	ArrayList  <  String>  replacementList  =  Sets.newHashSet(searchList);	  Set    <    String>    replacementList    =    Sets.newHashSet(searchList);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
109	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length()  +  1];  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length()  +  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.length()  +  1];	  MutableString[]    replacementList    =    new    MutableString[replacementList.length()    ];    	non-compiled	[CE]  <identifier>  expected	52	None	replace
110	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length()  -  1];  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length()  -  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.length()  -  1];	  MutableString[]    replacementList    =    new    MutableString[replacementList.length()    ];    	non-compiled	[CE]  <identifier>  expected	52	None	replace
111	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.replacementList.length()  ];  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.replacementList.length()  ];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[this.replacementList.length()  ];	  MutableString[]    replacementList    =    new    MutableString[replacementList.length()    ];    	non-compiled	[CE]  <identifier>  expected	52	None	replace
112	[BUG]  [BUGGY]  String  text  =  getText()  + "/ ";  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText()  + "/ ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText()  + "/ ";	  String    text    =    getText()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	35	None	replace
113	[BUG]  [BUGGY]  String  text  =  getText()  + ": ";  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText()  + ": ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText()  + ": ";	  String    text    =    getText()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	35	None	replace
114	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(replacementList.size()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(replacementList.size()  -  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(replacementList.size()  -  1);	  String    text    =(String)this.replacementList.get(text);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
115	[BUG]  [BUGGY]  String  text  =  getText().toLowerCase();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText().toLowerCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText().toLowerCase();	  String    text    =    getText().trim();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  String  text  =  getText().trim()  + "n ";  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText().trim()  + "n ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText().trim()  + "n ";	  String    text    =    getText().trim();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  int  start  =  1L;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1L;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1L;	  long    start    =    1L;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
118	[BUG]  [BUGGY]  long  start  =  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  long  start  =  1;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	long  start  =  1;	  long    start    =    1L;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
119	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length()  +  1];  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length()  +  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[searchList.length()  +  1];	  MutableString[]    replacementList    =    new    MutableString[searchList.length()    ];    	non-compiled	[CE]  <identifier>  expected	41	None	replace
120	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length()  -  1];  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length()  -  1];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[searchList.length()  -  1];	  MutableString[]    replacementList    =    new    MutableString[searchList.length()    ];    	non-compiled	[CE]  <identifier>  expected	41	None	replace
121	[BUG]  [BUGGY]  Integer  start  =  1;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Integer  start  =  1;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Integer  start  =  1;	  Integer    start    =    0;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
122	[BUG]  [BUGGY]  long  start  =  2;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  long  start  =  2;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	long  start  =  2;	  int    start    =    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
123	[BUG]  [BUGGY]  String  text  =(String)replacementList[1].getText().trim();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[1].getText().trim();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[1].getText().trim();	  String    text    =(String)replacementList[0].getText().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
124	[BUG]  [BUGGY]  FieldUtils.checkState(searchList.length  ==  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList.length  ==  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList.length  ==  0);	  FieldUtils.checkState(searchList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
125	[BUG]  [BUGGY]  FieldUtils.checkState(searchList.length  >  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList.length  >  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList.length  >  1);	  FieldUtils.checkState(searchList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
126	[BUG]  [BUGGY]  FieldUtils.checkState(searchList.length  >=  0);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList.length  >=  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList.length  >=  0);	  FieldUtils.checkState(searchList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
127	[BUG]  [BUGGY]  FieldUtils.checkNotNull(searchList[i]);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkNotNull(searchList[i]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(searchList[i]);	  FieldUtils.checkNotNull(replacementList[i]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
128	[BUG]  [BUGGY]  FieldUtils.checkNotNull(replacementList[start]);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkNotNull(replacementList[start]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(replacementList[start]);	  FieldUtils.checkNotNull(replacementList[i]);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
129	[BUG]  [BUGGY]  String  text  =(String)replacementList[1].substring(start,  timeToLive);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[1].substring(start,  timeToLive);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[1].substring(start,  timeToLive);	  String    text    =(String)replacementList[0].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
130	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length?  searchList[0].length  :  0;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length?  searchList[0].length  :  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length?  searchList[0].length  :  0;	  int    start    =    1    <    <    searchList.length?    searchList.length    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
131	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(searchList);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  getReplacementList(searchList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList(searchList);	  String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
132	[BUG]  [BUGGY]  String  text  =  super.getText()  + "n ";  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.getText()  + "n ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.getText()  + "n ";	  String    text    =    super.getText();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
133	[BUG]  [BUGGY]  String  text  =  super.replaceText(searchList,  false);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceText(searchList,  false);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceText(searchList,  false);	  String    text    =    super.getText();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
134	[BUG]  [BUGGY]  MutableString[]  replacementList  =  getReplacementList(searchList);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  getReplacementList(searchList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  getReplacementList(searchList);	  MutableString[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
135	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase()  +  1;  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase()  +  1;  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].trim().toLowerCase()  +  1;	  String    text    =(String)replacementList[i].trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
136	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  -  1  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  -  1  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.size()  -  1  +  1);	  String    text    =(String)replacementList.get(replacementList.size()    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
137	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(1);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(1);	  String    text    =(String)replacementList.get(0);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
138	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[0].trim();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[0].trim();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[0].trim();	  String    text    =(String)this.replacementList[i].trim();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
139	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.length  -  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(replacementList.length  -  2);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.length  -  2);	  String    text    =(String)replacementList.get(replacementList.length);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
140	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacementList.length);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacementList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet(replacementList.length);	  Set    <    String>    replacementList    =    Sets.newHashSet(replacementList);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
141	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[0].getText().trim();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[0].getText().trim();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[0].getText().trim();	  String    text    =(String)replacementList[0].getText().trim();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
142	[BUG]  [BUGGY]  FieldUtils.checkState(searchList[i]  ==  null);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList[i]  ==  null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList[i]  ==  null);	  FieldUtils.checkState(replacementList[i]!=    null);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
143	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList.length!=  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(this.replacementList.length!=  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList.length!=  0);	  FieldUtils.checkState(this.replacementList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
144	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].getText().toLowerCase()  +  1;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].getText().toLowerCase()  +  1;  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].getText().toLowerCase()  +  1;	  String    text    =(String)replacementList[i].getText().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
145	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(replacementList);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(replacementList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(replacementList);	  String    text    =(String)this.replacementList.get(text);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
146	[BUG]  [BUGGY]  String  text  =  super.replaceText(searchList);  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceText(searchList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceText(searchList);	  String    text    =    super.removeText();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
147	[BUG]  [BUGGY]  FieldUtils.checkNotNull(searchList);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkNotNull(searchList);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(searchList);	  FieldUtils.checkNotNull(replacementList);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
148	[BUG]  [BUGGY]  FieldUtils.checkNotNull(replacementList,  repeat);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkNotNull(replacementList,  repeat);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(replacementList,  repeat);	  FieldUtils.checkNotNull(replacementList);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
149	[BUG]  [BUGGY]  ArrayList  <  String>  replacementList  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  ArrayList  <  String>  replacementList  =  Sets.newHashSet();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	ArrayList  <  String>  replacementList  =  Sets.newHashSet();	  Set    <    String>    replacementList    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
150	[BUG]  [BUGGY]  FieldUtils.checkState(searchList!=  null);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList!=  null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList!=  null);	  FieldUtils.checkState(this.replacementList!=    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
151	[BUG]  [BUGGY]  FieldUtils.checkState(replacementList!=  null);  [CE]  <identifier>  expected  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(replacementList!=  null);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(replacementList!=  null);	  FieldUtils.checkState(this.replacementList!=    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
152	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(i  +  1  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(i  +  1  -  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(i  +  1  -  1);	  String    text    =(String)replacementList.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
153	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  0,  replacementList.length);  [CE]  <identifier>  expected  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  0,  replacementList.length);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  0,  replacementList.length);	  String    text    =(String)replacementList[i].substring(start,    0);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
154	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start  +  1,  timeToLive  +  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start  +  1,  timeToLive  +  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start  +  1,  timeToLive  +  1);	  String    text    =(String)replacementList[i].substring(start,    timeToLive    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
155	[BUG]  [BUGGY]  FieldUtils.checkState(searchList.length!=  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList.length!=  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList.length!=  0);	  FieldUtils.checkState(searchList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
156	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(index);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList.get(index);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(index);	  String    text    =(String)this.replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
157	[BUG]  [BUGGY]  int  start  =  1  +  this.searchList.length;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  +  this.searchList.length;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  +  this.searchList.length;	  int    start    =    1    +    searchList.length;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
158	[BUG]  [BUGGY]  String[]  replacementList  =  findReplacementList().toArray(new  String[replacements.size()  ]);  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String[]  replacementList  =  findReplacementList().toArray(new  String[replacements.size()  ]);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  findReplacementList().toArray(new  String[replacements.size()  ]);	  String[]    replacementList    =    getReplacementList().toArray(new    String[replacements.size()    ]);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
159	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  3);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  3);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  3);	  String    text    =(String)replacementList[i].substring(start,    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
160	[BUG]  [BUGGY]  String  text  =  getText()  + "   ";  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText()  + "   ";  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText()  + "   ";	  String    text    =    getText()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	35	None	replace
161	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length?  replacementList.length  :  0;  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  searchList.length?  replacementList.length  :  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length?  replacementList.length  :  0;	  int    start    =    1    <    <    searchList.length?    searchList.length    :    0;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
162	[BUG]  [BUGGY]  String  text  =  super.replaceAll( "u000 ", "u000 ");  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceAll( "u000 ", "u000 ");  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceAll( "u000 ", "u000 ");	  String    text    =    super.getText();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
163	[BUG]  [BUGGY]  String  text  =  super.replaceAll( "u00 ", "u00 ");  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.replaceAll( "u00 ", "u00 ");  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.replaceAll( "u00 ", "u00 ");	  String    text    =    super.getText();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
164	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  /  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  /  1);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  timeToLive  /  1);	  String    text    =(String)replacementList[i].substring(start,    timeToLive    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
165	[BUG]  [BUGGY]  if(replacementList!=  null)  {  FieldUtils.checkNotNull(replacementList);  }  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(replacementList!=  null)  {  FieldUtils.checkNotNull(replacementList);  }  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	if(replacementList!=  null)  {  FieldUtils.checkNotNull(replacementList);  }	  FieldUtils.checkNotNull(replacementList);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
166	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(i  +  2);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList.get(i  +  2);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(i  +  2);	  String    text    =(String)replacementList.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
167	[BUG]  [BUGGY]  int  start  =  1  <  <  replacementList.length?  1  :  0;  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  replacementList.length?  1  :  0;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  replacementList.length?  1  :  0;	  int    start    =    1    <    <    searchList.length?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
168	[BUG]  [BUGGY]  int  start  =  1  <  <  replacementList.length;  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int  start  =  1  <  <  replacementList.length;  [BUGGY]        int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  replacementList.length;	  int    start    =    1    <    <    searchList.length;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
169	[BUG]  [BUGGY]  MutableString[]  replacementList  =  super.replacementList();  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  super.replacementList();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  super.replacementList();	  MutableString[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
170	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].trim().toUpperCase();  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)replacementList[i].trim().toUpperCase();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].trim().toUpperCase();	  String    text    =(String)replacementList[i].trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
171	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[i].toString();  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  text  =(String)this.replacementList[i].toString();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[i].toString();	  String    text    =(String)this.replacementList[i].getText();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
172	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.searchList.size()  ];  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.searchList.size()  ];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[this.searchList.size()  ];	  MutableString[]    replacementList    =    new    MutableString[searchList.size()    ];    	non-compiled	[CE]  <identifier>  expected	40	None	replace
173	[BUG]  [BUGGY]  FieldUtils.checkState(searchList.length  <  =  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  FieldUtils.checkState(searchList.length  <  =  0);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList.length  <  =  0);	  FieldUtils.checkState(searchList.length    >    0);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
174	[BUG]  [BUGGY]  String  text  =  getText().replace('n',  'r');  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  getText().replace('n',  'r');  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText().replace('n',  'r');	  String    text    =    getText().trim();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
175	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.searchList.length()  ];  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.searchList.length()  ];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[this.searchList.length()  ];	  MutableString[]    replacementList    =    new    MutableString[searchList.length()    ];    	non-compiled	[CE]  <identifier>  expected	41	None	replace
176	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.replacementList.size()  ];  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  MutableString[]  replacementList  =  new  MutableString[this.replacementList.size()  ];  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[this.replacementList.size()  ];	  MutableString[]    replacementList    =    new    MutableString[replacementList.size()    ];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
177	[BUG]  [BUGGY]  String  text  =  super.removeEach();  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  text  =  super.removeEach();  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.removeEach();	  String    text    =    super.removeText();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
178	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacements);  [CE]  <identifier>  expected  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacements);  [BUGGY]      int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet(replacements);	  Set    <    String>    replacementList    =    Sets.newHashSet();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
