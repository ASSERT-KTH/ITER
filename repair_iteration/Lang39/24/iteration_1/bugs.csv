bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    String  text  =  getText();  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    String  text  =  getText();  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    String  text  =  getText();		non-compiled	[CE]  <identifier>  expected	48	None	add
2	[BUG]  [BUGGY]    String  text  =(String)replacementList[i].getText();  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    String  text  =(String)replacementList[i].getText();  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    String  text  =(String)replacementList[i].getText();		non-compiled	[CE]  <identifier>  expected	48	None	add
3	[BUG]  [BUGGY]    String  text  =(String)replacementList.get(i);  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    String  text  =(String)replacementList.get(i);  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    String  text  =(String)replacementList.get(i);		non-compiled	[CE]  <identifier>  expected	48	None	add
4	[BUG]  [BUGGY]    String  text  =(String)replacementList[i].trim();  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    String  text  =(String)replacementList[i].trim();  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    String  text  =(String)replacementList[i].trim();		non-compiled	[CE]  <identifier>  expected	48	None	add
5	[BUG]  [BUGGY]    String  text  =(String)replacementList[i].substring(start,  timeToLive);  [CE]  <identifier>  expected  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    String  text  =(String)replacementList[i].substring(start,  timeToLive);  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    String  text  =(String)replacementList[i].substring(start,  timeToLive);		non-compiled	[CE]  <identifier>  expected	48	None	add
6	[BUG]  [BUGGY]  int  start  =  1;  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  int  start  =  1;  [BUGGY]    int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1;	int  start  =  0;  	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  int  start  =  0L;  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  int  start  =  0L;  [BUGGY]    int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  0L;	int  start  =  0;  	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  long  start  =  0;  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  long  start  =  0;  [BUGGY]    int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	long  start  =  0;	int  start  =  0;  	non-compiled	[CE]  <identifier>  expected	47	None	replace
9	[BUG]  [BUGGY]  int  start  =  0  +  searchList.length;  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  int  start  =  0  +  searchList.length;  [BUGGY]    int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  0  +  searchList.length;	int  start  =  0;  	non-compiled	[CE]  <identifier>  expected	47	None	replace
10	[BUG]  [BUGGY]    String  text  =(String)replacementList.get(text);  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    String  text  =(String)replacementList.get(text);  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    String  text  =(String)replacementList.get(text);		non-compiled	[CE]  <identifier>  expected	48	None	add
11	[BUG]  [BUGGY]    String  text  =(String)replacementList[i].getText().trim();  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    String  text  =(String)replacementList[i].getText().trim();  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    String  text  =(String)replacementList[i].getText().trim();		non-compiled	[CE]  <identifier>  expected	48	None	add
12	[BUG]  [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  continue;  }  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  continue;  }  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  continue;  }		non-compiled	[CE]  <identifier>  expected	48	None	add
13	[BUG]  [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(replacementList[i]!=  null)  {  continue;  }  [CE]  <identifier>  expected  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(replacementList[i]!=  null)  {  continue;  }  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(replacementList[i]!=  null)  {  continue;  }		non-compiled	[CE]  <identifier>  expected	48	None	add
14	[BUG]  [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  continue;  }  [CE]  <identifier>  expected  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  continue;  }  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    if(searchList.length  >  0)  {  for(int  i  =  start;  i  <  searchList.length;  i++)  {  if(searchList[i]!=  null)  {  continue;  }		non-compiled	[CE]  <identifier>  expected	48	None	add
15	[BUG]  [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start  +  1;  i  <  searchList.length;  i++)  {  if(replacementList[i]!=  null)  {  continue;  }  [CE]  <identifier>  expected  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    if(searchList.length  >  0)  {  for(int  i  =  start  +  1;  i  <  searchList.length;  i++)  {  if(replacementList[i]!=  null)  {  continue;  }  [BUGGY]  int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	    if(searchList.length  >  0)  {  for(int  i  =  start  +  1;  i  <  searchList.length;  i++)  {  if(replacementList[i]!=  null)  {  continue;  }		non-compiled	[CE]  <identifier>  expected	48	None	add
16	[BUG]  [BUGGY]  int  start  =  -1;  [CE]  <identifier>  expected  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  int  start  =  -1;  [BUGGY]    int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  -1;	int  start  =  0;  	non-compiled	[CE]  <identifier>  expected	47	None	replace
