bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].getText().toLowerCase();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].getText().toLowerCase();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].getText().toLowerCase();	      String    text    =(String)replacementList[i].getText();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].getText();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[0].getText();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].getText();	      String    text    =(String)replacementList[i].getText();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet();	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacementList);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(replacementList);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet(replacementList);	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  FieldUtils.checkState(searchList.length  >  0);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  FieldUtils.checkState(searchList.length  >  0);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(searchList.length  >  0);	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  FieldUtils.checkNotNull(replacementList[i]);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  FieldUtils.checkNotNull(replacementList[i]);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(replacementList[i]);	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
7	[BUG]  [BUGGY]  int  start  =  1  +  searchList.length;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  1  +  searchList.length;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  +  searchList.length;	  int    start    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  int  start  =  2;  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  2;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  2;	  int    start    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  int  start  =  -1L;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  -1L;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  -1L;	  int    start    =    -1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
10	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  +  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  +  1);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  timeToLive  +  1);	      String    text    =(String)replacementList[i].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  -  1);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].substring(start,  timeToLive  -  1);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  timeToLive  -  1);	      String    text    =(String)replacementList[i].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  1);  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].substring(start,  1);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  1);	      String    text    =(String)replacementList[i].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].substring(start,  0);  [CE]  <identifier>  expected  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].substring(start,  0);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].substring(start,  0);	      String    text    =(String)replacementList[i].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
14	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(text);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)this.replacementList.get(text);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(text);	      String    text    =(String)replacementList.get(text);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(0);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList.get(0);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(0);	      String    text    =(String)replacementList.get(text);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList.get(replacementList.size()  -  1);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.size()  -  1);	      String    text    =(String)replacementList.get(text);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.length);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList.get(replacementList.length);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.length);	      String    text    =(String)replacementList.get(text);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  long  start  =  0L;  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  long  start  =  0L;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	long  start  =  0L;	  int    start    =    0L;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  short  start  =  0L;  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  short  start  =  0L;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	short  start  =  0L;	  int    start    =    0L;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  ]);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  ]);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList().toArray(new  String[replacementList.size()  ]);	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList();	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  ]);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  ]);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String[]  replacementList  =  getReplacementList().toArray(new  String[replacements.size()  ]);	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  FieldUtils.checkState(replacementList[i]!=  null);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  FieldUtils.checkState(replacementList[i]!=  null);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(replacementList[i]!=  null);	      if(searchList.length    >    0)    {    for(int    i    =    start    +    1;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
24	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].trim().toLowerCase();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].trim().toLowerCase();	      String    text    =(String)replacementList[i].trim();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].trim();  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[0].trim();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].trim();	      String    text    =(String)replacementList[i].trim();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].toLowerCase();  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].toLowerCase();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].toLowerCase();	      String    text    =(String)replacementList[i].trim();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  String  text  =(String)this.replacementList.get(i);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)this.replacementList.get(i);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList.get(i);	      String    text    =(String)replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
28	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(i  +  1);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList.get(i  +  1);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(i  +  1);	      String    text    =(String)replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(i  -  1);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList.get(i  -  1);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(i  -  1);	      String    text    =(String)replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(searchList);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Set  <  String>  replacementList  =  Sets.newHashSet(searchList);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Set  <  String>  replacementList  =  Sets.newHashSet(searchList);	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(searchList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].getText().trim();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[0].getText().trim();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].getText().trim();	      String    text    =(String)replacementList[i].getText().trim();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
32	[BUG]  [BUGGY]  int  start  =  0  +  searchList.length  -  1;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  0  +  searchList.length  -  1;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  0  +  searchList.length  -  1;	  int    start    =    0    +    searchList.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  Integer  start  =  0;  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Integer  start  =  0;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	Integer  start  =  0;	  long    start    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  String  text  =  getText().trim();  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  getText().trim();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText().trim();	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
35	[BUG]  [BUGGY]  String  text  =  getText()  + "n ";  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  getText()  + "n ";  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  getText()  + "n ";	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  String  text  =  super.getText();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  super.getText();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.getText();	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  FieldUtils.checkNotNull(replacementList);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  FieldUtils.checkNotNull(replacementList);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkNotNull(replacementList);	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  MutableString[]  replacementList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  getReplacementList();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  getReplacementList();	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
39	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[i].getText();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)this.replacementList[i].getText();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[i].getText();	      String    text    =(String)replacementList[i].getText();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
40	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.size()  ];  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.size()  ];  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[searchList.size()  ];	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length()  ];  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  new  MutableString[searchList.length()  ];  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[searchList.length()  ];	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.size()  ];  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.size()  ];  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.size()  ];	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
43	[BUG]  [BUGGY]  short  start  =  0;  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  short  start  =  0;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	short  start  =  0;	  long    start    =    0;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(replacementList.size());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList.get(replacementList.size());  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(replacementList.size());	      String    text    =(String)replacementList.get(text);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList.length  >  0);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  FieldUtils.checkState(this.replacementList.length  >  0);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList.length  >  0);	      if(searchList.length    >    0)    {    for(int    i    =    start    +    1;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
46	[BUG]  [BUGGY]  FieldUtils.checkState(this.replacementList!=  null);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  FieldUtils.checkState(this.replacementList!=  null);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	FieldUtils.checkState(this.replacementList!=  null);	      if(searchList.length    >    0)    {    for(int    i    =    start    +    1;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
47	[BUG]  [BUGGY]  float  start  =  0L;  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  float  start  =  0L;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	float  start  =  0L;	  int    start    =    0L;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  String  text  =(String)this.replacementList[i].trim();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)this.replacementList[i].trim();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)this.replacementList[i].trim();	      String    text    =(String)replacementList[i].trim();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  String  text  =(String)replacementList.get(searchList.length);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList.get(searchList.length);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList.get(searchList.length);	      String    text    =(String)replacementList.get(i);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  long  start  =  1L;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  long  start  =  1L;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	long  start  =  1L;	  int    start    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  String  text  =(String)replacementList[0].substring(start,  timeToLive);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[0].substring(start,  timeToLive);  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[0].substring(start,  timeToLive);	      String    text    =(String)replacementList[i].substring(start,    timeToLive);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
52	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length()  ];  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length()  ];  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.length()  ];	      if(searchList.length    >    0)    {    for(int    i    =    start    +    1;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
53	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  ];  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  ];  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[size()  ];	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(searchList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  String  text  =(String)replacementList[i].toString();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =(String)replacementList[i].toString();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =(String)replacementList[i].toString();	      String    text    =(String)replacementList[i].getText();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length?  1  :  0;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  1  <  <  searchList.length?  1  :  0;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length?  1  :  0;	  int    start    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length?  searchList.length  :  0;  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  1  <  <  searchList.length?  searchList.length  :  0;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length?  searchList.length  :  0;	  int    start    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  int  start  =  1  <  <  searchList.length;  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  1  <  <  searchList.length;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  1  <  <  searchList.length;	  int    start    =    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
58	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length];  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  new  MutableString[replacementList.length];  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	MutableString[]  replacementList  =  new  MutableString[replacementList.length];	      if(searchList.length    >    0)    {    for(int    i    =    start;    i    <    searchList.length;    i++)    {    if(replacementList[i]!=    null)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
59	[BUG]  [BUGGY]  int  start  =  0  +  searchList.length  -  2;  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  start  =  0  +  searchList.length  -  2;  [BUGGY]      int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	int  start  =  0  +  searchList.length  -  2;	  int    start    =    0    +    searchList.length;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  String  text  =  super.removeText();  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  super.removeText();  [BUGGY]    int  start  =  0;  int  increase  =  0;  for  (int  i  =  0;  i  <  searchList.length;  i++)  {  int  greater  =  replacementList[i].length()  -  searchList[i].length();  if  (greater  >  0)  {  increase  +=  3  *  greater;  //  assume  3  matches  }  [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3669	3669	1	replace	String  text  =  super.removeText();	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
