bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  [Delete]  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	[Delete]	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	}	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  >=  [Delete]  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  >=  [Delete]  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	>=  [Delete]	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  ==  [Delete]  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  ==  [Delete]  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	==  [Delete]	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  long  timeToLive  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  long  timeToLive  =  System.currentTimeMillis();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	long  timeToLive  =  System.currentTimeMillis();	      int    timeToLive    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
6	[BUG]  [BUGGY]  int  timeToLive  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  System.currentTimeMillis()  -  1;  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	int  timeToLive  =  System.currentTimeMillis()  -  1;	      int    timeToLive    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
7	[BUG]  [BUGGY]  int  timeToLive  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  System.currentTimeMillis()  +  1;  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	int  timeToLive  =  System.currentTimeMillis()  +  1;	      int    timeToLive    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
8	[BUG]  [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  repeat)  {  buf.append( "null ");  }	      if(repeat)    {    buf.append(   "n   ");    }    else    {    text.charAt(i)    ==    'n';    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i)  ==  'n';  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i)  ==  'n';  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i)  ==  'n';  }	      if(repeat)    {    buf.append(   "n   ");    }    else    {    text.charAt(i)    ==    'n';    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i)  ==  'n';  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i)  ==  'n';  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i)  ==  'n';	      if(repeat)    {    buf.append(   "n   ");    }    else    {    text.charAt(i)    ==    'n';    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i  +  1)  ==  'n';  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i  +  1)  ==  'n';  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  repeat)  {  buf.append( "null ");  }  else  {  text.charAt(i  +  1)  ==  'n';  }	      if(repeat)    {    buf.append(   "n   ");    }    else    {    text.charAt(i)    ==    'n';    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  while(i  <  text.length())  {  buf.append(text.charAt(i));  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  while(i  <  text.length())  {  buf.append(text.charAt(i));  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  <  text.length())  {  buf.append(text.charAt(i));	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  bucket.append(text.charAt(i));  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  bucket.append(text.charAt(i));  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket.append(text.charAt(i));	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  while(i  <  text.length())  {  buf.append(text.charAt(i  +  1));  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(i  <  text.length())  {  buf.append(text.charAt(i  +  1));  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  <  text.length())  {  buf.append(text.charAt(i  +  1));	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  while(i  <  text.length())  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(i  <  text.length())  {  buf.append(text.charAt(i));  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  <  text.length())  {  buf.append(text.charAt(i));  }	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
16	[BUG]  [BUGGY]  bucket(i,  text.length()  -  1);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket(i,  text.length()  -  1);  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket(i,  text.length()  -  1);	  if(i    >    0)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  racks.add(buf.toString());  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  racks.add(buf.toString());  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	racks.add(buf.toString());	  if(i    >    0)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  bucket.append( ", ");  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  bucket.append( ", ");  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket.append( ", ");	  if(i    >    0)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
19	[BUG]  [BUGGY]  while(i  <  0  ||  text.charAt(i)!=  '-')  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(i  <  0  ||  text.charAt(i)!=  '-')  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  <  0  ||  text.charAt(i)!=  '-')  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
20	[BUG]  [BUGGY]  while(i  <  0  ||  text.charAt(i)  ==  '-')  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(i  <  0  ||  text.charAt(i)  ==  '-')  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  <  0  ||  text.charAt(i)  ==  '-')  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
21	[BUG]  [BUGGY]  while(i  <  0  ||  text.charAt(i)!=  '-')  {  buf.append( ", ");  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(i  <  0  ||  text.charAt(i)!=  '-')  {  buf.append( ", ");  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  <  0  ||  text.charAt(i)!=  '-')  {  buf.append( ", ");	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
22	[BUG]  [BUGGY]  while(i  >  0)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(i  >  0)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  >  0)  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  while(i  <  0)  {  buf.append( ", ");  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(i  <  0)  {  buf.append( ", ");  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(i  <  0)  {  buf.append( ", ");	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  while(!repeat)  {  buf.append( ",   ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(!repeat)  {  buf.append( ",   ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(!repeat)  {  buf.append( ",   ");  }	      if(repeat)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  while(repeat)  {  buf.append( ",   ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(repeat)  {  buf.append( ",   ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(repeat)  {  buf.append( ",   ");  }	      if(repeat)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  Parchet.checkNotNull(repeat);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkNotNull(repeat);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkNotNull(repeat);	      if(repeat)    {    buf.append(   "n   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  Parchet.checkState(timeToLive  >  0);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(timeToLive  >  0);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkState(timeToLive  >  0);	      if(repeat)    {    buf.append(   "n   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  Parchet.checkState(repeat  ==  false);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(repeat  ==  false);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkState(repeat  ==  false);	      if(repeat)    {    buf.append(   "n   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  Parchet.checkState(repeat);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(repeat);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkState(repeat);	      if(repeat)    {    buf.append(   "n   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
30	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  buf.append(replacementList[replaceIndex]);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  buf.append(replacementList[replaceIndex]);  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  getReplacementList();  buf.append(replacementList[replaceIndex]);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  buf.append(replacementList[0]);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  buf.append(replacementList[0]);  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  getReplacementList();  buf.append(replacementList[0]);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList();  buf.append(replacementList[replaceIndex].toCharArray());  [CE]  <identifier>  expected  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList();  buf.append(replacementList[replaceIndex].toCharArray());  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  getReplacementList();  buf.append(replacementList[replaceIndex].toCharArray());	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(i);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(i);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  getReplacementList(i);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(null);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(null);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  getReplacementList(null);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
35	[BUG]  [BUGGY]  String[]  replacementList  =  super.replacementList();  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  super.replacementList();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  super.replacementList();	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  this);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  AnnotationTraversal.traverse(compiler,  this);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	AnnotationTraversal.traverse(compiler,  this);	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
37	[BUG]  [BUGGY]  Parchet.checkState(i  >  0  ||  text.length()  ==  0);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(i  >  0  ||  text.length()  ==  0);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkState(i  >  0  ||  text.length()  ==  0);	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
38	[BUG]  [BUGGY]  Parchet.checkState(i  >  0);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(i  >  0);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkState(i  >  0);	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  buf.append( "n ");  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  buf.append( "n ");  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	buf.append( "n ");	  buf.setLength(0);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  buf.append( ", ");  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  buf.append( ", ");  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	buf.append( ", ");	  buf.setLength(0);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  buf.append('n');  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  buf.append('n');  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	buf.append('n');	  buf.setLength(0);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
42	[BUG]  [BUGGY]  bucket.append( "null ");  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket.append( "null ");  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket.append( "null ");	      if(repeat)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  while(repeat)  {  buf.append( "null ");  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(repeat)  {  buf.append( "null ");  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(repeat)  {  buf.append( "null ");	      if(repeat)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  while(repeat)  {  buf.append( "null ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(repeat)  {  buf.append( "null ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	while(repeat)  {  buf.append( "null ");  }	      if(repeat)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  repeat)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  repeat)  {  buf.append( ", ");  }	      if(repeat)    {    buf.append(   ",   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  Annotations.checkState(i  <  text.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Annotations.checkState(i  <  text.length());  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Annotations.checkState(i  <  text.length());	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  AnnotationTraversal.traverse(compiler,  text,  this);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  AnnotationTraversal.traverse(compiler,  text,  this);  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	AnnotationTraversal.traverse(compiler,  text,  this);	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  '-'))  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  '-'))  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  '-'))  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(text);    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
49	[BUG]  [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i)!=  '-'))  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i)!=  '-'))  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||(i  >  0  &&  text.charAt(i)!=  '-'))  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(text);    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
50	[BUG]  [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  '/'))  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  '/'))  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  '/'))  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(text);    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
51	[BUG]  [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  'n'))  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  'n'))  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||(i  >  0  &&  text.charAt(i  -  1)!=  'n'))  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(text);    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
52	[BUG]  [BUGGY]  String  text  =  getText().trim();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  getText().trim();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String  text  =  getText().trim();	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  String  text  =  getText()  + "n ";  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  getText()  + "n ";  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String  text  =  getText()  + "n ";	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
54	[BUG]  [BUGGY]  String  text  =  super.removeText();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  super.removeText();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String  text  =  super.removeText();	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  bucket  <  0  ||  i  >  0  ||  text.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  i  >  0  ||  text.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  i  >  0  ||  text.charAt(i)  ==  '-')  {  throw  new  IllegalArgumentException( " ");  }	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
56	[BUG]  [BUGGY]  bucket  <  0  ||  i  >  0  ||  text.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  i  >  0  ||  text.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  i  >  0  ||  text.charAt(i)!=  '-')  {  throw  new  IllegalArgumentException( " ");  }	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  bucket  <  0  ||  i  >  0  ||  text.charAt(i)!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  0  ||  i  >  0  ||  text.charAt(i)!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  0  ||  i  >  0  ||  text.charAt(i)!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  bucket(0)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  bucket(0)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket(0)  {  buf.append( ", ");  }	      if(repeat)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  buf,  start,  searchList.length);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(searchList,  0,  buf,  start,  searchList.length);  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	System.arraycopy(searchList,  0,  buf,  start,  searchList.length);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  replaceIndex);  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(searchList,  0,  replacementList,  0,  replaceIndex);  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	System.arraycopy(searchList,  0,  replacementList,  0,  replaceIndex);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  Faces.checkNotNull(repeat)&&!buf.endsWith( "n ");  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Faces.checkNotNull(repeat)&&!buf.endsWith( "n ");  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Faces.checkNotNull(repeat)&&!buf.endsWith( "n ");	      if(repeat)    {    buf.append(   "n   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  Faces.checkNotNull(repeat)&&!buf.endsWith( ".js ");  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Faces.checkNotNull(repeat)&&!buf.endsWith( ".js ");  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Faces.checkNotNull(repeat)&&!buf.endsWith( ".js ");	      if(repeat)    {    buf.append(   "n   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
63	[BUG]  [BUGGY]  Faces.checkState(repeat)  {  buf.append( "null ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Faces.checkState(repeat)  {  buf.append( "null ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Faces.checkState(repeat)  {  buf.append( "null ");  }	      if(repeat)    {    buf.append(   "n   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
64	[BUG]  [BUGGY]  String  text  =  super.replaceEach();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String  text  =  super.replaceEach();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String  text  =  super.replaceEach();	      String    text    =    getText();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
65	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList(true);  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList(true);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  getReplacementList(true);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
66	[BUG]  [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(replacementList);  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  String[]  replacementList  =  getReplacementList().toArray(replacementList);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	String[]  replacementList  =  getReplacementList().toArray(replacementList);	      String[]    replacementList    =    getReplacementList();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  bucket.append( "  <  / ").append(text.charAt(i));  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket.append( "  <  / ").append(text.charAt(i));  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket.append( "  <  / ").append(text.charAt(i));	  if(i    >    0)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  bucket.append( "  <  identifier> ").append(text.charAt(i));  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  bucket.append( "  <  identifier> ").append(text.charAt(i));  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket.append( "  <  identifier> ").append(text.charAt(i));	  if(i    >    0)    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
69	[BUG]  [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Annotation[]  replacementList  =  getReplacementList();  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Annotation[]  replacementList  =  getReplacementList();	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
70	[BUG]  [BUGGY]  Annotations.checkNotNull(text);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Annotations.checkNotNull(text);  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Annotations.checkNotNull(text);	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
71	[BUG]  [BUGGY]  Faces.checkNotNull(repeat)&&  Character.isWhitespace(currentCharacter))  {  buf.append( "null ");  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Faces.checkNotNull(repeat)&&  Character.isWhitespace(currentCharacter))  {  buf.append( "null ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Faces.checkNotNull(repeat)&&  Character.isWhitespace(currentCharacter))  {  buf.append( "null ");  }	      if(repeat)    {    buf.append(   "n   ");    }    else    {    text.charAt(i)    ==    'n';    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  Faces.checkNotNull(repeat)&&  Character.isWhitespace(text.charAt(i)));  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Faces.checkNotNull(repeat)&&  Character.isWhitespace(text.charAt(i)));  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Faces.checkNotNull(repeat)&&  Character.isWhitespace(text.charAt(i)));	      if(repeat)    {    buf.append(   "n   ");    }    else    {    text.charAt(i)    ==    'n';    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
73	[BUG]  [BUGGY]  Faces.checkNotNull(repeat)&&  Character.isWhitespace(start)&&  result.charAt(i)!=  '-')  {  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Faces.checkNotNull(repeat)&&  Character.isWhitespace(start)&&  result.charAt(i)!=  '-')  {  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Faces.checkNotNull(repeat)&&  Character.isWhitespace(start)&&  result.charAt(i)!=  '-')  {	      if(repeat)    {    buf.append(   "n   ");    }    else    {    text.charAt(i)    ==    'n';    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  MutableStringBuffer  buf  =  new  MutableStringBuffer(text.length());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  buf  =  new  MutableStringBuffer(text.length());  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	MutableStringBuffer  buf  =  new  MutableStringBuffer(text.length());	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  MutableStringBuffer  buf  =  new  MutableStringBuffer(buf.length());  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  buf  =  new  MutableStringBuffer(buf.length());  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	MutableStringBuffer  buf  =  new  MutableStringBuffer(buf.length());	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
76	[BUG]  [BUGGY]  bucket(0)  {  buf.append( "null ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket(0)  {  buf.append( "null ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket(0)  {  buf.append( "null ");  }	      if(repeat)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
77	[BUG]  [BUGGY]  Parchet.checkState(repeat  >  0);  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(repeat  >  0);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkState(repeat  >  0);	      if(repeat)    {    buf.append(   ",   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
78	[BUG]  [BUGGY]  Proiectilities.checkState(i  >  0);  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Proiectilities.checkState(i  >  0);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Proiectilities.checkState(i  >  0);	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
79	[BUG]  [BUGGY]  Parchet.checkNotNull(text);  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkNotNull(text);  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkNotNull(text);	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
80	[BUG]  [BUGGY]  Proiectation.getInstance().reportCodeChange();  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Proiectation.getInstance().reportCodeChange();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Proiectation.getInstance().reportCodeChange();	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
81	[BUG]  [BUGGY]  Parchet.checkState(i  >  0)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Parchet.checkState(i  >  0)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Parchet.checkState(i  >  0)  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
82	[BUG]  [BUGGY]  Proiectilities.checkState(i  >  0)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Proiectilities.checkState(i  >  0)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	Proiectilities.checkState(i  >  0)  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
83	[BUG]  [BUGGY]  >>  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  >>  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	>>	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  }  else  if(i  >  0)  {  buf.append(text.charAt(0));  }  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(i  >  0)  {  buf.append(text.charAt(0));  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	}  else  if(i  >  0)  {  buf.append(text.charAt(0));  }	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
85	[BUG]  [BUGGY]  }  else  if(start  ==  0)  {  buf.append(text.charAt(0));  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(start  ==  0)  {  buf.append(text.charAt(0));  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	}  else  if(start  ==  0)  {  buf.append(text.charAt(0));  }	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
86	[BUG]  [BUGGY]  [Delete]  else  if(i  >  0)  {  buf.append(text.charAt(0));  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  [Delete]  else  if(i  >  0)  {  buf.append(text.charAt(0));  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	[Delete]  else  if(i  >  0)  {  buf.append(text.charAt(0));  }	  if(i    >    0)    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
87	[BUG]  [BUGGY]  }  else  if(i  >  0)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(i  >  0)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	}  else  if(i  >  0)  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  >>  [Delete]  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  >>  [Delete]  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	>>  [Delete]	      if(repeat)    {    buf.append(   ",   ");    }    else    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
89	[BUG]  [BUGGY]  }  else  if(start  <  text.length())  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(start  <  text.length())  {  buf.append(text.charAt(i));  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	}  else  if(start  <  text.length())  {  buf.append(text.charAt(i));  }	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  }  else  if(start  ==  text.length())  {  buf.append(text.charAt(i));  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(start  ==  text.length())  {  buf.append(text.charAt(i));  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	}  else  if(start  ==  text.length())  {  buf.append(text.charAt(i));  }	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
91	[BUG]  [BUGGY]  int  timeToLive  =  System.currentTimeMillis()  -  start;  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  System.currentTimeMillis()  -  start;  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	int  timeToLive  =  System.currentTimeMillis()  -  start;	      int    timeToLive    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
92	[BUG]  [BUGGY]  MutableStringBuffer  buf  =  new  MutableStringBuffer(buf.toString());  [CE]  <identifier>  expected  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  MutableStringBuffer  buf  =  new  MutableStringBuffer(buf.toString());  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	MutableStringBuffer  buf  =  new  MutableStringBuffer(buf.toString());	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
93	[BUG]  [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  ];  [CE]  <identifier>  expected  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  MutableString[]  replacementList  =  new  MutableString[size()  ];  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	MutableString[]  replacementList  =  new  MutableString[size()  ];	  if(i    <    text.length())    {    buf.append(text.charAt(i));    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
94	[BUG]  [BUGGY]  bucket(buf.length()  -  1,  repeat)  {  buf.append( "null ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  bucket(buf.length()  -  1,  repeat)  {  buf.append( "null ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket(buf.length()  -  1,  repeat)  {  buf.append( "null ");  }	      if(repeat)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
95	[BUG]  [BUGGY]  bucket(buf.length()  -  1,  repeat)  {  buf.append( "native ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  bucket(buf.length()  -  1,  repeat)  {  buf.append( "native ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket(buf.length()  -  1,  repeat)  {  buf.append( "native ");  }	      if(repeat)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
96	[BUG]  [BUGGY]  bucket(1)  {  buf.append( "null ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  bucket(1)  {  buf.append( "null ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket(1)  {  buf.append( "null ");  }	      if(repeat)    {    buf.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
97	[BUG]  [BUGGY]  }  else  if(i  >  0  ||  text.length()  ==  0)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  }  else  if(i  >  0  ||  text.length()  ==  0)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	}  else  if(i  >  0  ||  text.length()  ==  0)  {  buf.append( ", ");  }	      if(i    >    0)    {    buf.append(   ",   ");    }    else    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
98	[BUG]  [BUGGY]  bucket(1)  {  buf.append( ", ");  }  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  bucket(1)  {  buf.append( ", ");  }  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket(1)  {  buf.append( ", ");  }	      if(repeat)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
99	[BUG]  [BUGGY]  bucket  <  String>  buf  =  new  StringBuffer();  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  bucket  <  String>  buf  =  new  StringBuffer();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	bucket  <  String>  buf  =  new  StringBuffer();	      if(repeat)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
100	[BUG]  [BUGGY]  cope.reportCodeChange();  [CE]  <identifier>  expected  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  cope.reportCodeChange();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	cope.reportCodeChange();	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
101	[BUG]  [BUGGY]  cope().reportCodeChange();  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  cope().reportCodeChange();  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	cope().reportCodeChange();	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
102	[BUG]  [BUGGY]  cope().addName(buf.toString());  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  cope().addName(buf.toString());  [BUGGY]    buf.append(text.charAt(i));  }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	cope().addName(buf.toString());	      if(i    >    0)    {    buf.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
103	[BUG]  [BUGGY]  if(repeat)  {  buf.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(repeat)  {  buf.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	if(repeat)  {  buf.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
104	[BUG]  [BUGGY]  int  timeToLive  =  System.currentTimeMillis();  buf.append('n');  [CE]  <identifier>  expected  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  timeToLive  =  System.currentTimeMillis();  buf.append('n');  [BUGGY]    }  buf.append(replacementList[replaceIndex]);  start  =  textIndex  +  searchList[replaceIndex].length();  textIndex  =  -1;  replaceIndex  =  -1;  tempIndex  =  -1;    [CLASS]  StringUtils  [METHOD]  replaceEach  [RETURN_TYPE]  String  String  text  String[]  searchList  String[]  replacementList  boolean  repeat  int  timeToLive  	projects/Lang39/src/java/org/apache/commons/lang3/StringUtils.java	0.7071067811865475	3689	3689	1	replace	int  timeToLive  =  System.currentTimeMillis();  buf.append('n');	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
