projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<=DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkIndex(index);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkSize(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryMap.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryList.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=getEntryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=openMapEntries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=this.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkAccess(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkIndex(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkInt(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkIndex(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<DEFAULT_ZERO_TOLERANCE||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<DEFAULT_ZERO_TOLERANCE||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryMap.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryMap.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryMap.get(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryList.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryList.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entryList.get(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=this.entryHashMap().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkSize(index,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkSize(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkSize(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=current.entryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entry<K,V>entry=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entry<?>entry=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entry<?>entry=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(value<=DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkIndex(value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(value<=DEFAULT_ZERO_TOLERANCE){checkIndex(value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(value<=DEFAULT_ZERO_TOLERANCE||value>DEFAULT_ZERO_TOLERANCE){checkIndex(value);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkSize(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=this.entryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0||index>=entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckState.checkState(index<0||index>=DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)this.entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=this.openMapEntries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=this.openMapSparseIterator.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkInt(index,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkInt(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkIndex(index+1,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckState.checkState(index<DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckState(index<DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckState.checkState(index<DEFAULT_ZERO_TOLERANCE||index>DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckState.checkState(index<DEFAULT_ZERO_TOLERANCE||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkAccess(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkAccess(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkAccess(index);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckState.checkState(index<=DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckState(index<=DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(value<0){checkIndex(index);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(value<0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkIndex(index,value);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkAccess(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkInt(value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkIndex(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=this.entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkDimension(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<DEFAULT_ZERO_TOLERANCE||index>=DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckIndex.checkIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0||index>DEFAULT_ZERO_TOLERANCE){checkIndex(index);}else{entries.remove(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=getEntrySparseIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)iter2.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkInt(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588intindex=indexOf(current);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entryentry=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=this.entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<0){checkAccess(index);}else{entry=newOpenIntToDoubleHashMap();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkAccess(index,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckIntToDoubleHashMap.this.setEntry(index,value);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckIntToDoubleHashMap.checkIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckIndexChecks.checkIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iteratoriter=this.entryMap.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)iter.remove();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<=DEFAULT_ZERO_TOLERANCE){checkIndex(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<=DEFAULT_ZERO_TOLERANCE){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entry<N,V>entry=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entry<N,V>entry=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(value<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588if(index<=DEFAULT_ZERO_TOLERANCE){checkAccess(index);}else{entries.put(index,value);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Iterator<Entry>iter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588Entrycurrent=(Entry)entryList.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkAccess(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588checkSize(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java588CheckIntToDoubleHashMap.this.setValue(index,value);
