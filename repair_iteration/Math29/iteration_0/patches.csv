bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());  [CE]  cannot  find  symbol  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());		non-compiled	[CE]  cannot  find  symbol	14	None	add
2	[BUG]  [BUGGY]  [FE]  java.lang.AssertionError:  entry  #0  testEbeDivideMixedTypes  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	add	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();		compilable	  [FE]  java.lang.AssertionError:  entry  #0  testEbeDivideMixedTypes	14	3
3	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [FE]  java.lang.AssertionError:  entry  #0  testEbeDivideMixedTypes  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();		compilable	  [FE]  java.lang.AssertionError:  entry  #0  testEbeDivideMixedTypes	14	3	add
3	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [CE]  method  getEntry  in  class  RealVector  cannot  be  applied  to  given  types;  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  method  getEntry  in  class  RealVector  cannot  be  applied  to  given  types;	14	None	add
4	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  v.getEntry();  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    OpenIntToDoubleHashMap  entries  =  v.getEntry();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    OpenIntToDoubleHashMap  entries  =  v.getEntry();		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	14	None	add
5	[BUG]  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	14	None	add
11	[BUG]  [BUGGY]  public  final  OpenMapRealVector(OpenMapRealVector  v)  {  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]    [BUGGY]  public  final  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	public  final  OpenMapRealVector(OpenMapRealVector  v)  {	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	17	None	replace
13	[BUG]  [BUGGY]  final  public  OpenMapRealVector(OpenMapRealVector  v)  {  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]    [BUGGY]  final  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	final  public  OpenMapRealVector(OpenMapRealVector  v)  {	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	17	None	replace
14	[BUG]  [BUGGY]  public  MapRealVector(OpenMapRealVector  v)  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]  public  MapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	public  MapRealVector(OpenMapRealVector  v)  {	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
15	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	  	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
21	[BUG]  [BUGGY]  entries.put(index,  value);  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]  entries.put(index,  value);  [BUGGY]  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	entries.put(index,  value);	entries.remove(index);  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	15	None	replace
23	[BUG]  [BUGGY]  entries.add(index);  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]  entries.add(index);  [BUGGY]  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	entries.add(index);	entries.remove(index);  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	15	None	replace
24	[BUG]  [BUGGY]  entries.put(index,  new  Double(value));  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]  entries.put(index,  new  Double(value));  [BUGGY]  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	entries.put(index,  new  Double(value));	entries.remove(index);  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	15	None	replace
25	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	  	entries.remove(index);  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
31	[BUG]  [BUGGY]  iter.next();  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	iter.next();	iter.advance();  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	7	None	replace
32	[BUG]  [BUGGY]  iter.next();  res.setEntry(entry.getValue(),  v.getValue());  [CE]  illegal  start  of  expression  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(entry.getValue(),  v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	iter.next();  res.setEntry(entry.getValue(),  v.getValue());	iter.advance();  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [CE]  illegal  start  of  expression  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	iter.next();  res.setEntry(v.getValue(),  v.getValue());	iter.advance();  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  iter.next();  res.setEntry(iter.getValue(),  v.getValue());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(iter.getValue(),  v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	iter.next();  res.setEntry(iter.getValue(),  v.getValue());	iter.advance();  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	7	None	replace
35	[BUG]  [BUGGY]    [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	  	iter.advance();  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	7	None	replace
42	[BUG]  [BUGGY]  while(iter.hasNext()  &&  iter.getValue()  >  0)  {  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.hasNext()  &&  iter.getValue()  >  0)  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext()  &&  iter.getValue()  >  0)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	5	None	replace
43	[BUG]  [BUGGY]  while(iter.hasNext()  &&  iter.value()  >  0)  {  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.hasNext()  &&  iter.value()  >  0)  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext()  &&  iter.value()  >  0)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	5	None	replace
44	[BUG]  [BUGGY]  while(iter.next())  {  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.next())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.next())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	5	None	replace
45	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	  	while  (iter.hasNext())  {  	non-compiled	[CE]  illegal  start  of  type	5	None	replace
51	[BUG]  [BUGGY]    this(v.getKey(),  v.getValue());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    this(v.getKey(),  v.getValue());  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    this(v.getKey(),  v.getValue());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	20	None	add
52	[BUG]  [BUGGY]    v  =(OpenMapRealVector)v.getEntry();  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    v  =(OpenMapRealVector)v.getEntry();  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    v  =(OpenMapRealVector)v.getEntry();		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	20	None	add
53	[BUG]  [BUGGY]    v  =(OpenMapRealVector)v.iterator();  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    v  =(OpenMapRealVector)v.iterator();  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    v  =(OpenMapRealVector)v.iterator();		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	20	None	add
54	[BUG]  [BUGGY]    v  =(OpenMapRealVector)v.newInstance();  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    v  =(OpenMapRealVector)v.newInstance();  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    v  =(OpenMapRealVector)v.newInstance();		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	20	None	add
55	[BUG]  [BUGGY]    super(v);  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super(v);  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super(v);		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	20	None	add
61	[BUG]  [BUGGY]    res.setEntry(iter.getValue(),  iter.value());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    res.setEntry(iter.getValue(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    res.setEntry(iter.getValue(),  iter.value());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	6	None	add
62	[BUG]  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getValue(),  iter.value());  [CE]  illegal  start  of  expression  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getValue(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    while(iter.hasNext())  {  res.setEntry(entry.getValue(),  iter.value());		non-compiled	[CE]  illegal  start  of  expression	6	None	add
63	[BUG]  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    res.setEntry(entry.getValue(),  iter.value());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	6	None	add
64	[BUG]  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getKey(),  iter.value());  [CE]  illegal  start  of  expression  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getKey(),  iter.value());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    while(iter.hasNext())  {  res.setEntry(entry.getKey(),  iter.value());		non-compiled	[CE]  illegal  start  of  expression	6	None	add
65	[BUG]  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  expression  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    while(iter.hasNext())  {  res.setEntry(entry.getKey(),  entry.getValue());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    while(iter.hasNext())  {  res.setEntry(entry.getKey(),  entry.getValue());		non-compiled	[CE]  illegal  start  of  expression	6	None	add
71	[BUG]  [BUGGY]    res.setEntry(iter.next());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setEntry(iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    res.setEntry(iter.next());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	8	None	add
72	[BUG]  [BUGGY]    res.setEntry(entry.next());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setEntry(entry.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    res.setEntry(entry.next());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	8	None	add
73	[BUG]  [BUGGY]    Iterator.next()  =  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator.next()  =  iter.next();  res.setEntry(v.getValue(),  v.getValue());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    Iterator.next()  =  iter.next();  res.setEntry(v.getValue(),  v.getValue());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	8	None	add
74	[BUG]  [BUGGY]    Iterator.next()  =  iter.next();  res.setEntry(entry.getValue(),  v.getValue());  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator.next()  =  iter.next();  res.setEntry(entry.getValue(),  v.getValue());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    Iterator.next()  =  iter.next();  res.setEntry(entry.getValue(),  v.getValue());		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	8	None	add
75	[BUG]  [BUGGY]    Iterator.next()  =  iter.next();  res.setEntry(entry,  new  OpenMapRealVector(v.getValue()));  [CE]  package  org.apache.commons.math.exception  does  not  exist  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator.next()  =  iter.next();  res.setEntry(entry,  new  OpenMapRealVector(v.getValue()));  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    Iterator.next()  =  iter.next();  res.setEntry(entry,  new  OpenMapRealVector(v.getValue()));		non-compiled	[CE]  package  org.apache.commons.math.exception  does  not  exist	8	None	add
82	[BUG]  [BUGGY]  checkVectorDimensions(v.getMinimumDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getMinimumDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkVectorDimensions(v.getMinimumDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
83	[BUG]  [BUGGY]  checkVectorDimensions(v.getDimension()  +  1);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getDimension()  +  1);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkVectorDimensions(v.getDimension()  +  1);	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
84	[BUG]  [BUGGY]  checkVectorDimensions(v.getDimension(),  v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getDimension(),  v.getValue());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkVectorDimensions(v.getDimension(),  v.getValue());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
91	[BUG]  [BUGGY]    res.setEntry(iter.next());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(iter.next());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(iter.next());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
92	[BUG]  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(entry.getValue(),  iter.value());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(entry.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
93	[BUG]  [BUGGY]    res.setEntry(entry.getValue(),  v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(entry.getValue(),  v.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(entry.getValue(),  v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
94	[BUG]  [BUGGY]    res.setEntry(entry.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(entry.getValue());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(entry.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
95	[BUG]  [BUGGY]    res.setEntry(iter.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(iter.getValue(),  iter.value());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(iter.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
101	[BUG]  [BUGGY]    this(v.getKey(),  v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    this(v.getKey(),  v.getValue());  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this(v.getKey(),  v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
102	[BUG]  [BUGGY]    this(v.getKey(),  v.getValue());  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    this(v.getKey(),  v.getValue());  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this(v.getKey(),  v.getValue());  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
103	[BUG]  [BUGGY]    this(v.getValue(),  DEFAULT_ZERO_TOLERANCE);  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    this(v.getValue(),  DEFAULT_ZERO_TOLERANCE);  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this(v.getValue(),  DEFAULT_ZERO_TOLERANCE);  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
104	[BUG]  [BUGGY]    this(v.getKey(),  v.getValue());  entries  =  new  OpenIntToDoubleHashMap(v.getEntry()).entrySet();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    this(v.getKey(),  v.getValue());  entries  =  new  OpenIntToDoubleHashMap(v.getEntry()).entrySet();  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this(v.getKey(),  v.getValue());  entries  =  new  OpenIntToDoubleHashMap(v.getEntry()).entrySet();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
105	[BUG]  [BUGGY]    this(v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    this(v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this(v.getValue(),  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
111	[BUG]  [BUGGY]  return  res  ==  null?  new  OpenMapRealVector()  :  res;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res  ==  null?  new  OpenMapRealVector()  :  res;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res  ==  null?  new  OpenMapRealVector()  :  res;	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
112	[BUG]  [BUGGY]  return  res!=  null?  new  OpenMapRealVector()  :  res;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res!=  null?  new  OpenMapRealVector()  :  res;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res!=  null?  new  OpenMapRealVector()  :  res;	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
113	[BUG]  [BUGGY]  return  v;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  v;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  v;	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
114	[BUG]  [BUGGY]  return  iter;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  iter;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  iter;	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
115	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	  	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
121	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  v.getEntry();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  v.getEntry();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  v.getEntry();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
122	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
123	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
124	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDimension());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
125	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
131	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  /  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
132	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.next()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.next()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.next()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
133	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  -  1  *  v.getEntry(iter.key()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  -  1  *  v.getEntry(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  -  1  *  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
141	[BUG]  [BUGGY]  virtualSize  =  v.getSize();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getSize();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	virtualSize  =  v.getSize();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
142	[BUG]  [BUGGY]  virtualSize  =  v.getVisibility();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getVisibility();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	virtualSize  =  v.getVisibility();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
143	[BUG]  [BUGGY]  virtualSize  =  v.getValue();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getValue();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	virtualSize  =  v.getValue();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
144	[BUG]  [BUGGY]  virtualSize  =  v.getDelimiter();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getDelimiter();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	virtualSize  =  v.getDelimiter();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
151	[BUG]  [BUGGY]    res.setEntry(v.getValue(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    res.setEntry(v.getValue(),  iter.value());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    res.setEntry(v.getValue(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
152	[BUG]  [BUGGY]    res.setEntry(v.getValue(),  iter.value()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    res.setEntry(v.getValue(),  iter.value()));  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    res.setEntry(v.getValue(),  iter.value()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
153	[BUG]  [BUGGY]    res.setEntry(v,  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    res.setEntry(v,  iter.value());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    res.setEntry(v,  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
154	[BUG]  [BUGGY]    res.setEntry(v.value(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    res.setEntry(v.value(),  iter.value());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    res.setEntry(v.value(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
155	[BUG]  [BUGGY]    res.setEntry(v.key(),  iter.value());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    res.setEntry(v.key(),  iter.value());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    res.setEntry(v.key(),  iter.value());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
161	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.getEntry();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.getEntry();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  res.getEntry();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
162	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.entrySet();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.entrySet();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  res.entrySet();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
163	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDimension());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDimension());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
164	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.getOpenIntToDoubleHashMap();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.getOpenIntToDoubleHashMap();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  res.getOpenIntToDoubleHashMap();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
165	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDelimiter());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDelimiter());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getDelimiter());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
172	[BUG]  [BUGGY]    entries.put(index,  number);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    entries.put(index,  number);  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    entries.put(index,  number);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
173	[BUG]  [BUGGY]    value  =  entries.get(index);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    value  =  entries.get(index);  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    value  =  entries.get(index);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
174	[BUG]  [BUGGY]    entries.put(index,  1);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    entries.put(index,  1);  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    entries.put(index,  1);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
175	[BUG]  [BUGGY]    openMapEntry();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    openMapEntry();  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    openMapEntry();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
181	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
182	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
183	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.size());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.size());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.size());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
191	[BUG]  [BUGGY]  Iterator  iter  =  res.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  res.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  res.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
192	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  this.entries.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
193	[BUG]  [BUGGY]  Iterator  iter  =  this.entrySets.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  this.entrySets.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  this.entrySets.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
1	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
2	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(new  OpenIntToDoubleHashMap());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
3	[BUG]  [BUGGY]    iter.next();  res.setEntry(new  IntToDoubleHashMap(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    iter.next();  res.setEntry(new  IntToDoubleHashMap(v.getValue()));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    iter.next();  res.setEntry(new  IntToDoubleHashMap(v.getValue()));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
4	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
5	[BUG]  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	add
21	[BUG]  [BUGGY]    super();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super();  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	add
23	[BUG]  [BUGGY]    super(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super(v.getDimension());  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super(v.getDimension());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	add
24	[BUG]  [BUGGY]    super(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super(v.getValue());  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super(v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	add
25	[BUG]  [BUGGY]    super(v.getDegree());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super(v.getDegree());  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super(v.getDegree());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	add
42	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  IntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  IntToDoubleHashMap());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(new  IntToDoubleHashMap());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
43	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getIntToDoubleHashMap());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v.getIntToDoubleHashMap());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v.getIntToDoubleHashMap());	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
44	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
62	[BUG]  [BUGGY]    double  value  =  entries.get(index);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    double  value  =  entries.get(index);  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    double  value  =  entries.get(index);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
63	[BUG]  [BUGGY]    closeEntry();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    closeEntry();  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    closeEntry();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
64	[BUG]  [BUGGY]    entries.put(index,  index  +  1);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    entries.put(index,  index  +  1);  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    entries.put(index,  index  +  1);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
65	[BUG]  [BUGGY]    openEntries();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    openEntries();  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    openEntries();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	add
84	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getInt());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getInt());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getInt());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
85	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntryCount());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntryCount());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntryCount());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	add
102	[BUG]  [BUGGY]  while(iter.isEmpty())  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.isEmpty())  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.isEmpty())  {	while  (iter.hasNext())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
103	[BUG]  [BUGGY]  while(iter.hasNext()!=  null)  {  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.hasNext()!=  null)  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext()!=  null)  {	while  (iter.hasNext())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
123	[BUG]  [BUGGY]  checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkVectorDimensions(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
124	[BUG]  [BUGGY]  checkIntDimensions(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkIntDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkIntDimensions(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
144	[BUG]  [BUGGY]  entries.add(index,  value);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]  entries.add(index,  value);  [BUGGY]  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	entries.add(index,  value);	entries.remove(index);  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
162	[BUG]  [BUGGY]  iter.next();  res.setEntry(new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	iter.next();  res.setEntry(new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE));	iter.advance();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
163	[BUG]  [BUGGY]  iter.next();  res.setEntry(new  IntToDoubleHashMap(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(new  IntToDoubleHashMap(v.getValue()));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	iter.next();  res.setEntry(new  IntToDoubleHashMap(v.getValue()));	iter.advance();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
164	[BUG]  [BUGGY]  iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));	iter.advance();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
182	[BUG]  [BUGGY]  virtualSize  =  v.getVisibleIndex();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getVisibleIndex();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	virtualSize  =  v.getVisibleIndex();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
183	[BUG]  [BUGGY]  realSize  =  v.getSize();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  realSize  =  v.getSize();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	realSize  =  v.getSize();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
201	[BUG]  [BUGGY]    super(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    super(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    super(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
202	[BUG]  [BUGGY]    super();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    super();  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    super();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
204	[BUG]  [BUGGY]    this.value  =  v.getValue();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    this.value  =  v.getValue();  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this.value  =  v.getValue();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
205	[BUG]  [BUGGY]    super(v.getDimension());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]    [BUGGY]    super(v.getDimension());  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    super(v.getDimension());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	add
223	[BUG]  [BUGGY]  Iterator  iter  =  this.entrys.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  this.entrys.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  this.entrys.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
241	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  createEntry(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    OpenIntToDoubleHashMap  entries  =  createEntry(v);  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    OpenIntToDoubleHashMap  entries  =  createEntry(v);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	add
262	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.hashMap();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.hashMap();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  res.hashMap();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
263	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.values();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  res.values();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  res.values();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
264	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =(OpenIntToDoubleHashMap)res.clone();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =(OpenIntToDoubleHashMap)res.clone();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =(OpenIntToDoubleHashMap)res.clone();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	add
281	[BUG]  [BUGGY]  return  res.value;  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res.value;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.value;	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
282	[BUG]  [BUGGY]  return  res.iterator();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res.iterator();  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.iterator();	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
283	[BUG]  [BUGGY]  return  res.entrySet();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res.entrySet();  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.entrySet();	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
284	[BUG]  [BUGGY]  return  res.newInstance();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res.newInstance();  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res.newInstance();	return  res;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
301	[BUG]  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
302	[BUG]  [BUGGY]    res.put(key,  value);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    res.put(key,  value);  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    res.put(key,  value);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
303	[BUG]  [BUGGY]    OpenMapRealVector  res  =(OpenMapRealVector)entries.get(v);  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =(OpenMapRealVector)entries.get(v);  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =(OpenMapRealVector)entries.get(v);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
304	[BUG]  [BUGGY]    OpenMapRealVector  res  =(OpenMapRealVector)v.getEntry();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =(OpenMapRealVector)v.getEntry();  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =(OpenMapRealVector)v.getEntry();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
305	[BUG]  [BUGGY]    OpenMapRealVector  res  =(OpenMapRealVector)v.get();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =(OpenMapRealVector)v.get();  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =(OpenMapRealVector)v.get();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	add
322	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  v.getValue()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
323	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  2  *  v.getEntry(iter.key()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  2  *  v.getEntry(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  /  2  *  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
324	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  1  *  v.getEntry(iter.key()));  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  /  1  *  v.getEntry(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  /  1  *  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
342	[BUG]  [BUGGY]    Iterator  iter  =(OpenMapRealVector)iter.next();  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator  iter  =(OpenMapRealVector)iter.next();  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    Iterator  iter  =(OpenMapRealVector)iter.next();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
343	[BUG]  [BUGGY]    res.put(null,  iter.next());  [CE]  invalid  method  declaration;  return  type  required  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.put(null,  iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    res.put(null,  iter.next());		non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	add
344	[BUG]  [BUGGY]    Iterator  iter  =(OpenMapRealVector)entries.next();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    Iterator  iter  =(OpenMapRealVector)entries.next();  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    Iterator  iter  =(OpenMapRealVector)entries.next();		non-compiled	[CE]  <identifier>  expected	8	None	add
345	[BUG]  [BUGGY]    res.put(v,  iter.next());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.put(v,  iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    res.put(v,  iter.next());		non-compiled	[CE]  <identifier>  expected	8	None	add
363	[BUG]  [BUGGY]  openMapRealVector(OpenMapRealVector  v)  {  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]  openMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	openMapRealVector(OpenMapRealVector  v)  {	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
364	[BUG]  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v,  DEFAULT_ZERO_TOLERANCE)  {  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v,  DEFAULT_ZERO_TOLERANCE)  {  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	public  OpenMapRealVector(OpenMapRealVector  v,  DEFAULT_ZERO_TOLERANCE)  {	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
381	[BUG]  [BUGGY]    Iterator  iter  =  this.entries.iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    Iterator  iter  =  this.entries.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    Iterator  iter  =  this.entries.iterator();		non-compiled	[CE]  <identifier>  expected	6	None	add
382	[BUG]  [BUGGY]    iter.next();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    iter.next();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    iter.next();		non-compiled	[CE]  <identifier>  expected	6	None	add
383	[BUG]  [BUGGY]    Iterator  iter  =  this.entrySet().iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    Iterator  iter  =  this.entrySet().iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    Iterator  iter  =  this.entrySet().iterator();		non-compiled	[CE]  <identifier>  expected	6	None	add
384	[BUG]  [BUGGY]    Iterator  iter  =  res.next();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    Iterator  iter  =  res.next();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    Iterator  iter  =  res.next();		non-compiled	[CE]  <identifier>  expected	6	None	add
385	[BUG]  [BUGGY]    Iterator  iter  =  res.iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    Iterator  iter  =  res.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    Iterator  iter  =  res.iterator();		non-compiled	[CE]  <identifier>  expected	6	None	add
2	[BUG]  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value));  [CE]  <identifier>  expected  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value));  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    entries.put(index,  new  OpenIntToDoubleHashMap(value));		non-compiled	[CE]  <identifier>  expected	16	None	add
3	[BUG]  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value,  index));  [CE]  <identifier>  expected  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value,  index));  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    entries.put(index,  new  OpenIntToDoubleHashMap(value,  index));		non-compiled	[CE]  <identifier>  expected	16	None	add
4	[BUG]  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value),  value);  [CE]  <identifier>  expected  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value),  value);  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    entries.put(index,  new  OpenIntToDoubleHashMap(value),  value);		non-compiled	[CE]  <identifier>  expected	16	None	add
5	[BUG]  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value,  index  +  1));  [CE]  <identifier>  expected  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]    entries.put(index,  new  OpenIntToDoubleHashMap(value,  index  +  1));  [BUGGY]  entries.remove(index);  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	    entries.put(index,  new  OpenIntToDoubleHashMap(value,  index  +  1));		non-compiled	[CE]  <identifier>  expected	16	None	add
32	[BUG]  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(entry.getValue(),  v.getValue());  [CE]  <identifier>  expected  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(entry.getValue(),  v.getValue());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(entry.getValue(),  v.getValue());		non-compiled	[CE]  <identifier>  expected	12	None	add
33	[BUG]  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue()  *  Math.max(res.size()  -  1,  v.size()));  [CE]  <identifier>  expected  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue()  *  Math.max(res.size()  -  1,  v.size()));  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue()  *  Math.max(res.size()  -  1,  v.size()));		non-compiled	[CE]  <identifier>  expected	12	None	add
34	[BUG]  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(iter.value(),  v.getValue());  [CE]  <identifier>  expected  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(iter.value(),  v.getValue());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(iter.value(),  v.getValue());		non-compiled	[CE]  <identifier>  expected	12	None	add
35	[BUG]  [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(entry.getValue(),  entry.getValue());  [CE]  <identifier>  expected  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(entry.getValue(),  entry.getValue());  [BUGGY]  return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	    OpenMapRealVector  res  =  new  OpenMapRealVector(v.getValue());  res.setEntry(entry.getValue(),  entry.getValue());		non-compiled	[CE]  <identifier>  expected	12	None	add
61	[BUG]  [BUGGY]    res.setIterator(iter.next());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setIterator(iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    res.setIterator(iter.next());		non-compiled	[CE]  <identifier>  expected	8	None	add
63	[BUG]  [BUGGY]    res.setNext(iter.next());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setNext(iter.next());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    res.setNext(iter.next());		non-compiled	[CE]  <identifier>  expected	8	None	add
64	[BUG]  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    iter.next();  res.setEntry(new  OpenIntToDoubleHashMap(v));		non-compiled	[CE]  <identifier>  expected	8	None	add
65	[BUG]  [BUGGY]    res.setIterator(new  OpenIntToDoubleHashMap());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]    res.setIterator(new  OpenIntToDoubleHashMap());  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	    res.setIterator(new  OpenIntToDoubleHashMap());		non-compiled	[CE]  <identifier>  expected	8	None	add
91	[BUG]  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();		non-compiled	[CE]  <identifier>  expected	14	None	add
94	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.size());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.size());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.size());		non-compiled	[CE]  <identifier>  expected	14	None	add
95	[BUG]  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [BUGGY]  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  <identifier>  expected	14	None	add
122	[BUG]  [BUGGY]  while(iter.hasNext()  &&!res.equals(v.getValue()))  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.hasNext()  &&!res.equals(v.getValue()))  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext()  &&!res.equals(v.getValue()))  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
123	[BUG]  [BUGGY]  while(iter.hasNext()  &&!res.isMultiply(v))  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.hasNext()  &&!res.isMultiply(v))  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext()  &&!res.isMultiply(v))  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
124	[BUG]  [BUGGY]  while(iter.hasNext()  &&!res.containsKey(v.getValue()))  {  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]  while(iter.hasNext()  &&!res.containsKey(v.getValue()))  {  [BUGGY]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	while(iter.hasNext()  &&!res.containsKey(v.getValue()))  {	while  (iter.hasNext())  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
152	[BUG]  [BUGGY]  checkEnumElementDimensions(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkEnumElementDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkEnumElementDimensions(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	13	None	replace
153	[BUG]  [BUGGY]  checkState(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkState(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkState(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	13	None	replace
154	[BUG]  [BUGGY]  checkDeserialization(v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  [BUGGY]  checkDeserialization(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	checkDeserialization(v.getDimension());	checkVectorDimensions(v.getDimension());  	non-compiled	[CE]  <identifier>  expected	13	None	replace
181	[BUG]  [BUGGY]    Iterator  <  OpenMapRealVector>  iter  =  v.iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    Iterator  <  OpenMapRealVector>  iter  =  v.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    Iterator  <  OpenMapRealVector>  iter  =  v.iterator();		non-compiled	[CE]  <identifier>  expected	6	None	add
182	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v.getValue()));		non-compiled	[CE]  <identifier>  expected	6	None	add
183	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap());  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    res.setEntry(new  OpenIntToDoubleHashMap());		non-compiled	[CE]  <identifier>  expected	6	None	add
184	[BUG]  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    res.setEntry(new  OpenIntToDoubleHashMap(v));  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    res.setEntry(new  OpenIntToDoubleHashMap(v));		non-compiled	[CE]  <identifier>  expected	6	None	add
185	[BUG]  [BUGGY]    Iterator  <  OpenMapRealVector>  iter  =  v.next();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  [BUGGY]    Iterator  <  OpenMapRealVector>  iter  =  v.next();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	    Iterator  <  OpenMapRealVector>  iter  =  v.next();		non-compiled	[CE]  <identifier>  expected	6	None	add
213	[BUG]  [BUGGY]  entries.put(index,  new  OpenIntToDoubleHashMap());  [CE]  <identifier>  expected  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  [BUGGY]  entries.put(index,  new  OpenIntToDoubleHashMap());  [BUGGY]  }  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	entries.put(index,  new  OpenIntToDoubleHashMap());	entries.remove(index);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
241	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.key()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  v.getValue(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  <identifier>  expected	9	None	replace
242	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  1  -  iter.getEntry(iter.key()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  1  -  iter.getEntry(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  1  -  iter.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  <identifier>  expected	9	None	replace
243	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  the  size  of  v.getEntry(iter.key()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  the  size  of  v.getEntry(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  the  size  of  v.getEntry(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  <identifier>  expected	9	None	replace
244	[BUG]  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entries.get(iter.key()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  entries.get(iter.key()));  [BUGGY]  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	res.setEntry(iter.key(),  iter.value()  *  entries.get(iter.key()));	res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  	non-compiled	[CE]  <identifier>  expected	9	None	replace
271	[BUG]  [BUGGY]  return  res  ==  null?  null  :  res;  [CE]  <identifier>  expected  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res  ==  null?  null  :  res;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res  ==  null?  null  :  res;	return  res;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
272	[BUG]  [BUGGY]  return  res!=  null?  null  :  res;  [CE]  <identifier>  expected  [CONTEXT]  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }          [BUGGY]  return  res!=  null?  null  :  res;  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	return  res!=  null?  null  :  res;	return  res;  	non-compiled	[CE]  <identifier>  expected	11	None	replace
304	[BUG]  [BUGGY]  Iterator  iter  =  openIntToDoubleHashMap.iterator();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]  Iterator  iter  =  openIntToDoubleHashMap.iterator();  [BUGGY]  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  openIntToDoubleHashMap.iterator();	Iterator  iter  =  entries.iterator();  	non-compiled	[CE]  <identifier>  expected	3	None	replace
332	[BUG]  [BUGGY]    this(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    this(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this(v,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  <identifier>  expected	18	None	add
333	[BUG]  [BUGGY]    this(v.getValue(),  v.getDimension());  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    this(v.getValue(),  v.getDimension());  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this(v.getValue(),  v.getDimension());		non-compiled	[CE]  <identifier>  expected	18	None	add
335	[BUG]  [BUGGY]    this.entry  =(Entry)entries.iterator();  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]    this.entry  =(Entry)entries.iterator();  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector  v)  {  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	    this.entry  =(Entry)entries.iterator();		non-compiled	[CE]  <identifier>  expected	18	None	add
363	[BUG]  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    final  OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap();		non-compiled	[CE]  <identifier>  expected	2	None	add
364	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getAccess());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getAccess());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getAccess());		non-compiled	[CE]  <identifier>  expected	2	None	add
392	[BUG]  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(entry.getValu  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(entry.getValu  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(entry.getValu	iter.advance();  	non-compiled	[CE]  <identifier>  expected	7	None	replace
393	[BUG]  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(entry.getVal  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(entry.getVal  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	for(Iterator  <  OpenMapRealVector>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(entry.getVal	iter.advance();  	non-compiled	[CE]  <identifier>  expected	7	None	replace
394	[BUG]  [BUGGY]  for(Iterator  <  OpenInt>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(v.getValu  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  [BUGGY]  for(Iterator  <  OpenInt>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(v.getValu  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	for(Iterator  <  OpenInt>  iter  =  iter.next();  iter.hasNext();)  {  Entry  <  K,  V>  entry  =(Entry)entries.get(iter.next());  if(entry.getValue().equals(v.getValu	iter.advance();  	non-compiled	[CE]  <identifier>  expected	7	None	replace
421	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getAccess());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getAccess());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getAccess());		non-compiled	[CE]  <identifier>  expected	4	None	add
423	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  new  OpenIntToDoubleHashMap(v.getEntry());		non-compiled	[CE]  <identifier>  expected	4	None	add
425	[BUG]  [BUGGY]    OpenIntToDoubleHashMap  entries  =  getEntries();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  [BUGGY]    OpenIntToDoubleHashMap  entries  =  getEntries();  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	    OpenIntToDoubleHashMap  entries  =  getEntries();		non-compiled	[CE]  <identifier>  expected	4	None	add
452	[BUG]  [BUGGY]    super();  v  =  new  OpenMapRealVector(v.getValue());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super();  v  =  new  OpenMapRealVector(v.getValue());  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super();  v  =  new  OpenMapRealVector(v.getValue());		non-compiled	[CE]  <identifier>  expected	20	None	add
453	[BUG]  [BUGGY]    super();  v  =  new  OpenMapRealVector(v.getSize());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super();  v  =  new  OpenMapRealVector(v.getSize());  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super();  v  =  new  OpenMapRealVector(v.getSize());		non-compiled	[CE]  <identifier>  expected	20	None	add
455	[BUG]  [BUGGY]    super();  v  =  new  OpenMapRealVector(v);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]    super();  v  =  new  OpenMapRealVector(v);  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	    super();  v  =  new  OpenMapRealVector(v);		non-compiled	[CE]  <identifier>  expected	20	None	add
483	[BUG]  [BUGGY]  openMapRealVector  res  =  new  OpenMapRealVector(v);  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  openMapRealVector  res  =  new  OpenMapRealVector(v);  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	openMapRealVector  res  =  new  OpenMapRealVector(v);	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  <identifier>  expected	1	None	replace
484	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInsets(v.getEntry()));  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInsets(v.getEntry()));  [BUGGY]  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(new  RectangleInsets(v.getEntry()));	OpenMapRealVector  res  =  new  OpenMapRealVector(this);  	non-compiled	[CE]  <identifier>  expected	1	None	replace
512	[BUG]  [BUGGY]  public  OpenMapRealVector(OpenMapRealVector.class)  {  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]  public  OpenMapRealVector(OpenMapRealVector.class)  {  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	public  OpenMapRealVector(OpenMapRealVector.class)  {	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
514	[BUG]  [BUGGY]  public  MapRealVector(OpenMapRealVector.class)  {  [CE]  <identifier>  expected  [CONTEXT]    [BUGGY]  public  MapRealVector(OpenMapRealVector.class)  {  [BUGGY]  virtualSize  =  v.getDimension();  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	public  MapRealVector(OpenMapRealVector.class)  {	public  OpenMapRealVector(OpenMapRealVector  v)  {  	non-compiled	[CE]  <identifier>  expected	17	None	replace
542	[BUG]  [BUGGY]  virtualSize  =(v  ==  null)?  v.getDimension()  :  v.getDimension();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =(v  ==  null)?  v.getDimension()  :  v.getDimension();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	virtualSize  =(v  ==  null)?  v.getDimension()  :  v.getDimension();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  <identifier>  expected	19	None	replace
544	[BUG]  [BUGGY]  virtualSize  =(v  ==  null)?  v.getDimension()  :  v.getInitialValue();  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector(OpenMapRealVector  v)  {  [BUGGY]  virtualSize  =(v  ==  null)?  v.getDimension()  :  v.getInitialValue();  [BUGGY]  entries  =  new  OpenIntToDoubleHashMap(v.getEntries());  epsilon  =  v.epsilon;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  <init>  [RETURN_TYPE]  OpenMapRealVector)  OpenMapRealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  epsilon  value  Iterator  iter  OpenMapRealVector  v  OpenIntToDoubleHashMap  entries  long  serialVersionUID  int  dimension  expectedSize  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	virtualSize  =(v  ==  null)?  v.getDimension()  :  v.getInitialValue();	virtualSize  =  v.getDimension();  	non-compiled	[CE]  <identifier>  expected	19	None	replace
573	[BUG]  [BUGGY]    res.setIterator(new  OpenIntToDoubleHashMap());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setIterator(new  OpenIntToDoubleHashMap());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setIterator(new  OpenIntToDoubleHashMap());		non-compiled	[CE]  <identifier>  expected	10	None	add
574	[BUG]  [BUGGY]    res.setIterator(iter.next());  [CE]  <identifier>  expected  [CONTEXT]  public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);  Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  [BUGGY]    res.setIterator(iter.next());  [BUGGY]  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        return  res;  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	    res.setIterator(iter.next());		non-compiled	[CE]  <identifier>  expected	10	None	add
