bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }      [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	replace	
2	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); [BUGGY] [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }      [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	361	361	3	add	
3	[BUG] [BUGGY] Iterator iter = entries.iterator(); [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] Iterator iter = entries.iterator(); [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }       [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	
4	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); [BUGGY] [BUGGY] Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }       [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	add	
5	[BUG] [BUGGY] while (iter.hasNext()) { [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); [BUGGY] while (iter.hasNext()) { [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	replace	
6	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); [BUGGY] [BUGGY] while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	363	363	3	add	
7	[BUG] [BUGGY] iter.advance(); [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { [BUGGY] iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        return res; [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	replace	
8	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { [BUGGY] [BUGGY] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        return res; [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	364	364	3	add	
9	[BUG] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); [BUGGY] }        return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	replace	
10	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); [BUGGY] [BUGGY] res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	365	365	3	add	
11	[BUG] [BUGGY] return res; [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [BUGGY] return res; [BUGGY] } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	replace	
12	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }        [BUGGY] [BUGGY] return res; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	374	374	3	add	
13	[BUG] [BUGGY] checkVectorDimensions(v.getDimension()); [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] checkVectorDimensions(v.getDimension()); [BUGGY] OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }     [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	replace	
14	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector ebeMultiply(RealVector v) { [BUGGY] [BUGGY] checkVectorDimensions(v.getDimension()); OpenMapRealVector res = new OpenMapRealVector(this); Iterator iter = entries.iterator(); while (iter.hasNext()) { iter.advance(); res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())); }     [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] ebeMultiply [RETURN_TYPE] OpenMapRealVector  RealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d epsilon value RealVector v Iterator iter OpenMapRealVector res OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension expectedSize i key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5773502691896258	360	360	3	add	
15	[BUG] [BUGGY] entries.remove(index); [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { [BUGGY] entries.remove(index); [BUGGY] } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	replace	
16	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public void setEntry(int index, double value) { checkIndex(index); if (!isDefaultValue(value)) { entries.put(index, value); } else if (entries.containsKey(index)) { [BUGGY] [BUGGY] entries.remove(index); } } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] setEntry [RETURN_TYPE] void  int index double value [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE d delta epsilon max res value Iterator iter OpenIntToDoubleHashMap entries larger randomAccess long serialVersionUID int dimension end expectedSize i index key n resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.5	592	592	3	add	
17	[BUG] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	replace	
18	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] [BUGGY] [BUGGY] public OpenMapRealVector(OpenMapRealVector v) { virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	179	179	3	add	
19	[BUG] [BUGGY] virtualSize = v.getDimension(); [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] virtualSize = v.getDimension(); [BUGGY] entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	replace	
20	[BUG] [BUGGY] [FE] java.lang.AssertionError: entry #0 testEbeDivideMixedTypes [CONTEXT] public OpenMapRealVector(OpenMapRealVector v) { [BUGGY] [BUGGY] virtualSize = v.getDimension(); entries = new OpenIntToDoubleHashMap(v.getEntries()); epsilon = v.epsilon; } [CLASS] OpenMapRealVector OpenMapEntry OpenMapSparseIterator [METHOD] <init> [RETURN_TYPE] OpenMapRealVector)  OpenMapRealVector v [VARIABLES] Entry current boolean double DEFAULT_ZERO_TOLERANCE epsilon value Iterator iter OpenMapRealVector v OpenIntToDoubleHashMap entries long serialVersionUID int dimension expectedSize key resize virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.4472135954999579	180	180	3	add	
