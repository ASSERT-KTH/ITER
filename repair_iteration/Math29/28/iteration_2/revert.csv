projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=getEntryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{returnentries.get(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{returnentries.get(0);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index==entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448entry<0||index>=entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index,iter.next());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{returnentries.get(1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}else{returnentries.get(0);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntry(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entries.size());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entry=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448read();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entries);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?this.entries.iterator():index;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?entries.iterator():this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=this.entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkIndex(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkInt(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkInt(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index*DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkIndex(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=this.entryList.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=getEntryIterator(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.entrySet();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(entries!=null){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{returnentries.get(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{returnentries.get(0);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<=0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index+DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckIntToDoubleHashMapentries=(CheckIntToDoubleHashMap)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entryList.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=(this.entries!=null)?this.entries.iterator():index;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<=0||index>=entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<=0||index==entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index,iter.next(),DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index,iter.getValue());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index,iter.next()-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,newOpenMapEntryIterator());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entries.size()-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkIndex(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}else{returnentries.get(1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=entries.get(0);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?this.entries.iterator():index.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?this.entries.iterator():this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entry.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index/DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index+DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index*DEFAULT_ZERO_TOLERANCE+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entries.keySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.values();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=this.entries.entrySet();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=getEntryIterator(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries==null)?this.entries.iterator():index;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?this.entries.iterator():index+1;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?entries.iterator():index;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index==entries.size()){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entries.keySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.getValue().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entry);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.remove(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkInt(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index==entries.size()){checkInt(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkInt(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.keySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index==entries.size()){checkIndex(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{returnentries.get(1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkLong(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index+1,iter.next());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index+1,iter.getValue());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entry.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entries.get(index));
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entries.size()+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index*1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index,index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entry.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index-1+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448entry<0||index==entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index-1+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iterator().entrySet();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=(index<0)?iterator():null;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckState.checkState(index<0||index>=entries.size());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entryList.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index==entries.size()){checkIndex(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,newOpenIntToDoubleHashMap());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entry=entry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entry=entry.getValue()+1;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entry=entry.getValue()+index;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){read();}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){read();}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkState(index==DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkState(index!=DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entry.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null?this.entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries==null?entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index-1+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448entry<=0||index>=entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448entry<=0||index>=entries.size()){checkIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.nextEntry();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntry(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntry(index,index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntry(index,iter.next());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckIntToDoubleHashMapentries=(CheckIntToDoubleHashMap)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckIntToDoubleHashMapentries=(CheckIntToDoubleHashMap)entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckIntToDoubleHashMapentries=(CheckIntToDoubleHashMap)entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index/DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index+1,index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*2,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(entries==null){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(entries!=null){checkAccess(index,entries.size());}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckState.checkState(index<0||index>entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index==entries.size()){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index+1,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448((OpenMapEntry)iter).setIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entries.entryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkAccess(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkAccess(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?this.entries.iterator():DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries==null)?this.entries.iterator():this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries==null)?entries.iterator():this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=this.entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkAccess(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkAccess(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null?entries.iterator():0);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=this.entries.keySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index+3);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkIndex(index);}else{returnentries.get(1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index+1);}else{returnentries.get(1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntry(index,iter);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntryIterator(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){read();}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){read();}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,iter);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*DEFAULT_ZERO_TOLERANCE+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkInt(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index*1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index-2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=(index<0)?iterator():DEFAULT_ZERO_TOLERANCE;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(entries!=null||index<0||index>entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index*2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=getEntryIterator(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448entry<0||index>=entries.size()){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index,newOpenIntToDoubleHashMap());}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkInt(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkInt(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entry=iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=iter.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntry(index,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?this.entries.iterator():entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=entries.get(index++);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkIndex(index+2);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkIndex(index+1,entries.size());}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index*DEFAULT_ZERO_TOLERANCE,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*DEFAULT_ZERO_TOLERANCE,DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*DEFAULT_ZERO_TOLERANCE,expectedSize);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(entries!=null&&index<entries.size()){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.getEntry().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.iterator().next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index+2);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index+1);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index+1,entries.size());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448ensureAccess(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.get(index++);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.getIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.getEntry();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,iter.size());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index+1,entries.size());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448reset();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkNotNull();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448init();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index+2);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<1){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkInt(index+1);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448entry<0||index>entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=(this.entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=(this.entries!=null?this.entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iterateEntryList();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckIntToDoubleHashMapentries=(CheckIntToDoubleHashMap<String,Integer>)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.openMapEntry=(OpenMapEntry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entry=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)iter.getKey();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=(this.entries!=null?this.entries.iterator():DEFAULT_ZERO_TOLERANCE);
