projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkIndex(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=getEntryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{returnentries.get(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{returnentries.get(0);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index==entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448entry<0||index>=entries.size()){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index,iter.next());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index);}else{returnentries.get(1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}else{returnentries.get(0);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=current.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryList.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=this.entryIterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entryMap.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=getEntry(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<?>entry=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entries.size());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entry=entry.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448read();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448this.entries.put(index,entries);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entry.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)iter.getValue();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entryentry=(Entry)this.entries.get(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index+1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?this.entries.iterator():index;
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null)?entries.iterator():this.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=this.entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkIndex(index);}else{thrownewIllegalArgumentException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkInt(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkInt(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkInt(index*DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>=entries.size()){checkIndex(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0||index>entries.size()){checkIndex(index);}else{thrownewIllegalStateException("");}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=current.entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=this.entryList.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=getEntryIterator(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.entrySet();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkAccess(index-1);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(entries!=null){checkAccess(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{returnentries.get(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<0){checkAccess(index);}else{returnentries.get(0);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=iter.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Entry<K,V>entry=entries.entrySet().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index<=0){checkIndex(index);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=(this.entries!=null?entries.iterator():DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index*DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448checkSize(index+DEFAULT_ZERO_TOLERANCE);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448CheckIntToDoubleHashMapentries=(CheckIntToDoubleHashMap)entries.get(index);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iteratoriter=entries.values().iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448if(index>=0){checkIndex(index+1);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java448Iterator<Entry>iter=entryList.iterator();
