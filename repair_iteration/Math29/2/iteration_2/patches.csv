bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  res.setEntry(v,  v.getValue()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  v.getValue()  +  1);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  v.getValue()  +  1);	  res.setEntry(null,    v.getValue()    +    1);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	45	None	replace
2	[BUG]  [BUGGY]  Iterator  iter  =  v.valueIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  v.valueIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  v.valueIterator();	  Iterator    iter    =    res.valueIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	39	None	replace
3	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    OpenMapRealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
4	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    OpenMapRealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
5	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v,  this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v,  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(v,  this);	  RealVector    res    =    new    OpenMapRealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
6	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v,  this);	  RealVector    res    =    new    OpenMapRealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
7	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  v.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  <  Entry>  iter  =  v.entrySet().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  <  Entry>  iter  =  v.entrySet().iterator();	  Iterator    <    Entry>    iter    =    entries.entrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	47	None	replace
8	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  <  Entry>  iter  =  entries.keySet().iterator();	  Iterator    <    Entry>    iter    =    res.keySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	3	None	replace
9	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue()  *  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue()  *  1);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entry.getKey(),  entry.getValue()  *  1);	  res.setEntry(entry.getKey(),    entry.getValue()    +    1);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	7	None	replace
10	[BUG]  [BUGGY]  res.setEntry(v.getEntry(),  v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getEntry(),  v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getEntry(),  v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getEntry(),    v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
11	[BUG]  [BUGGY]  res.setEntry(v,  null.getKey());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  null.getKey());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  null.getKey());	  res.setEntry(null,    v.getKey());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
12	[BUG]  [BUGGY]  Res.setEntry(new  RealVectorIterator(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(new  RealVectorIterator(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(new  RealVectorIterator(),  v);	  Res.setEntry(new    RealVectorIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
13	[BUG]  [BUGGY]  Res.setEntry(new  RealVectorIterator(),  res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(new  RealVectorIterator(),  res);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(new  RealVectorIterator(),  res);	  Res.setEntry(new    RealVectorIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
14	[BUG]  [BUGGY]  Res.setEntry(new  RealIntToDoubleHashMapIterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(new  RealIntToDoubleHashMapIterator());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(new  RealIntToDoubleHashMapIterator());	  Res.setEntry(new    RealVectorIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
15	[BUG]  [BUGGY]  res.setEntry(new  OpenMapRealVectorIterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  OpenMapRealVectorIterator());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  OpenMapRealVectorIterator());	  res.setEntry(new    OpenMapSparseIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
16	[BUG]  [BUGGY]  res.setEntry(new  OpenMapSparseIterator(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  OpenMapSparseIterator(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  OpenMapSparseIterator(),  v);	  res.setEntry(new    OpenMapSparseIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
17	[BUG]  [BUGGY]  res.setEntry(new  OpenIntToDoubleHashMap(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  OpenIntToDoubleHashMap(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  OpenIntToDoubleHashMap(),  v);	  res.setEntry(new    OpenIntToDoubleHashMap());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	33	None	replace
18	[BUG]  [BUGGY]  res.setEntry(v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getValue());	  res.setEntry(entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	22	None	replace
19	[BUG]  [BUGGY]  res.setEntry(entries.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entries.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entries.getValue());	  res.setEntry(entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	22	None	replace
20	[BUG]  [BUGGY]  res.setEntry(entries,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entries,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entries,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(entries);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	9	None	replace
21	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  this);	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	34	None	replace
22	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	34	None	replace
23	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getEntry());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getEntry());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getEntry());	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	34	None	replace
24	[BUG]  [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  value);	  res.setEntry(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	23	None	replace
25	[BUG]  [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  true);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  true);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  true);	  res.setEntry(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	23	None	replace
26	[BUG]  [BUGGY]  res.setEntry(entries.getKey(),  entries.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entries.getKey(),  entries.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entries.getKey(),  entries.getValue(),  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(entries.getKey(),    entries.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
27	[BUG]  [BUGGY]  res.setEntry(entries.getKey(),  entries.getValue()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entries.getKey(),  entries.getValue()  +  1);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entries.getKey(),  entries.getValue()  +  1);	  res.setEntry(entries.getKey(),    entries.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
28	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  entries.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getKey(),  entries.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getKey(),  entries.getValue());	  res.setEntry(entries.getKey(),    entries.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
29	[BUG]  [BUGGY]  Res.setEntry(v.getEntry(),  res);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(v.getEntry(),  res);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(v.getEntry(),  res);	  Res.setEntry(v.getEntry());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	42	None	replace
30	[BUG]  [BUGGY]  Res.setEntry(v.getEntry(),  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(v.getEntry(),  epsilon);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(v.getEntry(),  epsilon);	  Res.setEntry(v.getEntry());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	42	None	replace
31	[BUG]  [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  OpenMapRealVector(v);	  RealVector    res    =    new    OpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
32	[BUG]  [BUGGY]  RealVector  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    RealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	27	None	replace
33	[BUG]  [BUGGY]  RealVector  res  =  new  RealVector(this,  v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVector(this,  v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVector(this,  v,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    RealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	27	None	replace
34	[BUG]  [BUGGY]  RealVector  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE,  v);	  RealVector    res    =    new    RealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	27	None	replace
35	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  value);	  res.setEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
36	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  double);  [CE]  '.class'  expected  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  double);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  double);	  res.setEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  '.class'  expected	6	None	replace
37	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE,  v);	  res.setEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
38	[BUG]  [BUGGY]  Iterator  iter  =  entries.keySet().entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  entries.keySet().entryIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  entries.keySet().entryIterator();	  Iterator    iter    =    res.keySet().entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
39	[BUG]  [BUGGY]  Iterator  iter  =  res.entrySet().entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  res.entrySet().entryIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  res.entrySet().entryIterator();	  Iterator    iter    =    res.keySet().entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
40	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(this,  v);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
41	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(null);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(null);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(null);	  OpenMapRealVector    res    =    new    OpenMapRealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	26	None	replace
42	[BUG]  [BUGGY]  RealVector  res  =  new  RealMapRealVectorIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealMapRealVectorIterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealMapRealVectorIterator();	  res.setEntry(new    RealMapRealVectorIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	36	None	replace
43	[BUG]  [BUGGY]  res.setEntry(new  RealMapRealVectorIterator(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  RealMapRealVectorIterator(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  RealMapRealVectorIterator(),  v);	  res.setEntry(new    RealMapRealVectorIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	36	None	replace
44	[BUG]  [BUGGY]  final  RealVector  res  =  new  RealVector(v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  RealVector(v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  RealVector(v);	  final    RealVector    res    =    new    RealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
45	[BUG]  [BUGGY]  final  RealVector  res  =  new  RealVector(this,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  RealVector(this,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  RealVector(this,  v);	  final    RealVector    res    =    new    RealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
46	[BUG]  [BUGGY]  final  RealVector  res  =  new  RealVector(null);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  RealVector(null);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  RealVector(null);	  final    RealVector    res    =    new    RealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
47	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  /  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getDimension()  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getDimension()  /  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getDimension()    *    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
48	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getDimension()    *    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
49	[BUG]  [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getDimension()  *  DEFAULT_ZERO_TOLERANCE,  value);	  res.setEntry(v.getDimension()    *    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	46	None	replace
50	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  v.values().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  <  Entry>  iter  =  v.values().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  <  Entry>  iter  =  v.values().iterator();	  Iterator    <    Entry>    iter    =    res.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	37	None	replace
51	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	32	None	replace
52	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getValue());	  RealVector    res    =    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	32	None	replace
53	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getSize());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getSize());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getSize());	  RealVector    res    =    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	32	None	replace
54	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getEntry());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getEntry());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v.getEntry());	  RealVector    res    =    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	32	None	replace
55	[BUG]  [BUGGY]  Iterator  iter  =  v.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  v.iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  v.iterator();	  Iterator    iter    =    v.entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	12	None	replace
56	[BUG]  [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
57	[BUG]  [BUGGY]  res.setEntry(new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE));  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  RealVectorIterator(v,  DEFAULT_ZERO_TOLERANCE));	  res.setEntry(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
58	[BUG]  [BUGGY]  res.setEntry(new  RealVectorIterator(v));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  RealVectorIterator(v));  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  RealVectorIterator(v));	  res.setEntry(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
59	[BUG]  [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  DEFAULT_ZERO_TOLERANCE,  v.getValue());	  res.setEntry(v,    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	40	None	replace
60	[BUG]  [BUGGY]  res.setEntry(v,  v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  v.getValue(),  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v,    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	40	None	replace
61	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  res.entries.iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  <  Entry>  iter  =  res.entries.iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  <  Entry>  iter  =  res.entries.iterator();	  Iterator    <    Entry>    iter    =    this.entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	5	None	replace
62	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getKey(),  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getKey(),  v.getValue());	  res.setEntry(v.getKey());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	41	None	replace
63	[BUG]  [BUGGY]  res.setEntry(new  RealIntToDoubleHashMap(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  RealIntToDoubleHashMap(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  RealIntToDoubleHashMap(),  v);	  res.setEntry(new    RealIntToDoubleHashMap());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	19	None	replace
64	[BUG]  [BUGGY]  res.setEntry(new  RealIntToDoubleHashMap(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  RealIntToDoubleHashMap(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  RealIntToDoubleHashMap(),  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(new    RealIntToDoubleHashMap());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	19	None	replace
65	[BUG]  [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(this,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(this,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  OpenMapRealVector(this,  v);	  final    RealVector    res    =    new    OpenMapRealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
66	[BUG]  [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(null);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(null);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  OpenMapRealVector(null);	  final    RealVector    res    =    new    OpenMapRealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
67	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entry.getKey(),  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entry.getKey(),  v.getValue());	  res.setEntry(v.getKey(),    entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	29	None	replace
68	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getKey(),    entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	29	None	replace
69	[BUG]  [BUGGY]  res  =  new  RealVector(this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res  =  new  RealVector(this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res  =  new  RealVector(this);	  res    =    new    RealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	50	None	replace
70	[BUG]  [BUGGY]  res  =  new  RealVector(this,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res  =  new  RealVector(this,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res  =  new  RealVector(this,  v);	  res    =    new    RealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	50	None	replace
71	[BUG]  [BUGGY]  res  =  new  RealVector(v,  this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res  =  new  RealVector(v,  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res  =  new  RealVector(v,  this);	  res    =    new    RealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	50	None	replace
72	[BUG]  [BUGGY]  RealVector  res  =  new  RealVector(v,  this,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVector(v,  this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVector(v,  this,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    RealVector(v,    this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	30	None	replace
73	[BUG]  [BUGGY]  RealVector  res  =  new  RealVector(v,  this,  epsilon);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVector(v,  this,  epsilon);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVector(v,  this,  epsilon);	  RealVector    res    =    new    RealVector(v,    this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	30	None	replace
74	[BUG]  [BUGGY]  res.setEntry(new  RealIntToDoubleHashMapIterator(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  RealIntToDoubleHashMapIterator(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  RealIntToDoubleHashMapIterator(),  v);	  res.setEntry(new    RealIntToDoubleHashMapIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	18	None	replace
75	[BUG]  [BUGGY]  RealVector  res  =  new  RealVectorIterator(this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVectorIterator(this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVectorIterator(this);	  RealVector    res    =    new    RealVectorIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
76	[BUG]  [BUGGY]  RealVector  res  =  new  RealVectorIterator(null);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVectorIterator(null);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVectorIterator(null);	  RealVector    res    =    new    RealVectorIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
77	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  this);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
78	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entry.getKey(),  entry.getValue(),  v);	  res.setEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
79	[BUG]  [BUGGY]  res.setEntry(v.getKey(),  v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getKey(),  v.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getKey(),  v.getValue(),  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
80	[BUG]  [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entry.getKey(),  entry.getValue(),  v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entry.getKey(),  entry.getValue(),  v,  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	6	None	replace
81	[BUG]  [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(v,  this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  OpenMapRealVector(v,  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  OpenMapRealVector(v,  this);	  final    RealVector    res    =    new    OpenMapRealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	43	None	replace
82	[BUG]  [BUGGY]  res  =  new  RealVector(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res  =  new  RealVector(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res  =  new  RealVector(v,  DEFAULT_ZERO_TOLERANCE);	  res    =    new    RealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	50	None	replace
83	[BUG]  [BUGGY]  Res.setEntry(res,  new  RealVectorIterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(res,  new  RealVectorIterator());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(res,  new  RealVectorIterator());	  Res.setEntry(new    RealVectorIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	48	None	replace
84	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.entrySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.entrySet().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  <  Entry>  iter  =  this.entries.entrySet().iterator();	  Iterator    <    Entry>    iter    =    entries.entrySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	47	None	replace
85	[BUG]  [BUGGY]  Iterator  iter  =  entries.keySet().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  entries.keySet().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  entries.keySet().iterator();	  Iterator    iter    =    res.keySet().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	10	None	replace
86	[BUG]  [BUGGY]  RealVector  res  =  new  RealIntToDoubleHashMap();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealIntToDoubleHashMap();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealIntToDoubleHashMap();	  res.setEntry(new    RealIntToDoubleHashMap());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	19	None	replace
87	[BUG]  [BUGGY]  res.setEntry(entries.getKey(),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entries.getKey(),  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entries.getKey(),  v.getValue());	  res.setEntry(entries.getKey(),    entries.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	49	None	replace
88	[BUG]  [BUGGY]  res.setEntry(v,  v.getKey());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  v.getKey());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  v.getKey());	  res.setEntry(null,    v.getKey());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	44	None	replace
89	[BUG]  [BUGGY]  RealVector  res  =  new  RealVector(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVector(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVector(v,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    RealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	25	None	replace
90	[BUG]  [BUGGY]  Iterator  iter  =  current.entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  current.entryIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  current.entryIterator();	  Iterator    iter    =    v.entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	12	None	replace
91	[BUG]  [BUGGY]  res.setEntry(v,  null,  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  null,  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  null,  v.getValue());	  res.setEntry(v,    null.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	17	None	replace
92	[BUG]  [BUGGY]  Iterator  iter  =  res.keyIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  res.keyIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  res.keyIterator();	  Iterator    iter    =    res.valueIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	39	None	replace
93	[BUG]  [BUGGY]  final  RealVector  res  =  new  RealVector(v,  this);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  final  RealVector  res  =  new  RealVector(v,  this);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	final  RealVector  res  =  new  RealVector(v,  this);	  final    RealVector    res    =    new    RealVector(this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	51	None	replace
94	[BUG]  [BUGGY]  RealVector  res  =  new  RealVectorIterator(v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVectorIterator(v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVectorIterator(v);	  RealVector    res    =    new    RealVectorIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
95	[BUG]  [BUGGY]  RealVector  res  =  new  RealVectorIterator(v.getDimension());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVectorIterator(v.getDimension());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVectorIterator(v.getDimension());	  RealVector    res    =    new    RealVectorIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
96	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.values().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  <  Entry>  iter  =  entries.values().iterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  <  Entry>  iter  =  entries.values().iterator();	  Iterator    <    Entry>    iter    =    res.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	37	None	replace
97	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(null,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(null,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(null,  v);	  RealVector    res    =    new    OpenMapRealVector(null);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	31	None	replace
98	[BUG]  [BUGGY]  res.setEntry(v.getDimension(),  value);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getDimension(),  value);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getDimension(),  value);	  res.setEntry(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	23	None	replace
99	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  res.entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  <  Entry>  iter  =  res.entryIterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  <  Entry>  iter  =  res.entryIterator();	  Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	2	None	replace
100	[BUG]  [BUGGY]  res.setValue(v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setValue(v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setValue(v.getValue());	  res.setEntry(entry.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	22	None	replace
101	[BUG]  [BUGGY]  RealVector  res  =  new  RealIntToDoubleHashMapIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealIntToDoubleHashMapIterator();  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealIntToDoubleHashMapIterator();	  res.setEntry(new    RealIntToDoubleHashMapIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	18	None	replace
102	[BUG]  [BUGGY]  res.setEntry(new  OpenMapRealVector());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  OpenMapRealVector());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  OpenMapRealVector());	  res.setEntry(new    OpenMapSparseIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	8	None	replace
103	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.values().iterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  this.entries.values().iterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  this.entries.values().iterator();	  Iterator    iter    =    entries.values().iterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	38	None	replace
104	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v,  v);	  RealVector    res    =    new    OpenMapRealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
105	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  true);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v,  true);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v,  true);	  RealVector    res    =    new    OpenMapRealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	16	None	replace
106	[BUG]  [BUGGY]  RealVector  res  =  new  RealVector(v,  this,  true);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVector(v,  this,  true);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVector(v,  this,  true);	  RealVector    res    =    new    RealVector(v,    this);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	30	None	replace
107	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(this,  v.getDimension(),  v);	  RealVector    res    =    new    OpenMapRealVector(this,    v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	32	None	replace
108	[BUG]  [BUGGY]  res.setEntry(v.getEntry(),  v.getDimension()  +  1);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getEntry(),  v.getDimension()  +  1);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getEntry(),  v.getDimension()  +  1);	  res.setEntry(v.getEntry(),    v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	11	None	replace
109	[BUG]  [BUGGY]  Res.setEntry(new  RealMapRealVectorIterator());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(new  RealMapRealVectorIterator());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(new  RealMapRealVectorIterator());	  res.setEntry(new    RealMapRealVectorIterator());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	36	None	replace
110	[BUG]  [BUGGY]  res.setEntry(v,  v.getDimension());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  v.getDimension());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  v.getDimension());	  res.setEntry(v,    v.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	40	None	replace
111	[BUG]  [BUGGY]  Res.setEntry(v.getEntry(),  v);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Res.setEntry(v.getEntry(),  v);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Res.setEntry(v.getEntry(),  v);	  Res.setEntry(v.getEntry());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	42	None	replace
112	[BUG]  [BUGGY]  res.setEntry(v.getKey()  +  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getKey()  +  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getKey()  +  DEFAULT_ZERO_TOLERANCE);	  res.setEntry(v.getKey());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	41	None	replace
113	[BUG]  [BUGGY]  RealVector  res  =  new  RealVectorIterator(entries);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  RealVectorIterator(entries);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  RealVectorIterator(entries);	  RealVector    res    =    new    RealVectorIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	35	None	replace
114	[BUG]  [BUGGY]  res.setEntry(entries.getKey());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(entries.getKey());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(entries.getKey());	  res.setEntry(entry.getKey());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	21	None	replace
115	[BUG]  [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	OpenMapRealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);	  OpenMapRealVector    res    =    new    OpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	15	None	replace
116	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(v,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    OpenMapRealVector(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	14	None	replace
117	[BUG]  [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v.getDimension(),  DEFAULT_ZERO_TOLERANCE,  v.getValue());	  res.setEntry(v.getDimension(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	23	None	replace
118	[BUG]  [BUGGY]  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res  =  new  RealVector(this,  DEFAULT_ZERO_TOLERANCE);	  RealVector    res    =    new    RealVector(this,    v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	27	None	replace
119	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  v.getValue());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  v.getValue());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  v.getValue());	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	34	None	replace
120	[BUG]  [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  v.getEntry());  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  v.getEntry());  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	RealVector  res  =  new  OpenMapRealVector(v.getDimension(),  v.getEntry());	  RealVector    res    =    new    OpenMapRealVector(v.getDimension());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	34	None	replace
121	[BUG]  [BUGGY]  Iterator  iter  =  res.values().entryIterator();  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  Iterator  iter  =  res.values().entryIterator();  [BUGGY]      while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	Iterator  iter  =  res.values().entryIterator();	  Iterator    iter    =    res.keySet().entryIterator();    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	13	None	replace
122	[BUG]  [BUGGY]  res.setEntry(v,  null);  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(v,  null);  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(v,  null);	  res.setEntry(v,    null.getValue());    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	17	None	replace
123	[BUG]  [BUGGY]  res.setEntry(new  RealVector(v,  DEFAULT_ZERO_TOLERANCE));  [CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  OpenMapRealVector  ebeMultiply(RealVector  v)  {  checkVectorDimensions(v.getDimension());  OpenMapRealVector  res  =  new  OpenMapRealVector(this);      [BUGGY]  res.setEntry(new  RealVector(v,  DEFAULT_ZERO_TOLERANCE));  [BUGGY]      Iterator  iter  =  entries.iterator();  while  (iter.hasNext())  {  iter.advance();  res.setEntry(iter.key(),  iter.value()  *  v.getEntry(iter.key()));  }        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  ebeMultiply  [RETURN_TYPE]  OpenMapRealVector  RealVector  v  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  epsilon  value  RealVector  v  Iterator  iter  OpenMapRealVector  res  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  expectedSize  i  key  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.6666666666666666	362	362	3	replace	res.setEntry(new  RealVector(v,  DEFAULT_ZERO_TOLERANCE));	  res.setEntry(v);    	non-compiled	[CE]  type  OpenIntToDoubleHashMap.Iterator  does  not  take  parameters	20	None	replace
