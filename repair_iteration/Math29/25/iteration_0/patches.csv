bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
2	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
3	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
4	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
5	[BUG]  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
6	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  }	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
7	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
8	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(index);  }  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(index);  }	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
9	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  setEntry(current,  value);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  setEntry(current,  value);  }  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  setEntry(current,  value);  }	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
10	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.getValue  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.getValue  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.getValue	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
11	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.getKey()  ==  value)  {  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.getKey()  ==  value)  {  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.getKey()  ==  value)  {	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
12	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
13	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
14	[BUG]  [BUGGY]    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE);		non-compiled	[CE]  illegal  start  of  expression	50	None	add
15	[BUG]  [BUGGY]    addEntry(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    addEntry(entry.getKey(),  entry.getValue());  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    addEntry(entry.getKey(),  entry.getValue());		non-compiled	[CE]  illegal  start  of  expression	50	None	add
16	[BUG]  [BUGGY]    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value);  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value);		non-compiled	[CE]  illegal  start  of  expression	50	None	add
17	[BUG]  [BUGGY]    addEntry(entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    addEntry(entry.getValue(),  value);  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    addEntry(entry.getValue(),  value);		non-compiled	[CE]  illegal  start  of  expression	50	None	add
18	[BUG]  [BUGGY]    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value);		non-compiled	[CE]  illegal  start  of  expression	50	None	add
19	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(value);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(value);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  entry.setValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
20	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current);  }  [CE]  illegal  start  of  expression  [FE]      java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
21	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
22	[BUG]  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  entry.next().setValue(value);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  entry.next().setValue(value);  }  [BUGGY]  }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	    if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  entry.next().setValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	50	None	add
23	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]    java.lang.AssertionError:  entry  #0  [CONTEXT]  public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]    [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	}  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
