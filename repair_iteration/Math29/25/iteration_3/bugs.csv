bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  value,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  index,  value);  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  index,  value);	  new    EntryIterator(this,    this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value,  iter);  [CE]  illegal  start  of  expression  [FE]                              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value,  iter);	  new    EntryIterator(this,    this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
4	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  index,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  index,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  index,  DEFAULT_ZERO_TOLERANCE,  value);	  new    EntryIterator(this,    this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  Entry  <?>  entry  =  entry.getValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  entry  =  entry.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  entry  =  entry.getValue();	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDo    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  entry  =  entry.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entry.getValue();	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDo    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  Entry  <?>  entry  =  entry.getKey();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  entry  =  entry.getKey();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  entry  =  entry.getKey();	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDo    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    value,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
9	[BUG]  [BUGGY]  new  EntryIterator(this,  current,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  current,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    value,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
10	[BUG]  [BUGGY]  createEntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  createEntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	createEntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    value,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
11	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
12	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
13	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
14	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
15	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.get  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.get  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.get	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkInde    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValu  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValu  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValu	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkInde    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
21	[BUG]  [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
22	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index);  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
23	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue();  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue();  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
24	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entry.getValue();  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
25	[BUG]  [BUGGY]  Entry  current  =(Entry)this.current.getValue();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.current.getValue();  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.current.getValue();  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
26	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
27	[BUG]  [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.n  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.n  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.n	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)enter.n    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
28	[BUG]  [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  =  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)enter.n    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
29	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }	  Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
30	[BUG]  [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }	  Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
31	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }	  Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
32	[BUG]  [BUGGY]  entry.getKey(),  entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  entry.getKey(),  entry.getValue(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	entry.getKey(),  entry.getValue(),  value);	  addEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
33	[BUG]  [BUGGY]  addEntry(entry.getValue(),  entry.getKey(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getValue(),  entry.getKey(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  entry.getKey(),  DEFAULT_ZERO_TOLERANCE);	  addEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
34	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  +  1,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  +  1,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue()  +  1,  DEFAULT_ZERO_TOLERANCE);	  addEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
35	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
36	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
37	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value)  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value)  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value)	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkInde    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
38	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkInde    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  value,  iter);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  value,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  value,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value,    iter);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
40	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  key,  value,  iter);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  key,  value,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  key,  value,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value,    iter);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
41	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  index,  iter);  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  index,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  index,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value,    iter);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
42	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  /  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  /  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue()  /  1);	  addEntry(entry.getKey(),    entry.getValue()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
43	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue()  -  1);	  addEntry(entry.getKey(),    entry.getValue()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
44	[BUG]  [BUGGY]  new  EntryIterator(this,  index).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index).setValue(value  /  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    index).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
45	[BUG]  [BUGGY]  new  EntryIterator(this,  index).setValue(value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index).setValue(value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index).setValue(value,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    index).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
46	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index);  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index);  entry.setValue(value);	  Entry    current    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
47	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entry.getValue();  entry.setValue(value);	  Entry    current    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
48	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.getValue();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.getValue();  entry.setValue(value);	  Entry    current    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
49	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue();  entry.setValue(value);	  Entry    current    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
51	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
52	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
53	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  this.entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  iter  =  this.entries.iterator();	  Iterator    <    OpenIntToDoubleHashMap>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
54	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.values().iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.values().iterator();	  Iterator    <    OpenIntToDoubleHashMap>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
55	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.entrySet().iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.entrySet().iterator();	  Iterator    <    OpenIntToDoubleHashMap>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
56	[BUG]  [BUGGY]  if(value  <  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
57	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
58	[BUG]  [BUGGY]  if(value  <  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
59	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(index,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(index,  value);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  setEntry(index,  value);	  Entry    current    =(Entry)iter.next();    setEntry(current,    value);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
61	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entries.get(index  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  current  =  entries.get(index  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entries.get(index  +  1);	  Entry    <    K,    V>    current    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entries.get(index  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  current  =  entries.get(index  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entries.get(index  -  1);	  Entry    <    K,    V>    current    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entry.getValue();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  current  =  entry.getValue();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entry.getValue();	  Entry    <    K,    V>    current    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
65	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
66	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
67	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
68	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.current.getValue();  entry.setValue(entry.getValue());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)this.current.getValue();  entry.setValue(entry.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)this.current.getValue();  entry.setValue(entry.getValue());	  Entry    entry    =(Entry)current.getValue();    entry.setValue(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
69	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getKey());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getKey());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getKey());	  Entry    entry    =(Entry)current.getValue();    entry.setValue(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
70	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getKey();  entry.setValue(entry.getValue());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)current.getKey();  entry.setValue(entry.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getKey();  entry.setValue(entry.getValue());	  Entry    entry    =(Entry)current.getValue();    entry.setValue(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
71	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.next();  entry.setValue(current.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.next();  entry.setValue(current.getValue());	  Entry    current    =(Entry)current.next();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
72	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.next();  entry.setValue(current.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.next();  entry.setValue(current.getValue());	  Entry    current    =(Entry)current.next();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
73	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entry.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entry.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entry.iterator();	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    entry.iterator();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
74	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entryList.iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entryList.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entryList.iterator();	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    entry.iterator();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
75	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entryIterator.iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entryIterator.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entryIterator.iterator();	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    entry.iterator();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
76	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
77	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
78	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  entry  =  entries.values().iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entries.values().iterator();	  Entry    <    K,    V>    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
79	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.entrySet();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  entry  =  entries.entrySet();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entries.entrySet();	  Entry    <    K,    V>    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
80	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  entry  =  this.entries.iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  this.entries.iterator();	  Entry    <    K,    V>    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
81	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
82	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkIndex	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
83	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    -    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
84	[BUG]  [BUGGY]  new  EntryIterator(this,  index).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index).setValue(value  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index).setValue(value  -  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    -    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
85	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  *  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  *  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  *  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    -    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
86	[BUG]  [BUGGY]  Integer  index  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  index  =  entries.get(index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  index  =  entries.get(index);	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    dimension;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
87	[BUG]  [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
88	[BUG]  [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	int  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
89	[BUG]  [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
90	[BUG]  [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
91	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getKey());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getKey());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(current.getKey());	  Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
92	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue(),  value);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue(),  value);	  Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
93	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(value.getValue());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(value.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(value.getValue());	  Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
94	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.next();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.next();	  Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
95	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.next();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.next();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.next();	  Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
96	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index);	  Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
97	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
98	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
99	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.n  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.n  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.n	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
100	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
101	[BUG]  [BUGGY]  Entry  current  =(Entry)currents.iterator();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)currents.iterator();  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)currents.iterator();  checkIndex(current.getKey());	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
102	[BUG]  [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
103	[BUG]  [BUGGY]  addEntry(entry.getValue(),  value,  entry.getKey());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getValue(),  value,  entry.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  value,  entry.getKey());	  addEntry(entry.getValue(),    entry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
104	[BUG]  [BUGGY]  addEntry(entry.getValue(),  entry.getValue());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getValue(),  entry.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  entry.getValue());	  addEntry(entry.getValue(),    entry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
105	[BUG]  [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value,  DEFAULT_TOLERANCE);	  new    EntryIterator(this,    DEFAULT_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
106	[BUG]  [BUGGY]  new  EntryIterator(this,  current,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  current,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current,  value);	  new    EntryIterator(this,    DEFAULT_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
107	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(current.getValue());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(current.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index);  checkIndex(current.getValue());	  Entry    current    =(Entry)current.getKey();    checkIndex(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
108	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(current.getValue());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(current.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();  checkIndex(current.getValue());	  Entry    current    =(Entry)current.getKey();    checkIndex(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
109	[BUG]  [BUGGY]  Entry  current  =(Entry)this.current.getKey();  checkIndex(current.getValue());  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.current.getKey();  checkIndex(current.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.current.getKey();  checkIndex(current.getValue());	  Entry    current    =(Entry)current.getKey();    checkIndex(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
110	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getKey();  checkIndex(current.getValue());  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.getKey();  checkIndex(current.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.getKey();  checkIndex(current.getValue());	  Entry    current    =(Entry)current.getKey();    checkIndex(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
111	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  entries.keySet().iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  entries.keySet().iterator();	  Iterator    <    Entry>    iter    =    entries.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
112	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  entries.values().iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  entries.values().iterator();	  Iterator    <    Entry>    iter    =    entries.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
113	[BUG]  [BUGGY]  new  EntryIterator(this,  index).setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index).setValue(value  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index).setValue(value  +  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    +    1);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
114	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
115	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.remove(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.remove(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.remove(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  index;  i++)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  index;  i++)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  index;  i++)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
120	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
121	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
122	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
123	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
124	[BUG]  [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
125	[BUG]  [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	int  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
126	[BUG]  [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
127	[BUG]  [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  size  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
128	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
129	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
130	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  i++)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  i++)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  i++)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
131	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
132	[BUG]  [BUGGY]  Integer  res  =  entries.get(index  +  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  res  =  entries.get(index  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  res  =  entries.get(index  +  1);	  Integer    res    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
133	[BUG]  [BUGGY]  Integer  res  =  entries.get(index,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  res  =  entries.get(index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  res  =  entries.get(index,  value);	  Integer    res    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
134	[BUG]  [BUGGY]  Integer  res  =  entries.get(index  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  res  =  entries.get(index  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  res  =  entries.get(index  -  1);	  Integer    res    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
135	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.next();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.next();  checkIndex(index);	  Entry    current    =(Entry)current.next();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
136	[BUG]  [BUGGY]  Entry  current  =(Entry)entrySet.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entrySet.next();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entrySet.next();  checkIndex(index);	  Entry    current    =(Entry)current.next();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
137	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index);  checkIndex(index);	  Entry    current    =(Entry)current.next();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
138	[BUG]  [BUGGY]  new  EntryIterator(this,  this.value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this.value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this.value,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    this.value);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
139	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  this.value);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  this.value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  this.value);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    this.value);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
140	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
141	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
142	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryList.getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entryList.getValue();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entryList.getValue();  checkIndex(index);	  Entry    current    =(Entry)current.getValue();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
143	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue(index);  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue(index);  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue(index);  checkIndex(index);	  Entry    current    =(Entry)current.getValue();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
144	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entry.getValue();  checkIndex(index);	  Entry    current    =(Entry)current.getValue();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
145	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  current  =  entries.values().iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entries.values().iterator();	  Entry    <    K,    V>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
146	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  current  =  this.entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  this.entries.iterator();	  Entry    <    K,    V>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
147	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entry.iterator();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  current  =  entry.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entry.iterator();	  Entry    <    K,    V>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
148	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index);  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index);  checkIndex(current.getKey());	  Entry    current    =(Entry)current.getValue();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
149	[BUG]  [BUGGY]  Entry  current  =(Entry)this.current.getValue();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.current.getValue();  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.current.getValue();  checkIndex(current.getKey());	  Entry    current    =(Entry)current.getValue();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
150	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entryList.getValue();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entryList.getValue();  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entryList.getValue();  checkIndex(current.getKey());	  Entry    current    =(Entry)current.getValue();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
151	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue(index);  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue(index);  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue(index);  checkIndex(current.getKey());	  Entry    current    =(Entry)current.getValue();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
152	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
153	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
155	[BUG]  [BUGGY]  int  size  =  entries.size();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  int  size  =  entries.size();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	int  size  =  entries.size();	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
156	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  this.entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  this.entries.iterator();	  Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
157	[BUG]  [BUGGY]  Iterator  iter  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  entries.values().iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  entries.values().iterator();	  Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
158	[BUG]  [BUGGY]  Ilerator  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Ilerator  iter  =  entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Ilerator  iter  =  entries.iterator();	  Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
159	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entry.next();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entry.next();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
160	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entry.getValue();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entry.getValue();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
161	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(value);	  Entry    current    =(Entry)iter.next();    checkIndex(current);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
162	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  checkIndex(current);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.next();  checkIndex(current);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.next();  checkIndex(current);	  Entry    current    =(Entry)iter.next();    checkIndex(current);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
163	[BUG]  [BUGGY]  new  EntryIterator(this,  current).setValue(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  current).setValue(index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current).setValue(index);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(index);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
164	[BUG]  [BUGGY]  new  EntryIterator(this,  value).setValue(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  value).setValue(index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value).setValue(index);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(index);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
165	[BUG]  [BUGGY]  Entry  entry  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =  this.entries.iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =  this.entries.iterator();	  Entry    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
166	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entries.get(index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entries.get(index);	  Entry    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
167	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entries.iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entries.iterator();	  Entry    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
168	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index);  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index);  entry.setValue(current.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index);  entry.setValue(current.getValue());	  Entry    current    =(Entry)current.getValue();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
169	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.getValue();  entry.setValue(current.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.getValue();  entry.setValue(current.getValue());	  Entry    current    =(Entry)current.getValue();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
170	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entry.getValue();  entry.setValue(current.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entry.getValue();  entry.setValue(current.getValue());	  Entry    current    =(Entry)current.getValue();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
171	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.next();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.next();  entry.setValue(value);	  Entry    current    =(Entry)current.next();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
172	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.next();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.next();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.next();  entry.setValue(value);	  Entry    current    =(Entry)current.next();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
173	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entry.next();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entry.next();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entry.next();  entry.setValue(value);	  Entry    current    =(Entry)current.next();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
174	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(value    >=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
175	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }	  if(value    >=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
176	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()!=  value)  {  checkIndex(index);  }	  if(value    >=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
177	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index	  if(value    >=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
178	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
179	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
180	[BUG]  [BUGGY]  Entry  current  =(Entry)this.current.getValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.current.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.current.getValue();	  Entry    current    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
181	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue();	  Entry    current    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
182	[BUG]  [BUGGY]  Entry  current  =(Entry)this.entries.getValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)this.entries.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)this.entries.getValue();	  Entry    current    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
183	[BUG]  [BUGGY]  removeEntry(entry.getKey(),  value);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  removeEntry(entry.getKey(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	removeEntry(entry.getKey(),  value);	  removeEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
184	[BUG]  [BUGGY]  removeEntry(entry.getValue(),  index);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  removeEntry(entry.getValue(),  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	removeEntry(entry.getValue(),  index);	  removeEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
185	[BUG]  [BUGGY]  removeEntry(entries.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  removeEntry(entries.getValue(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	removeEntry(entries.getValue(),  value);	  removeEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
186	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)enter.    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
187	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)enter.    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
188	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries  ==  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  if(entries  ==  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries  ==  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)enter.    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  index;  ++i)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  index;  ++i)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  index;  ++i)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
191	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
192	[BUG]  [BUGGY]  addEntry(entry.getKey(),  index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  index);	  addEntry(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
193	[BUG]  [BUGGY]  addEntry(entry.getKey(),  value,  index);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  value,  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  value,  index);	  addEntry(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
194	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries  ==  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
195	[BUG]  [BUGGY]  addEntry(entry.getKey(),  index,  value);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  index,  value);	  addEntry(entry.getValue(),    index,    value);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
196	[BUG]  [BUGGY]  addEntry(entry.getValue(),  index,  value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getValue(),  index,  value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  index,  value,  DEFAULT_ZERO_TOLERANCE);	  addEntry(entry.getValue(),    index,    value);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
197	[BUG]  [BUGGY]  removeEntry(entry.getValue(),  index,  value);  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  removeEntry(entry.getValue(),  index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	removeEntry(entry.getValue(),  index,  value);	  addEntry(entry.getValue(),    index,    value);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
198	[BUG]  [BUGGY]  setEntry(entry.getValue(),  index,  value);  [CE]  illegal  start  of  expression  [FE]                              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getValue(),  index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getValue(),  index,  value);	  addEntry(entry.getValue(),    index,    value);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
199	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.current.getValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)this.current.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)this.current.getValue();	  Entry    entry    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
200	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.getValue();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entries.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entries.getValue();	  Entry    entry    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
201	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getKey();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)current.getKey();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getKey();	  Entry    entry    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
202	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  DEFAULT_ZERO_TOLERANCE,  value);	  new    EntryIterator(this,    index,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
203	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  index,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue(),  index,  value);	  addEntry(entry.getKey(),    entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
204	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue(),  value,  DEFAULT_ZERO_TOLERANCE);	  addEntry(entry.getKey(),    entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
205	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue(),  index);	  addEntry(entry.getKey(),    entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
206	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
207	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
208	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
209	[BUG]  [BUGGY]  Entry  <?>  current  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  current  =  this.entries.iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  current  =  this.entries.iterator();	  Entry    <?>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
210	[BUG]  [BUGGY]  Entry  <?>  current  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  current  =  entries.values().iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  current  =  entries.values().iterator();	  Entry    <?>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
211	[BUG]  [BUGGY]  Entry  <?>  current  =  entry.iterator();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  current  =  entry.iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  current  =  entry.iterator();	  Entry    <?>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
212	[BUG]  [BUGGY]  addEntry(entry.getValue(),  index  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getValue(),  index  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  index  +  1);	  addEntry(entry.getValue(),    index);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
213	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
214	[BUG]  [BUGGY]  if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
215	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  iter);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    iter);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
216	[BUG]  [BUGGY]  new  EntryIterator(this,  iter,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  iter,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  iter,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    iter);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
217	[BUG]  [BUGGY]  new  EntryIterator(this,  value,  iter);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  value,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    iter);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
218	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
219	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
220	[BUG]  [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
221	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
222	[BUG]  [BUGGY]  Entry  current  =(Entry)currents.get(index);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)currents.get(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)currents.get(index);	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
223	[BUG]  [BUGGY]  Entry  current  =(Entry)currents.iterator();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)currents.iterator();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)currents.iterator();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
224	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());	  Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
225	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey(),  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(current.getKey(),  value);	  Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    length    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    length    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
228	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  index);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  i++)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  i++)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  i++)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
230	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entries.values().iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entries.values().iterator();	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
231	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =(openIntToDoubleHashMap!=  null)?  this.entries.iterator()  :  new  OpenIntToDoubleHashMap();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =(openIntToDoubleHashMap!=  null)?  this.entries.iterator()  :  new  OpenIntToDoubleHashMap();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =(openIntToDoubleHashMap!=  null)?  this.entries.iterator()  :  new  OpenIntToDoubleHashMap();	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
232	[BUG]  [BUGGY]  new  EntryIterator(this,  iter);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  iter);	  new    EntryIterator(this,    index);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
233	[BUG]  [BUGGY]  createEntryIterator(this,  index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  createEntryIterator(this,  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	createEntryIterator(this,  index);	  new    EntryIterator(this,    index);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
234	[BUG]  [BUGGY]  new  EntryIterator(this,  entry);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  entry);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  entry);	  new    EntryIterator(this,    index);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
235	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  iter);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  iter);	  new    EntryIterator(this,    this);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
236	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  value);	  new    EntryIterator(this,    this);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
237	[BUG]  [BUGGY]  new  EntryIterator(this,  current);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  current);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current);	  new    EntryIterator(this,    value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
238	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  of  expression  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  of  expression	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
239	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
240	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  of  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  of  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  illegal  start  of	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
241	[BUG]  [BUGGY]  setEntry(entry.getKey(),  entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getKey(),  entry.getValue(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getKey(),  entry.getValue(),  value);	  setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
242	[BUG]  [BUGGY]  setEntry(entry.getKey(),  entry.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getKey(),  entry.getValue()  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getKey(),  entry.getValue()  +  1);	  setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
243	[BUG]  [BUGGY]  setEntry(entry.getKey(),  entry.getValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getKey(),  entry.getValue()  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getKey(),  entry.getValue()  -  1);	  setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
244	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(index  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(index  +  1);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(index  +  1);	  Entry    current    =(Entry)iter.next();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
245	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(index,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(index,  value);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(index,  value);	  Entry    current    =(Entry)iter.next();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
246	[BUG]  [BUGGY]  Entry  entry  =(Entry)this.current.getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)this.current.getValue();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)this.current.getValue();  entry.setValue(value);	  Entry    entry    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
247	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index);  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entries.get(index);  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entries.get(index);  entry.setValue(value);	  Entry    entry    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
248	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(index,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getValue();  entry.setValue(index,  value);	  Entry    entry    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
249	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  this.entries.iterator();	  Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
250	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
251	[BUG]  [BUGGY]  Entry  <?>  entry  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  entry  =  this.entries.iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  entry  =  this.entries.iterator();	  Entry    <?>    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
252	[BUG]  [BUGGY]  Entry  <?>  entry  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  entry  =  entries.values().iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  entry  =  entries.values().iterator();	  Entry    <?>    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
253	[BUG]  [BUGGY]  Entry  <?>  entry  =  entries.entrySet();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  entry  =  entries.entrySet();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  entry  =  entries.entrySet();	  Entry    <?>    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
254	[BUG]  [BUGGY]  new  EntryIterator(this,  index).setValue(value  /  2.0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index).setValue(value  /  2.0);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index).setValue(value  /  2.0);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
255	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  *  2.0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  *  2.0);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  *  2.0);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
256	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(index  /  2.0);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(index  /  2.0);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(index  /  2.0);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
257	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  of  expression  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  of  expression	  if(entry!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
258	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  of  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  of  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  of	  if(entry!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
259	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo	  if(entry!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
260	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  values);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  values);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  values);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    values);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
261	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values,  value);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    values);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
262	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  value  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  value  -  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value    -    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
263	[BUG]  [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE  -  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value    -    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
264	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value  /  1);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value  /  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value  /  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value    -    1);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
265	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    length    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
266	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    length    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
267	[BUG]  [BUGGY]  setEntry(entry.getKey(),  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getKey(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getKey(),  value);	  setEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
268	[BUG]  [BUGGY]  setEntry(entry.getValue(),  index);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getValue(),  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getValue(),  index);	  setEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
269	[BUG]  [BUGGY]  setValue(entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setValue(entry.getValue(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setValue(entry.getValue(),  value);	  setEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
270	[BUG]  [BUGGY]  setValue(entry.getKey(),  value);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setValue(entry.getKey(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setValue(entry.getKey(),  value);	  setEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
271	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)entry.next();    if(entry.    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
272	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  +  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entries.get(index  +  1);	  Entry    <    K,    V>    entry    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
273	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entries.get(index  -  1);	  Entry    <    K,    V>    entry    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
274	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  index;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  index;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  index;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
275	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
276	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
277	[BUG]  [BUGGY]  new  EntryIterator(this,  iter).setValue(value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  iter).setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  iter).setValue(value);	  new    EntryIterator(this,    current).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
278	[BUG]  [BUGGY]  new  EntryIterator(this,  entry).setValue(value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  entry).setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  entry).setValue(value);	  new    EntryIterator(this,    current).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
279	[BUG]  [BUGGY]  new  EntryIterator(this,  this).setValue(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this).setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this).setValue(value);	  new    EntryIterator(this,    DEFAULT_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
280	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(index,  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(index,  value);	  Entry    current    =(Entry)iter.next();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
281	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setKey(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setKey(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setKey(value);	  Entry    current    =(Entry)iter.next();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
282	[BUG]  [BUGGY]  ||  isDefaultValue(value))  {  entries.put(index,  entry);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  ||  isDefaultValue(value))  {  entries.put(index,  entry);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	||  isDefaultValue(value))  {  entries.put(index,  entry);	  &&    isDefaultValue(value))    {    entries.put(index,    entry);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
283	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  value);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  entries.put(index,  value);	  &&    isDefaultValue(value))    {    entries.put(index,    entry);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
284	[BUG]  [BUGGY]  &&  isEqualValue(value))  {  entries.put(index,  entry);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isEqualValue(value))  {  entries.put(index,  entry);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isEqualValue(value))  {  entries.put(index,  entry);	  &&    isDefaultValue(value))    {    entries.put(index,    entry);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
285	[BUG]  [BUGGY]  Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(value!=    0)    {    for(Iterator    iter    =    this.entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
286	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(value!=    0)    {    for(Iterator    iter    =    this.entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
287	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  DEFAULT_ZERO_TOLERANCE)  {  checkInde	  if(value!=    0)    {    for(Iterator    iter    =    this.entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
288	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
289	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
290	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  iter);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    iter);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
291	[BUG]  [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  value  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  value  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	int  size  =  entries.size();  for(int  i  =  0,  value  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
292	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  index);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  index);	  new    EntryIterator(this,    index);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
293	[BUG]  [BUGGY]  new  EntryIterator(this,  current).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  current).setValue(value  /  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current).setValue(value  /  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    current).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
294	[BUG]  [BUGGY]  new  EntryIterator(this,  current).setValue(index,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  current).setValue(index,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current).setValue(index,  value);	  new    EntryIterator(this,    current).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
295	[BUG]  [BUGGY]  new  EntryIterator(this,  current).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  current).setValue(value  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current).setValue(value  -  1);	  new    EntryIterator(this,    current).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
296	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entries.entrySet();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  current  =  entries.entrySet();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entries.entrySet();	  Entry    <    K,    V>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
297	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
298	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
299	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue();  checkIndex(index);	  Entry    current    =(Entry)current.getValue();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
300	[BUG]  [BUGGY]  Entry  current  =(Entry)entrySet.getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entrySet.getValue();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entrySet.getValue();  checkIndex(index);	  Entry    current    =(Entry)current.getValue();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
301	[BUG]  [BUGGY]  entry  =(Entry)entries.get(index);  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  entry  =(Entry)entries.get(index);  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	entry  =(Entry)entries.get(index);  entry.setValue(value);	  Entry    current    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
302	[BUG]  [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
303	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(1);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
304	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
305	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||  value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE  ||  value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE  ||  value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
306	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
307	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(value!=    0)    {    for(Iterator    iter    =    this.entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
308	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
309	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  index,  value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  value,  DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    index,    value);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
310	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
311	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
312	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
313	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =	  if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleH    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
314	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry	  if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleH    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
315	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =	  if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleH    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
316	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry	  if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleH    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
317	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
318	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value  -  1);	  new    EntryIterator(this,    this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
319	[BUG]  [BUGGY]  setEntry(entry.getValue(),  entry.getKey());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getValue(),  entry.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getValue(),  entry.getKey());	  setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
320	[BUG]  [BUGGY]  if(value  <  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(value    >=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
321	[BUG]  [BUGGY]  (OpenIntToDoubleHashMap)entry.n  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  (OpenIntToDoubleHashMap)entry.n  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	(OpenIntToDoubleHashMap)entry.n	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
322	[BUG]  [BUGGY]  (OpenIntToDoubleHashMap)entry.clone();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  (OpenIntToDoubleHashMap)entry.clone();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	(OpenIntToDoubleHashMap)entry.clone();	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
323	[BUG]  [BUGGY]  Entry  <?>  current  =  entry.getValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  current  =  entry.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  current  =  entry.getValue();	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
324	[BUG]  [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  entries.entrySet().iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  entries.entrySet().iterator();	  Iterator    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
325	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
326	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  end  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  end  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  end  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    length    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
327	[BUG]  [BUGGY]  new  EntryIterator(this,  value).setValue(value  /  2.0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  value).setValue(value  /  2.0);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value).setValue(value  /  2.0);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
328	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
329	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
330	[BUG]  [BUGGY]  Entry  entry  =  entries.values().iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =  entries.values().iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =  entries.values().iterator();	  Entry    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
331	[BUG]  [BUGGY]  Entry  entry  =(entries!=  null)?  entries.iterator()  :  null;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(entries!=  null)?  entries.iterator()  :  null;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(entries!=  null)?  entries.iterator()  :  null;	  Entry    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
332	[BUG]  [BUGGY]  Entry  entry  =  entries.entrySet();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =  entries.entrySet();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =  entries.entrySet();	  Entry    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
333	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue();  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue();  checkIndex(current.getKey());	  Entry    current    =(Entry)current.getValue();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
334	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.getValue();  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.getValue();  checkIndex(current.getKey());	  Entry    current    =(Entry)current.getValue();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
335	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
336	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
337	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
338	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
339	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
340	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  ==	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
341	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry!=  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry!=  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry!=	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
342	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value,  index);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value,  index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value,  index);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    this.value);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
343	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.get  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.get  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.get  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
344	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.next();  if(entry.get  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.next();  if(entry.get  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.next();  if(entry.get  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
345	[BUG]  [BUGGY]  Entry  current  =(Entry)entrySet.getValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entrySet.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entrySet.getValue();	  Entry    current    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
346	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
347	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =(this.entries!=  null)?  this.entries.iterator()  :  entries;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =(this.entries!=  null)?  this.entries.iterator()  :  entries;  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =(this.entries!=  null)?  this.entries.iterator()  :  entries;	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    this.entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
348	[BUG]  [BUGGY]  updateEntry(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  updateEntry(entry.getKey(),  entry.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	updateEntry(entry.getKey(),  entry.getValue());	  addEntry(entry.getKey(),    entry.getValue()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
349	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
350	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(ent  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(ent  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(ent	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)entry.next();    if(entry.    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
351	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)entry.next();    if(entry.    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
352	[BUG]  [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)enter.    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
353	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
354	[BUG]  [BUGGY]  if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
355	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entries.getValue();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entries.getValue();  entry.setValue(value);	  Entry    entry    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
356	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setKey(value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setKey(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getValue();  entry.setKey(value);	  Entry    entry    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
357	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index).getKey();  checkIndex(current.getValue());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index).getKey();  checkIndex(current.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index).getKey();  checkIndex(current.getValue());	  Entry    current    =(Entry)current.getKey();    checkIndex(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
358	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  currents.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
359	[BUG]  [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
360	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
361	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey().equals(value))  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey().equals(value))  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey().equals(value))  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
362	[BUG]  [BUGGY]  addEntry(entry.getValue(),  entry.getKey(),  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getValue(),  entry.getKey(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  entry.getKey(),  value);	  addEntry(entry.getValue(),    entry.getKey());    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
363	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
364	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
365	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.get(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
366	[BUG]  [BUGGY]  removeEntry(entry.getKey(),  entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  removeEntry(entry.getKey(),  entry.getValue(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	removeEntry(entry.getKey(),  entry.getValue(),  value);	  addEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
367	[BUG]  [BUGGY]  new  EntryIterator(this,  value).setValue(DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  value).setValue(DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value).setValue(DEFAULT_ZERO_TOLERANCE);	  new    EntryIterator(this,    DEFAULT_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
368	[BUG]  [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
369	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
370	[BUG]  [BUGGY]  if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
371	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
372	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
373	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
374	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  index);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
375	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());	  if(entries!=    null)    {    for(Iterator    iter    =    currents.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
376	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
377	[BUG]  [BUGGY]  if(dimension!=  0)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(dimension!=  0)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(dimension!=  0)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    dimension;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
378	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  dimension  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  dimension  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  dimension  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    dimension;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
379	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setKey(entry.getKey());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setKey(entry.getKey());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getValue();  entry.setKey(entry.getKey());	  Entry    entry    =(Entry)current.getValue();    entry.setValue(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
380	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  entries.put(index,  DEFAULT_ZERO_TOLERANCE);	  &&    isDefaultValue(value))    {    entries.put(index,    entry);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
381	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  entry);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  entry);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  entries.put(index,  entry);  }	  &&    isDefaultValue(value))    {    entries.put(index,    entry);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
382	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.next();  setEntry(current,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.next();  setEntry(current,  value);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.next();  setEntry(current,  value);	  Entry    current    =(Entry)iter.next();    setEntry(current,    value);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
383	[BUG]  [BUGGY]  Iterator  <  OpenIntToDouble>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDouble>  iter  =  entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDouble>  iter  =  entries.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    ==    illegal    start    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
384	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDo  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDo  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDo	  if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDo    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
385	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDo  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDo  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDo	  if(value    ==    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDo    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
386	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue();  entry.setValue(current.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue();  entry.setValue(current.getValue());	  Entry    current    =(Entry)current.getValue();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
387	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    check    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
388	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
389	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
390	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
391	[BUG]  [BUGGY]  Entry  current  =(Entry)entrySet.getValue();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entrySet.getValue();  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entrySet.getValue();  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
392	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.getValue(index);  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.getValue(index);  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.getValue(index);  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
393	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkInde    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
394	[BUG]  [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  value  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  int  size  =  entries.size();  for(int  i  =  0,  value  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	int  size  =  entries.size();  for(int  i  =  0,  value  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
395	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
396	[BUG]  [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
397	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
398	[BUG]  [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
399	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  current.entryIterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  current.entryIterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  current.entryIterator();	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    entry.iterator();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
400	[BUG]  [BUGGY]  Ilerator  <  OpenIntToDoubleHashMap>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Ilerator  <  OpenIntToDoubleHashMap>  iter  =  entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Ilerator  <  OpenIntToDoubleHashMap>  iter  =  entries.iterator();	  Iterator    <    OpenIntToDoubleHashMap>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
401	[BUG]  [BUGGY]  if(value!=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
402	[BUG]  [BUGGY]  Entry  entry  =(Entry)entry.next();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entry.next();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entry.next();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
403	[BUG]  [BUGGY]  Ilerator  <  Entry>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Ilerator  <  Entry>  iter  =  entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Ilerator  <  Entry>  iter  =  entries.iterator();	  Iterator    <    Entry>    iter    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
404	[BUG]  [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE,  epsilon);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE,  epsilon);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE,  epsilon);	  new    EntryIterator(this,    value,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
405	[BUG]  [BUGGY]  new  EntryIterator(this,  null);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  null);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  null);	  new    EntryIterator(this,    this);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
406	[BUG]  [BUGGY]  new  EntryIterator(this,  this.current);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  this.current);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this.current);	  new    EntryIterator(this,    this);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
407	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkInde    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
408	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(ent  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(ent  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(ent	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
409	[BUG]  [BUGGY]  Entry  <?>  current  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  current  =  entries.get(index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  current  =  entries.get(index);	  Entry    <?>    current    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
410	[BUG]  [BUGGY]  Iterator  iter  =  current.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  iter  =  current.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  current.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }	  Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
411	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  end  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  end  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  end  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    length    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
412	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
413	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(0,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
414	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
415	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value,  this.value);  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value,  this.value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value,  this.value);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value,    iter);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
416	[BUG]  [BUGGY]  Entry  current  =(Entry)entryList.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entryList.next();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entryList.next();  checkIndex(index);	  Entry    current    =(Entry)current.next();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
417	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
418	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
419	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
420	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
421	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  value  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
422	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
423	[BUG]  [BUGGY]  if(value!=  0)  {  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.	  if(entry!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
424	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
425	[BUG]  [BUGGY]  Integer  res  =  entries.get(index,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  res  =  entries.get(index,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  res  =  entries.get(index,  DEFAULT_ZERO_TOLERANCE);	  Integer    res    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
426	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(value    >=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
427	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(value    >=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
428	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(current,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(current,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  setEntry(current,  DEFAULT_ZERO_TOLERANCE,  value);	  Entry    current    =(Entry)iter.next();    setEntry(current,    value);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
429	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(current,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(current,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  setEntry(current,  DEFAULT_ZERO_TOLERANCE);	  Entry    current    =(Entry)iter.next();    setEntry(current,    value);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
430	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
431	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    ==    illegal    start    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
432	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    ==    illegal    start    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
433	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value,  iter);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    this.value);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
434	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value  -  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value  -  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value  -  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    this.value);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
435	[BUG]  [BUGGY]  Entry  <?>  entry  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <?>  entry  =  entries.entrySet().iterator();  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  entry  =  entries.entrySet().iterator();	  Entry    <?>    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
436	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    check    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
437	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.get  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.get  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.get	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    check    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
438	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValu  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValu  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValu	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    check    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
439	[BUG]  [BUGGY]  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.	  if(entry!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
440	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index).getValue();  entry.setValue(value);	  Entry    current    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
441	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
442	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
443	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
444	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.values);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.values);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.values);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    values);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
445	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values,  iter);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values,  iter);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values,  iter);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    values);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
446	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_TOLERANCE).setValue(value  /  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_TOLERANCE).setValue(value  /  1);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_TOLERANCE).setValue(value  /  1);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    -    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
447	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(value!=    0)    {    for(Iterator    iter    =    this.entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
448	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
449	[BUG]  [BUGGY]  Integer  index  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  index  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  index  =  entries.size();  for(int  i  =  0,  size  =  value;  i  <  size;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
450	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
451	[BUG]  [BUGGY]  ((  OpenIntToDoubleHashMap)entry).setValue(value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  ((  OpenIntToDoubleHashMap)entry).setValue(value);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	((  OpenIntToDoubleHashMap)entry).setValue(value);	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
452	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.n  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.n  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.n	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
453	[BUG]  [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  openIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.n    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
454	[BUG]  [BUGGY]  Integer  res  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Integer  res  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  res  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    int    size    =    entries.size();    for(int    i    =    0,    size    =    size;    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
455	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index++);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index++);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entries.get(index++);	  Entry    <    K,    V>    entry    =    entries.get(index);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
456	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  new  Double(value));  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  new  Double(value));  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  entries.put(index,  new  Double(value));	  &&    isDefaultValue(value))    {    entries.put(index,    entry);    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
457	[BUG]  [BUGGY]  Entry  entry  =(Entry)entries.get(index);  entry.setValue(entry.getValue());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)entries.get(index);  entry.setValue(entry.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)entries.get(index);  entry.setValue(entry.getValue());	  Entry    entry    =(Entry)current.getValue();    entry.setValue(entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
458	[BUG]  [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
459	[BUG]  [BUGGY]  setEntry(entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getValue(),  DEFAULT_ZERO_TOLERANCE);	  setEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
460	[BUG]  [BUGGY]  if(entries.containsKey(index))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries.containsKey(index))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries.containsKey(index))  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
461	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  N,  V>  entry  =  entries.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  N,  V>  entry  =  entries.iterator();	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDo    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
462	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index).getValue();  checkIndex(index);	  Entry    current    =(Entry)current.getValue();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
463	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.getValue();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.getValue();  checkIndex(index);	  Entry    current    =(Entry)current.getValue();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
464	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
465	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  checkIndex(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  checkIndex(current.getValue());  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  checkIndex(current.getValue());  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
466	[BUG]  [BUGGY]  Entry  entry  =(entries!=  null)?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(entries!=  null)?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(entries!=  null)?  entries.iterator()  :  DEFAULT_ZERO_TOLERANCE;	  Entry    entry    =    entries.iterator();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
467	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
468	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
469	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
470	[BUG]  [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  <  =  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
471	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
472	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current,  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(current,  value);	  Entry    current    =(Entry)iter.next();    checkIndex(current);    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
473	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  2);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  2);	  new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
474	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getVal  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getVal  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getVal	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
475	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value)  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value)  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value)	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
476	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entrySet.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entrySet.iterator();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entrySet.iterator();	  Iterator    <    OpenIntToDoubleHashMap>    entries    =    entry.iterator();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
477	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.next();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.next();  checkIndex(index);	  Entry    current    =(Entry)current.next();    checkIndex(index);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
478	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  index  =  entries.size();  i  <  index;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  index  =  entries.size();  i  <  index;  i++)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  index  =  entries.size();  i  <  index;  i++)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
479	[BUG]  [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  dimension  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  dimension  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(int  i  =  0,  dimension  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    dimension;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
480	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getKey();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)current.getKey();  entry.setValue(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getKey();  entry.setValue(value);	  Entry    entry    =(Entry)current.getValue();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
481	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.getValue();	  Entry    current    =(Entry)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
482	[BUG]  [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
483	[BUG]  [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  N,  V>  entry  =  entries.get(index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  N,  V>  entry  =  entries.get(index);	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
484	[BUG]  [BUGGY]  Entry  <  N,  E>  entry  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  <  N,  E>  entry  =  entries.get(index);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  N,  E>  entry  =  entries.get(index);	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
485	[BUG]  [BUGGY]  addEntry(entry.getKey(),  value,  iter.getValue());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  value,  iter.getValue());  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  value,  iter.getValue());	  addEntry(entry.getKey(),    value);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
486	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkInde    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
487	[BUG]  [BUGGY]  setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);	  setEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
488	[BUG]  [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(0);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(0);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(0);  }	  if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(0);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
489	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(current.getKey(),  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(current.getKey(),  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();  checkIndex(current.getKey(),  value);	  Entry    current    =(Entry)current.getValue();    checkIndex(current.getKey());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
490	[BUG]  [BUGGY]  Entry  entry  =(Entry)iter.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  entry  =(Entry)iter.next();  checkIndex(index);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)iter.next();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    entry    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
491	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry!=  illegal  start  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry!=  illegal  start  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry!=  illegal  start	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
492	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index).getValue();	  Entry    current    =(Entry)current.getValue();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
493	[BUG]  [BUGGY]  if(entry!=  null)  {  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entry!=  null)  {  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entry!=  null)  {  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.	  if(value    >    0)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)enter.    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
494	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  -  1,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  -  1,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue()  -  1,  DEFAULT_ZERO_TOLERANCE);	  addEntry(entry.getKey(),    entry.getValue(),    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
495	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue()  +  1);  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue()  +  1);	  Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
496	[BUG]  [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
497	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(value,  DEFAULT_ZERO_TOLERANCE);	  Entry    current    =(Entry)iter.next();    entry.setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
498	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
499	[BUG]  [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    check    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
500	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  ||  value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE  ||  value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE  ||  value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
501	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.add(index);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.add(index);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.add(index);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(index);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
502	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE  +  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE  +  value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE  +  value);	  new    EntryIterator(this,    value);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
503	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getKey();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)current.getKey();  entry.setValue(current.getValue());  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getKey();  entry.setValue(current.getValue());	  Entry    current    =(Entry)current.getValue();    entry.setValue(current.getValue());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
504	[BUG]  [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entries.get(index).getValue();  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entries.get(index).getValue();  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
505	[BUG]  [BUGGY]  Entry  current  =(Entry)entry.getValue();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  Entry  current  =(Entry)entry.getValue();  checkIndex(value);  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)entry.getValue();  checkIndex(value);	  Entry    current    =(Entry)current.getValue();    checkIndex(value);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
506	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  }	  if(value!=    0)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
507	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  }  [BUGGY]        [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)entry.next();    if(entry.    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
508	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  index  =  entries.size();  i  <  index;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0      [CONTEXT]      public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }      [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  index  =  entries.size();  i  <  index;  ++i)  {  entries.put(index,  value);  }  [BUGGY]      }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  index  =  entries.size();  i  <  index;  ++i)  {  entries.put(index,  value);  }	  if(value!=    DEFAULT_ZERO_TOLERANCE)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
