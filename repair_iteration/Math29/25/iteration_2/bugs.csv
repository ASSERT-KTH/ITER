bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  check	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
7	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
8	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  check	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
9	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleH  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleH  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleH	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleH  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleH  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleH	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  ==  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDo	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
13	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(index);  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Iterator  <  Entry>  iter  =  entries.iterator();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  entries.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  Entry  current  =(Entry)current.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.next();  checkIndex(index);  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.next();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Iterator  iter  =  entries.iterator();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  entries.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  <  K,  V>  current  =  entries.get(index);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entries.get(index);	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Iterator  <  Entry>  iter  =  entries.entrySet().iterator();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  Entry>  iter  =  entries.entrySet().iterator();	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  check	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  ++i)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.getValue();  entry.setValue(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();  entry.setValue(value);	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  Entry  current  =(Entry)current.next();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.next();  entry.setValue(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.next();  entry.setValue(value);	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getValue();  entry.setValue(value);	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  <  K,  V>  entry  =  entries.iterator();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entries.iterator();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
30	[BUG]  [BUGGY]  new  EntryIterator(this,  index,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  index,  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index,  value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value,  DEFAULT_ZERO_TOLERANCE);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value,  iter);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value,  iter);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value,  iter);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this,  DEFAULT_ZERO_TOLERANCE,  value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
34	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(current.getKey());  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();  checkIndex(current.getKey());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
35	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getKey();  checkIndex(current.getValue());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.getKey();  checkIndex(current.getValue());  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getKey();  checkIndex(current.getValue());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
36	[BUG]  [BUGGY]  addEntry(entry.getKey(),  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  addEntry(entry.getKey(),  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  value);	      addEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
37	[BUG]  [BUGGY]  addEntry(entry.getValue(),  index);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  addEntry(entry.getValue(),  index);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  index);	      addEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  removeEntry(entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  removeEntry(entry.getValue(),  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	removeEntry(entry.getValue(),  value);	      addEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  addEntry(entry.getValue(),  index,  value);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  addEntry(entry.getValue(),  index,  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  index,  value);	      addEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  Entry  <?>  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  <?>  entry  =  entries.iterator();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  entry  =  entries.iterator();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    entry.next().setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
41	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(value);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.getValue();  checkIndex(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();  checkIndex(value);	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.getValue();  entry.setValue(current.getValue());  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();  entry.setValue(current.getValue());	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  Entry  current  =(Entry)current.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.next();  entry.setValue(current.getValue());  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.next();  entry.setValue(current.getValue());	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  Entry  current  =(Entry)current.getValue();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)current.getValue();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)current.getValue();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
45	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue(),  value);	      addEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  addEntry(entry.getKey(),  entry.getValue()  +  1);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue()  +  1);	      addEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  addEntry(entry.getValue(),  entry.getKey());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  addEntry(entry.getValue(),  entry.getKey());  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getValue(),  entry.getKey());	      addEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
48	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  int  size  =  entries.size();  for(int  i  =  0,  size  =  size;  i  <  size;  i++)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  <  K,  V>  entry  =  entries.get(index);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  entry  =  entries.get(index);	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  Integer  res  =  entries.get(index);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Integer  res  =  entries.get(index);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Integer  res  =  entries.get(index);	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  Entry  <  K,  V>  current  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  <  K,  V>  current  =  entries.iterator();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <  K,  V>  current  =  entries.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    setEntry(current,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  new  EntryIterator(this,  value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
56	[BUG]  [BUGGY]  new  EntryIterator(this,  index);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  index);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  values);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  new  EntryIterator(this,  index).setValue(value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  index).setValue(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  index).setValue(value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  +  1);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  +  1);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
60	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  -  1);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  -  1);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
61	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
62	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
63	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  this.entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
64	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
65	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  entry  =(Entry)current.getValue();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getValue();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
66	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(i,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.put(0,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
68	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.get(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
69	[BUG]  [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >=  0)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
75	[BUG]  [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.n  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.n  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value  >  0)  {  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)enter.n	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
76	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkInde	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.iterator();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  iter  =  entries.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getValue    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
80	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  entry.iterator();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  entry.iterator();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  entry.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getValue    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
81	[BUG]  [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entries.iterator();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entries.iterator();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  <  OpenIntToDoubleHashMap>  entries  =  this.entries.iterator();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getValue    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
82	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(index);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(index);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(index);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
83	[BUG]  [BUGGY]  new  EntryIterator(this,  current).setValue(value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  current).setValue(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  current).setValue(value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
84	[BUG]  [BUGGY]  setEntry(entry.getValue(),  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  setEntry(entry.getValue(),  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getValue(),  value);	      addEntry(entry.getValue(),    value);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
85	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.get(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
86	[BUG]  [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
87	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(i);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
88	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(index);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value  -  1);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  value  -  1);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
90	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
91	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  ==  illegal  start	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
92	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
93	[BUG]  [BUGGY]  new  EntryIterator(this,  this);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  this);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  this);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
94	[BUG]  [BUGGY]  Entry  <?>  current  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  <?>  current  =  entries.iterator();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  <?>  current  =  entries.iterator();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    entry.next().setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
95	[BUG]  [BUGGY]  setEntry(entry.getKey(),  entry.getValue());  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  setEntry(entry.getKey(),  entry.getValue());  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	setEntry(entry.getKey(),  entry.getValue());	      addEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
97	[BUG]  [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
98	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(current.getValue());  }	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
99	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(i,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
100	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  i++)  {  entries.put(0,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(i,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
101	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  ++i)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
102	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
103	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getKey()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getKey()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
104	[BUG]  [BUGGY]  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entry!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry.get	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
105	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.n	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getKey()    ==    value)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
106	[BUG]  [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  dimension;  ++i)  {  entries.remove(index);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
107	[BUG]  [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(int  i  =  0,  size  =  entries.size();  i  <  size;  ++i)  {  entries.remove(0);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    ++i)    {    entries.remove(i);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
108	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(value);	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
109	[BUG]  [BUGGY]  Entry  entry  =  entries.iterator();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  entry  =  entries.iterator();  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =  entries.iterator();	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
110	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
111	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue()  ==  value)  {  checkIndex(index);  }  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue()    ==    value)    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
112	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(current,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)iter.next();  setEntry(current,  value);  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  setEntry(current,  value);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    setEntry(current,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
113	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)iter.next();  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    setEntry(current,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  this.value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
115	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  iter);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  iter);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE,  iter);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE,    value);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
116	[BUG]  [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  addEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	addEntry(entry.getKey(),  entry.getValue(),  DEFAULT_ZERO_TOLERANCE);	      addEntry(entry.getKey(),    entry.getValue());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
117	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  entry.setValue(current.getValue());	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
118	[BUG]  [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getValue());  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getValue());  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  entry  =(Entry)current.getValue();  entry.setValue(entry.getValue());	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    entry.setValue(current.getValue());    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
119	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_TOLERANCE,  value);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_TOLERANCE,  value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_TOLERANCE,  value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
120	[BUG]  [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(value!=  DEFAULT_ZERO_TOLERANCE)  {  for(int  i  =  0,  length  =  entries.size();  i  <  size;  i++)  {  entries.put(index,  value);  }	      if(entries!=    null)    {    for(int    i    =    0,    size    =    entries.size();    i    <    size;    i++)    {    entries.put(index,    value);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
121	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_TOLERANCE).setValue(value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_TOLERANCE).setValue(value);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_TOLERANCE).setValue(value);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
122	[BUG]  [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  2.0);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  2.0);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	new  EntryIterator(this,  DEFAULT_ZERO_TOLERANCE).setValue(value  /  2.0);	      new    EntryIterator(this,    DEFAULT_ZERO_TOLERANCE).setValue(value);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
123	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(index);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(index);  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(index);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
124	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  entry  =(Entry)iter.next();  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
125	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  currents.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  checkIndex(index);  }	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
126	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current);  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(current);	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  entry);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  &&  isDefaultValue(value))  {  entries.put(index,  entry);  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	&&  isDefaultValue(value))  {  entries.put(index,  entry);	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.getValue    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
128	[BUG]  [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());  [BUGGY]    }  [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	Entry  current  =(Entry)iter.next();  checkIndex(current.getKey());	      if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    checkIndex(current.getKey());    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
129	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)iter.next();  if(entry	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
130	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  OpenIntToDoubleHashMap  entry  =(OpenIntToDoubleHashMap)entry.next();  if(entry.	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    OpenIntToDoubleHashMap    entry    =(OpenIntToDoubleHashMap)iter.next();    if(entry.get    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
131	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(index  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(index  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(index	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
132	[BUG]  [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  entry  #0    [CONTEXT]    public  void  setEntry(int  index,  double  value)  {  checkIndex(index);  if  (!isDefaultValue(value))  {  entries.put(index,  value);  }  else  if  (entries.containsKey(index))  {  entries.remove(index);  }    [BUGGY]  if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(  [BUGGY]      [CLASS]  OpenMapRealVector  OpenMapEntry  OpenMapSparseIterator  [METHOD]  setEntry  [RETURN_TYPE]  void  int  index  double  value  [VARIABLES]  Entry  current  boolean  double  DEFAULT_ZERO_TOLERANCE  d  delta  epsilon  max  res  value  Iterator  iter  OpenIntToDoubleHashMap  entries  larger  randomAccess  long  serialVersionUID  int  dimension  end  expectedSize  i  index  key  n  resize  virtualSize  	projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java	0.3273268353539886	594	594	3	replace	if(entries!=  null)  {  for(Iterator  iter  =  entries.iterator();  iter.hasNext();)  {  Entry  current  =(Entry)iter.next();  if(current.getValue().equals(value))  {  checkIndex(	  if(entries!=    null)    {    for(Iterator    iter    =    entries.iterator();    iter.hasNext();)    {    Entry    current    =(Entry)iter.next();    if(current.getValue().equals(value))    {    checkIndex(index);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
