projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();virtualSize=current.getDimension();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();virtualSize=v.getDimension();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();if(current.getValue().equals(v.getValue())){continue;}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();if(current.getValue().equals(v.getValue())){returnnewOpenMapRealV
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();virtualSize=current.getDimension();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){finalOpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();virtualSize=current.getDimension();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();virtualSize=current.getDimension();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183if(value==DEFAULT_ZERO_TOLERANCE){for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();virtualSize+=iter.getDimension();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();while(iter.hasNext()){virtualSize=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();while(iter.hasNext()){virtualSize=iter.next();epsilon=iter.next();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183Iteratoriter=entries.iterator();
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183Iterator<Entry>iter=entries.iterator();while(iter.hasNext()){virtualSize=iter.next();epsilon=iter.next();}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183newOpenMapRealVector(v.getEntries(),virtualSize,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183newOpenMapRealVectorIterator(entries,virtualSize,epsilon);
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183newOpenMapRealVectorIterator(value,virtualSize,v.getEntries());
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();entry.setValue(v.getValue());}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();if(v.getName().equals(v.getName())){return
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();if(v.getValue()!=null){returnnewOpenMapRealV
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();if(v.getName().equals(v.getName())){
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorcurrent=(OpenMapRealVector)iter.next();entry.setValue(current);}
projects/Math29/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java183for(Iteratoriter=entries.iterator();iter.hasNext();){OpenMapRealVectorv=(OpenMapRealVector)iter.next();if(v.getName().equals(v.getName())){continue
